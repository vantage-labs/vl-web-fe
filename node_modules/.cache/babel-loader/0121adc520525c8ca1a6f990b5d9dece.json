{"ast":null,"code":"function resolveElements(elementOrSelector, scope, selectorCache) {\n  var _a;\n\n  if (elementOrSelector instanceof Element) {\n    return [elementOrSelector];\n  } else if (typeof elementOrSelector === \"string\") {\n    let root = document;\n\n    if (scope) {\n      // TODO: Refactor to utils package\n      // invariant(\n      //     Boolean(scope.current),\n      //     \"Scope provided, but no element detected.\"\n      // )\n      root = scope.current;\n    }\n\n    const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n    return elements ? Array.from(elements) : [];\n  }\n\n  return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/motion-dom/dist/es/utils/resolve-elements.mjs"],"names":["resolveElements","elementOrSelector","scope","selectorCache","_a","Element","root","document","current","elements","querySelectorAll","Array","from"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,iBAAzB,EAA4CC,KAA5C,EAAmDC,aAAnD,EAAkE;AAC9D,MAAIC,EAAJ;;AACA,MAAIH,iBAAiB,YAAYI,OAAjC,EAA0C;AACtC,WAAO,CAACJ,iBAAD,CAAP;AACH,GAFD,MAGK,IAAI,OAAOA,iBAAP,KAA6B,QAAjC,EAA2C;AAC5C,QAAIK,IAAI,GAAGC,QAAX;;AACA,QAAIL,KAAJ,EAAW;AACP;AACA;AACA;AACA;AACA;AACAI,MAAAA,IAAI,GAAGJ,KAAK,CAACM,OAAb;AACH;;AACD,UAAMC,QAAQ,GAAG,CAACL,EAAE,GAAGD,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,aAAa,CAACF,iBAAD,CAAjF,MAA0G,IAA1G,IAAkHG,EAAE,KAAK,KAAK,CAA9H,GAAkIA,EAAlI,GAAuIE,IAAI,CAACI,gBAAL,CAAsBT,iBAAtB,CAAxJ;AACA,WAAOQ,QAAQ,GAAGE,KAAK,CAACC,IAAN,CAAWH,QAAX,CAAH,GAA0B,EAAzC;AACH;;AACD,SAAOE,KAAK,CAACC,IAAN,CAAWX,iBAAX,CAAP;AACH;;AAED,SAASD,eAAT","sourcesContent":["function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n"]},"metadata":{},"sourceType":"module"}