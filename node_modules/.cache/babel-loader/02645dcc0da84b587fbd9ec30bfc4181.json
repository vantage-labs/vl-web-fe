{"ast":null,"code":"import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative(_ref) {\n  var swiper = _ref.swiper,\n      extendParams = _ref.extendParams,\n      on = _ref.on;\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n\n  var getTranslateValue = function getTranslateValue(value) {\n    if (typeof value === 'string') return value;\n    return \"\".concat(value, \"px\");\n  };\n\n  var setTranslate = function setTranslate() {\n    var slides = swiper.slides,\n        wrapperEl = swiper.wrapperEl,\n        slidesSizesGrid = swiper.slidesSizesGrid;\n    var params = swiper.params.creativeEffect;\n    var multiplier = params.progressMultiplier;\n    var isCenteredSlides = swiper.params.centeredSlides;\n\n    if (isCenteredSlides) {\n      var margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = \"translateX(calc(50% - \".concat(margin, \"px))\");\n    }\n\n    var _loop = function _loop(i) {\n      var slideEl = slides[i];\n      var slideProgress = slideEl.progress;\n      var progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      var originalProgress = progress;\n\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n\n      var offset = slideEl.swiperSlideOffset;\n      var t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      var r = [0, 0, 0];\n      var custom = false;\n\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n\n      var data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      } // set translate\n\n\n      t.forEach(function (value, index) {\n        t[index] = \"calc(\".concat(value, \"px + (\").concat(getTranslateValue(data.translate[index]), \" * \").concat(Math.abs(progress * multiplier), \"))\");\n      }); // set rotates\n\n      r.forEach(function (value, index) {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      var translateString = t.join(', ');\n      var rotateString = \"rotateX(\".concat(r[0], \"deg) rotateY(\").concat(r[1], \"deg) rotateZ(\").concat(r[2], \"deg)\");\n      var scaleString = originalProgress < 0 ? \"scale(\".concat(1 + (1 - data.scale) * originalProgress * multiplier, \")\") : \"scale(\".concat(1 - (1 - data.scale) * originalProgress * multiplier, \")\");\n      var opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      var transform = \"translate3d(\".concat(translateString, \") \").concat(rotateString, \" \").concat(scaleString); // Set shadows\n\n      if (custom && data.shadow || !custom) {\n        var shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n\n        if (shadowEl) {\n          var shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n\n      var targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    };\n\n    for (var i = 0; i < slides.length; i += 1) {\n      _loop(i);\n    }\n  };\n\n  var setTransition = function setTransition(duration) {\n    var transformElements = swiper.slides.map(function (slideEl) {\n      return getSlideTransformEl(slideEl);\n    });\n    transformElements.forEach(function (el) {\n      el.style.transitionDuration = \"\".concat(duration, \"ms\");\n      el.querySelectorAll('.swiper-slide-shadow').forEach(function (shadowEl) {\n        shadowEl.style.transitionDuration = \"\".concat(duration, \"ms\");\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper: swiper,\n      duration: duration,\n      transformElements: transformElements,\n      allSlides: true\n    });\n  };\n\n  effectInit({\n    effect: 'creative',\n    swiper: swiper,\n    on: on,\n    setTranslate: setTranslate,\n    setTransition: setTransition,\n    perspective: function perspective() {\n      return swiper.params.creativeEffect.perspective;\n    },\n    overwriteParams: function overwriteParams() {\n      return {\n        watchSlidesProgress: true,\n        virtualTranslate: !swiper.params.cssMode\n      };\n    }\n  });\n}","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/swiper/modules/effect-creative/effect-creative.js"],"names":["createShadow","effectInit","effectTarget","effectVirtualTransitionEnd","getSlideTransformEl","EffectCreative","swiper","extendParams","on","creativeEffect","limitProgress","shadowPerProgress","progressMultiplier","perspective","prev","translate","rotate","opacity","scale","next","getTranslateValue","value","setTranslate","slides","wrapperEl","slidesSizesGrid","params","multiplier","isCenteredSlides","centeredSlides","margin","slidesOffsetBefore","style","transform","i","slideEl","slideProgress","progress","Math","min","max","originalProgress","offset","swiperSlideOffset","t","cssMode","r","custom","isHorizontal","data","forEach","index","abs","zIndex","round","length","translateString","join","rotateString","scaleString","opacityString","shadow","shadowEl","querySelector","shadowOpacity","targetEl","origin","transformOrigin","setTransition","duration","transformElements","map","el","transitionDuration","querySelectorAll","allSlides","effect","overwriteParams","watchSlidesProgress","virtualTranslate"],"mappings":"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","sourcesContent":["import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}"]},"metadata":{},"sourceType":"module"}