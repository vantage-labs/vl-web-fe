{"ast":null,"code":"'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar toString = require('../internals/to-string');\n\nvar whitespaces = require('../internals/whitespaces');\n\nvar replace = uncurryThis(''.replace);\nvar ltrim = RegExp('^[' + whitespaces + ']+');\nvar rtrim = RegExp('(^|[^' + whitespaces + '])[' + whitespaces + ']+$'); // `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\n\nvar createMethod = function createMethod(TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = replace(string, ltrim, '');\n    if (TYPE & 2) string = replace(string, rtrim, '$1');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/core-js/internals/string-trim.js"],"names":["uncurryThis","require","requireObjectCoercible","toString","whitespaces","replace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","module","exports","start","end","trim"],"mappings":"AAAA;;AACA,IAAIA,WAAW,GAAGC,OAAO,CAAC,oCAAD,CAAzB;;AACA,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,uCAAD,CAApC;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,0BAAD,CAAzB;;AAEA,IAAII,OAAO,GAAGL,WAAW,CAAC,GAAGK,OAAJ,CAAzB;AACA,IAAIC,KAAK,GAAGC,MAAM,CAAC,OAAOH,WAAP,GAAqB,IAAtB,CAAlB;AACA,IAAII,KAAK,GAAGD,MAAM,CAAC,UAAUH,WAAV,GAAwB,KAAxB,GAAgCA,WAAhC,GAA8C,KAA/C,CAAlB,C,CAEA;;AACA,IAAIK,YAAY,GAAG,SAAfA,YAAe,CAAUC,IAAV,EAAgB;AACjC,SAAO,UAAUC,KAAV,EAAiB;AACtB,QAAIC,MAAM,GAAGT,QAAQ,CAACD,sBAAsB,CAACS,KAAD,CAAvB,CAArB;AACA,QAAID,IAAI,GAAG,CAAX,EAAcE,MAAM,GAAGP,OAAO,CAACO,MAAD,EAASN,KAAT,EAAgB,EAAhB,CAAhB;AACd,QAAII,IAAI,GAAG,CAAX,EAAcE,MAAM,GAAGP,OAAO,CAACO,MAAD,EAASJ,KAAT,EAAgB,IAAhB,CAAhB;AACd,WAAOI,MAAP;AACD,GALD;AAMD,CAPD;;AASAC,MAAM,CAACC,OAAP,GAAiB;AACf;AACA;AACAC,EAAAA,KAAK,EAAEN,YAAY,CAAC,CAAD,CAHJ;AAIf;AACA;AACAO,EAAAA,GAAG,EAAEP,YAAY,CAAC,CAAD,CANF;AAOf;AACA;AACAQ,EAAAA,IAAI,EAAER,YAAY,CAAC,CAAD;AATH,CAAjB","sourcesContent":["'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar replace = uncurryThis(''.replace);\nvar ltrim = RegExp('^[' + whitespaces + ']+');\nvar rtrim = RegExp('(^|[^' + whitespaces + '])[' + whitespaces + ']+$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = replace(string, ltrim, '');\n    if (TYPE & 2) string = replace(string, rtrim, '$1');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n"]},"metadata":{},"sourceType":"script"}