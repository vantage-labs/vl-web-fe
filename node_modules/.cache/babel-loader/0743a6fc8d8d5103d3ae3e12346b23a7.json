{"ast":null,"code":"import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = v => clamp(0, 255, v);\n\nconst rgbUnit = { ...number,\n  transform: v => Math.round(clampRgbUnit(v))\n};\nconst rgba = {\n  test: /*@__PURE__*/isColorString(\"rgb\", \"red\"),\n  parse: /*@__PURE__*/splitColor(\"red\", \"green\", \"blue\"),\n  transform: _ref => {\n    let {\n      red,\n      green,\n      blue,\n      alpha: alpha$1 = 1\n    } = _ref;\n    return \"rgba(\" + rgbUnit.transform(red) + \", \" + rgbUnit.transform(green) + \", \" + rgbUnit.transform(blue) + \", \" + sanitize(alpha.transform(alpha$1)) + \")\";\n  }\n};\nexport { rgbUnit, rgba };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/framer-motion/dist/es/value/types/color/rgba.mjs"],"names":["clamp","alpha","number","sanitize","isColorString","splitColor","clampRgbUnit","v","rgbUnit","transform","Math","round","rgba","test","parse","red","green","blue","alpha$1"],"mappings":"AAAA,SAASA,KAAT,QAAsB,0BAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,sBAA9B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,aAA1C;;AAEA,MAAMC,YAAY,GAAIC,CAAD,IAAOP,KAAK,CAAC,CAAD,EAAI,GAAJ,EAASO,CAAT,CAAjC;;AACA,MAAMC,OAAO,GAAG,EACZ,GAAGN,MADS;AAEZO,EAAAA,SAAS,EAAGF,CAAD,IAAOG,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,CAAD,CAAvB;AAFN,CAAhB;AAIA,MAAMK,IAAI,GAAG;AACTC,EAAAA,IAAI,EAAE,aAAcT,aAAa,CAAC,KAAD,EAAQ,KAAR,CADxB;AAETU,EAAAA,KAAK,EAAE,aAAcT,UAAU,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB,CAFtB;AAGTI,EAAAA,SAAS,EAAE;AAAA,QAAC;AAAEM,MAAAA,GAAF;AAAOC,MAAAA,KAAP;AAAcC,MAAAA,IAAd;AAAoBhB,MAAAA,KAAK,EAAEiB,OAAO,GAAG;AAArC,KAAD;AAAA,WAA8C,UACrDV,OAAO,CAACC,SAAR,CAAkBM,GAAlB,CADqD,GAErD,IAFqD,GAGrDP,OAAO,CAACC,SAAR,CAAkBO,KAAlB,CAHqD,GAIrD,IAJqD,GAKrDR,OAAO,CAACC,SAAR,CAAkBQ,IAAlB,CALqD,GAMrD,IANqD,GAOrDd,QAAQ,CAACF,KAAK,CAACQ,SAAN,CAAgBS,OAAhB,CAAD,CAP6C,GAQrD,GARO;AAAA;AAHF,CAAb;AAcA,SAASV,OAAT,EAAkBI,IAAlB","sourcesContent":["import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n"]},"metadata":{},"sourceType":"module"}