{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectWithoutProperties from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"container\"];\nimport { resize } from '../resize/index.mjs';\nimport { createScrollInfo } from './info.mjs';\nimport { createOnScrollHandler } from './on-scroll-handler.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\nvar scrollListeners = new WeakMap();\nvar resizeListeners = new WeakMap();\nvar onScrollHandlers = new WeakMap();\n\nvar getEventTarget = function getEventTarget(element) {\n  return element === document.documentElement ? window : element;\n};\n\nfunction scrollInfo(onScroll) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$container = _ref.container,\n      container = _ref$container === void 0 ? document.documentElement : _ref$container,\n      options = _objectWithoutProperties(_ref, _excluded);\n\n  var containerHandlers = onScrollHandlers.get(container);\n  /**\n   * Get the onScroll handlers for this container.\n   * If one isn't found, create a new one.\n   */\n\n  if (!containerHandlers) {\n    containerHandlers = new Set();\n    onScrollHandlers.set(container, containerHandlers);\n  }\n  /**\n   * Create a new onScroll handler for the provided callback.\n   */\n\n\n  var info = createScrollInfo();\n  var containerHandler = createOnScrollHandler(container, onScroll, info, options);\n  containerHandlers.add(containerHandler);\n  /**\n   * Check if there's a scroll event listener for this container.\n   * If not, create one.\n   */\n\n  if (!scrollListeners.has(container)) {\n    var measureAll = function measureAll() {\n      var _iterator = _createForOfIteratorHelper(containerHandlers),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var handler = _step.value;\n          handler.measure();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    };\n\n    var updateAll = function updateAll() {\n      var _iterator2 = _createForOfIteratorHelper(containerHandlers),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var handler = _step2.value;\n          handler.update(frameData.timestamp);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    };\n\n    var notifyAll = function notifyAll() {\n      var _iterator3 = _createForOfIteratorHelper(containerHandlers),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var handler = _step3.value;\n          handler.notify();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    };\n\n    var _listener = function _listener() {\n      frame.read(measureAll, false, true);\n      frame.read(updateAll, false, true);\n      frame.update(notifyAll, false, true);\n    };\n\n    scrollListeners.set(container, _listener);\n    var target = getEventTarget(container);\n    window.addEventListener(\"resize\", _listener, {\n      passive: true\n    });\n\n    if (container !== document.documentElement) {\n      resizeListeners.set(container, resize(container, _listener));\n    }\n\n    target.addEventListener(\"scroll\", _listener, {\n      passive: true\n    });\n  }\n\n  var listener = scrollListeners.get(container);\n  frame.read(listener, false, true);\n  return function () {\n    var _a;\n\n    cancelFrame(listener);\n    /**\n     * Check if we even have any handlers for this container.\n     */\n\n    var currentHandlers = onScrollHandlers.get(container);\n    if (!currentHandlers) return;\n    currentHandlers.delete(containerHandler);\n    if (currentHandlers.size) return;\n    /**\n     * If no more handlers, remove the scroll listener too.\n     */\n\n    var scrollListener = scrollListeners.get(container);\n    scrollListeners.delete(container);\n\n    if (scrollListener) {\n      getEventTarget(container).removeEventListener(\"scroll\", scrollListener);\n      (_a = resizeListeners.get(container)) === null || _a === void 0 ? void 0 : _a();\n      window.removeEventListener(\"resize\", scrollListener);\n    }\n  };\n}\n\nexport { scrollInfo };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/framer-motion/dist/es/render/dom/scroll/track.mjs"],"names":["resize","createScrollInfo","createOnScrollHandler","frame","cancelFrame","frameData","scrollListeners","WeakMap","resizeListeners","onScrollHandlers","getEventTarget","element","document","documentElement","window","scrollInfo","onScroll","container","options","containerHandlers","get","Set","set","info","containerHandler","add","has","measureAll","handler","measure","updateAll","update","timestamp","notifyAll","notify","listener","read","target","addEventListener","passive","_a","currentHandlers","delete","size","scrollListener","removeEventListener"],"mappings":"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","sourcesContent":["import { resize } from '../resize/index.mjs';\nimport { createScrollInfo } from './info.mjs';\nimport { createOnScrollHandler } from './on-scroll-handler.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst scrollListeners = new WeakMap();\nconst resizeListeners = new WeakMap();\nconst onScrollHandlers = new WeakMap();\nconst getEventTarget = (element) => element === document.documentElement ? window : element;\nfunction scrollInfo(onScroll, { container = document.documentElement, ...options } = {}) {\n    let containerHandlers = onScrollHandlers.get(container);\n    /**\n     * Get the onScroll handlers for this container.\n     * If one isn't found, create a new one.\n     */\n    if (!containerHandlers) {\n        containerHandlers = new Set();\n        onScrollHandlers.set(container, containerHandlers);\n    }\n    /**\n     * Create a new onScroll handler for the provided callback.\n     */\n    const info = createScrollInfo();\n    const containerHandler = createOnScrollHandler(container, onScroll, info, options);\n    containerHandlers.add(containerHandler);\n    /**\n     * Check if there's a scroll event listener for this container.\n     * If not, create one.\n     */\n    if (!scrollListeners.has(container)) {\n        const measureAll = () => {\n            for (const handler of containerHandlers)\n                handler.measure();\n        };\n        const updateAll = () => {\n            for (const handler of containerHandlers) {\n                handler.update(frameData.timestamp);\n            }\n        };\n        const notifyAll = () => {\n            for (const handler of containerHandlers)\n                handler.notify();\n        };\n        const listener = () => {\n            frame.read(measureAll, false, true);\n            frame.read(updateAll, false, true);\n            frame.update(notifyAll, false, true);\n        };\n        scrollListeners.set(container, listener);\n        const target = getEventTarget(container);\n        window.addEventListener(\"resize\", listener, { passive: true });\n        if (container !== document.documentElement) {\n            resizeListeners.set(container, resize(container, listener));\n        }\n        target.addEventListener(\"scroll\", listener, { passive: true });\n    }\n    const listener = scrollListeners.get(container);\n    frame.read(listener, false, true);\n    return () => {\n        var _a;\n        cancelFrame(listener);\n        /**\n         * Check if we even have any handlers for this container.\n         */\n        const currentHandlers = onScrollHandlers.get(container);\n        if (!currentHandlers)\n            return;\n        currentHandlers.delete(containerHandler);\n        if (currentHandlers.size)\n            return;\n        /**\n         * If no more handlers, remove the scroll listener too.\n         */\n        const scrollListener = scrollListeners.get(container);\n        scrollListeners.delete(container);\n        if (scrollListener) {\n            getEventTarget(container).removeEventListener(\"scroll\", scrollListener);\n            (_a = resizeListeners.get(container)) === null || _a === void 0 ? void 0 : _a();\n            window.removeEventListener(\"resize\", scrollListener);\n        }\n    };\n}\n\nexport { scrollInfo };\n"]},"metadata":{},"sourceType":"module"}