{"ast":null,"code":"import _classCallCheck from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nvar asyncHandler = function asyncHandler(handler) {\n  return function (event, info) {\n    if (handler) {\n      frame.postRender(function () {\n        return handler(event, info);\n      });\n    }\n  };\n};\n\nvar PanGesture = /*#__PURE__*/function (_Feature) {\n  _inherits(PanGesture, _Feature);\n\n  var _super = _createSuper(PanGesture);\n\n  function PanGesture() {\n    var _this;\n\n    _classCallCheck(this, PanGesture);\n\n    _this = _super.apply(this, arguments);\n    _this.removePointerDownListener = noop;\n    return _this;\n  }\n\n  _createClass(PanGesture, [{\n    key: \"onPointerDown\",\n    value: function onPointerDown(pointerDownEvent) {\n      this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n        transformPagePoint: this.node.getTransformPagePoint(),\n        contextWindow: getContextWindow(this.node)\n      });\n    }\n  }, {\n    key: \"createPanHandlers\",\n    value: function createPanHandlers() {\n      var _this2 = this;\n\n      var _this$node$getProps = this.node.getProps(),\n          onPanSessionStart = _this$node$getProps.onPanSessionStart,\n          onPanStart = _this$node$getProps.onPanStart,\n          onPan = _this$node$getProps.onPan,\n          onPanEnd = _this$node$getProps.onPanEnd;\n\n      return {\n        onSessionStart: asyncHandler(onPanSessionStart),\n        onStart: asyncHandler(onPanStart),\n        onMove: onPan,\n        onEnd: function onEnd(event, info) {\n          delete _this2.session;\n\n          if (onPanEnd) {\n            frame.postRender(function () {\n              return onPanEnd(event, info);\n            });\n          }\n        }\n      };\n    }\n  }, {\n    key: \"mount\",\n    value: function mount() {\n      var _this3 = this;\n\n      this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", function (event) {\n        return _this3.onPointerDown(event);\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {\n      this.removePointerDownListener();\n      this.session && this.session.end();\n    }\n  }]);\n\n  return PanGesture;\n}(Feature);\n\nexport { PanGesture };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/framer-motion/dist/es/gestures/pan/index.mjs"],"names":["PanSession","addPointerEvent","Feature","noop","getContextWindow","frame","asyncHandler","handler","event","info","postRender","PanGesture","arguments","removePointerDownListener","pointerDownEvent","session","createPanHandlers","transformPagePoint","node","getTransformPagePoint","contextWindow","getProps","onPanSessionStart","onPanStart","onPan","onPanEnd","onSessionStart","onStart","onMove","onEnd","current","onPointerDown","updateHandlers","end"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,eAAT,QAAgC,oCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,gBAAT,QAAiC,oCAAjC;AACA,SAASC,KAAT,QAAsB,2BAAtB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD;AAAA,SAAa,UAACC,KAAD,EAAQC,IAAR,EAAiB;AAC/C,QAAIF,OAAJ,EAAa;AACTF,MAAAA,KAAK,CAACK,UAAN,CAAiB;AAAA,eAAMH,OAAO,CAACC,KAAD,EAAQC,IAAR,CAAb;AAAA,OAAjB;AACH;AACJ,GAJoB;AAAA,CAArB;;IAKME,U;;;;;AACF,wBAAc;AAAA;;AAAA;;AACV,+BAASC,SAAT;AACA,UAAKC,yBAAL,GAAiCV,IAAjC;AAFU;AAGb;;;;WACD,uBAAcW,gBAAd,EAAgC;AAC5B,WAAKC,OAAL,GAAe,IAAIf,UAAJ,CAAec,gBAAf,EAAiC,KAAKE,iBAAL,EAAjC,EAA2D;AACtEC,QAAAA,kBAAkB,EAAE,KAAKC,IAAL,CAAUC,qBAAV,EADkD;AAEtEC,QAAAA,aAAa,EAAEhB,gBAAgB,CAAC,KAAKc,IAAN;AAFuC,OAA3D,CAAf;AAIH;;;WACD,6BAAoB;AAAA;;AAChB,gCAA2D,KAAKA,IAAL,CAAUG,QAAV,EAA3D;AAAA,UAAQC,iBAAR,uBAAQA,iBAAR;AAAA,UAA2BC,UAA3B,uBAA2BA,UAA3B;AAAA,UAAuCC,KAAvC,uBAAuCA,KAAvC;AAAA,UAA8CC,QAA9C,uBAA8CA,QAA9C;;AACA,aAAO;AACHC,QAAAA,cAAc,EAAEpB,YAAY,CAACgB,iBAAD,CADzB;AAEHK,QAAAA,OAAO,EAAErB,YAAY,CAACiB,UAAD,CAFlB;AAGHK,QAAAA,MAAM,EAAEJ,KAHL;AAIHK,QAAAA,KAAK,EAAE,eAACrB,KAAD,EAAQC,IAAR,EAAiB;AACpB,iBAAO,MAAI,CAACM,OAAZ;;AACA,cAAIU,QAAJ,EAAc;AACVpB,YAAAA,KAAK,CAACK,UAAN,CAAiB;AAAA,qBAAMe,QAAQ,CAACjB,KAAD,EAAQC,IAAR,CAAd;AAAA,aAAjB;AACH;AACJ;AATE,OAAP;AAWH;;;WACD,iBAAQ;AAAA;;AACJ,WAAKI,yBAAL,GAAiCZ,eAAe,CAAC,KAAKiB,IAAL,CAAUY,OAAX,EAAoB,aAApB,EAAmC,UAACtB,KAAD;AAAA,eAAW,MAAI,CAACuB,aAAL,CAAmBvB,KAAnB,CAAX;AAAA,OAAnC,CAAhD;AACH;;;WACD,kBAAS;AACL,WAAKO,OAAL,IAAgB,KAAKA,OAAL,CAAaiB,cAAb,CAA4B,KAAKhB,iBAAL,EAA5B,CAAhB;AACH;;;WACD,mBAAU;AACN,WAAKH,yBAAL;AACA,WAAKE,OAAL,IAAgB,KAAKA,OAAL,CAAakB,GAAb,EAAhB;AACH;;;;EAlCoB/B,O;;AAqCzB,SAASS,UAAT","sourcesContent":["import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n"]},"metadata":{},"sourceType":"module"}