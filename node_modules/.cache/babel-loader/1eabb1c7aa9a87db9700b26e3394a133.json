{"ast":null,"code":"import { createContext } from 'react';\nimport { getDefaults, setDefaults } from './defaults.js';\nimport { getI18n, setI18n } from './i18nInstance.js';\nimport { initReactI18next } from './initReactI18next.js';\nexport { getDefaults, setDefaults, getI18n, setI18n, initReactI18next };\nexport const I18nContext = createContext();\nexport class ReportNamespaces {\n  constructor() {\n    this.usedNamespaces = {};\n  }\n\n  addUsedNamespaces(namespaces) {\n    namespaces.forEach(ns => {\n      if (!this.usedNamespaces[ns]) this.usedNamespaces[ns] = true;\n    });\n  }\n\n  getUsedNamespaces() {\n    return Object.keys(this.usedNamespaces);\n  }\n\n}\nexport const composeInitialProps = ForComponent => async ctx => {\n  const componentsInitialProps = (await ForComponent.getInitialProps?.(ctx)) ?? {};\n  const i18nInitialProps = getInitialProps();\n  return { ...componentsInitialProps,\n    ...i18nInitialProps\n  };\n};\nexport const getInitialProps = () => {\n  const i18n = getI18n();\n  const namespaces = i18n.reportNamespaces?.getUsedNamespaces() ?? [];\n  const ret = {};\n  const initialI18nStore = {};\n  i18n.languages.forEach(l => {\n    initialI18nStore[l] = {};\n    namespaces.forEach(ns => {\n      initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};\n    });\n  });\n  ret.initialI18nStore = initialI18nStore;\n  ret.initialLanguage = i18n.language;\n  return ret;\n};","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/react-i18next/dist/es/context.js"],"names":["createContext","getDefaults","setDefaults","getI18n","setI18n","initReactI18next","I18nContext","ReportNamespaces","constructor","usedNamespaces","addUsedNamespaces","namespaces","forEach","ns","getUsedNamespaces","Object","keys","composeInitialProps","ForComponent","ctx","componentsInitialProps","getInitialProps","i18nInitialProps","i18n","reportNamespaces","ret","initialI18nStore","languages","l","getResourceBundle","initialLanguage","language"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,eAAzC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,mBAAjC;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASJ,WAAT,EAAsBC,WAAtB,EAAmCC,OAAnC,EAA4CC,OAA5C,EAAqDC,gBAArD;AACA,OAAO,MAAMC,WAAW,GAAGN,aAAa,EAAjC;AACP,OAAO,MAAMO,gBAAN,CAAuB;AAC5BC,EAAAA,WAAW,GAAG;AACZ,SAAKC,cAAL,GAAsB,EAAtB;AACD;;AACDC,EAAAA,iBAAiB,CAACC,UAAD,EAAa;AAC5BA,IAAAA,UAAU,CAACC,OAAX,CAAmBC,EAAE,IAAI;AACvB,UAAI,CAAC,KAAKJ,cAAL,CAAoBI,EAApB,CAAL,EAA8B,KAAKJ,cAAL,CAAoBI,EAApB,IAA0B,IAA1B;AAC/B,KAFD;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,WAAOC,MAAM,CAACC,IAAP,CAAY,KAAKP,cAAjB,CAAP;AACD;;AAX2B;AAa9B,OAAO,MAAMQ,mBAAmB,GAAGC,YAAY,IAAI,MAAMC,GAAN,IAAa;AAC9D,QAAMC,sBAAsB,GAAG,CAAC,MAAMF,YAAY,CAACG,eAAb,GAA+BF,GAA/B,CAAP,KAA+C,EAA9E;AACA,QAAMG,gBAAgB,GAAGD,eAAe,EAAxC;AACA,SAAO,EACL,GAAGD,sBADE;AAEL,OAAGE;AAFE,GAAP;AAID,CAPM;AAQP,OAAO,MAAMD,eAAe,GAAG,MAAM;AACnC,QAAME,IAAI,GAAGpB,OAAO,EAApB;AACA,QAAMQ,UAAU,GAAGY,IAAI,CAACC,gBAAL,EAAuBV,iBAAvB,MAA8C,EAAjE;AACA,QAAMW,GAAG,GAAG,EAAZ;AACA,QAAMC,gBAAgB,GAAG,EAAzB;AACAH,EAAAA,IAAI,CAACI,SAAL,CAAef,OAAf,CAAuBgB,CAAC,IAAI;AAC1BF,IAAAA,gBAAgB,CAACE,CAAD,CAAhB,GAAsB,EAAtB;AACAjB,IAAAA,UAAU,CAACC,OAAX,CAAmBC,EAAE,IAAI;AACvBa,MAAAA,gBAAgB,CAACE,CAAD,CAAhB,CAAoBf,EAApB,IAA0BU,IAAI,CAACM,iBAAL,CAAuBD,CAAvB,EAA0Bf,EAA1B,KAAiC,EAA3D;AACD,KAFD;AAGD,GALD;AAMAY,EAAAA,GAAG,CAACC,gBAAJ,GAAuBA,gBAAvB;AACAD,EAAAA,GAAG,CAACK,eAAJ,GAAsBP,IAAI,CAACQ,QAA3B;AACA,SAAON,GAAP;AACD,CAdM","sourcesContent":["import { createContext } from 'react';\nimport { getDefaults, setDefaults } from './defaults.js';\nimport { getI18n, setI18n } from './i18nInstance.js';\nimport { initReactI18next } from './initReactI18next.js';\nexport { getDefaults, setDefaults, getI18n, setI18n, initReactI18next };\nexport const I18nContext = createContext();\nexport class ReportNamespaces {\n  constructor() {\n    this.usedNamespaces = {};\n  }\n  addUsedNamespaces(namespaces) {\n    namespaces.forEach(ns => {\n      if (!this.usedNamespaces[ns]) this.usedNamespaces[ns] = true;\n    });\n  }\n  getUsedNamespaces() {\n    return Object.keys(this.usedNamespaces);\n  }\n}\nexport const composeInitialProps = ForComponent => async ctx => {\n  const componentsInitialProps = (await ForComponent.getInitialProps?.(ctx)) ?? {};\n  const i18nInitialProps = getInitialProps();\n  return {\n    ...componentsInitialProps,\n    ...i18nInitialProps\n  };\n};\nexport const getInitialProps = () => {\n  const i18n = getI18n();\n  const namespaces = i18n.reportNamespaces?.getUsedNamespaces() ?? [];\n  const ret = {};\n  const initialI18nStore = {};\n  i18n.languages.forEach(l => {\n    initialI18nStore[l] = {};\n    namespaces.forEach(ns => {\n      initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};\n    });\n  });\n  ret.initialI18nStore = initialI18nStore;\n  ret.initialLanguage = i18n.language;\n  return ret;\n};"]},"metadata":{},"sourceType":"module"}