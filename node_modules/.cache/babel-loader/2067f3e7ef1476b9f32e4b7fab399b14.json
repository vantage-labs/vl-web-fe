{"ast":null,"code":"import _classCallCheck from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nvar BaseGroupPlaybackControls = /*#__PURE__*/function () {\n  function BaseGroupPlaybackControls(animations) {\n    var _this = this;\n\n    _classCallCheck(this, BaseGroupPlaybackControls);\n\n    // Bound to accomodate common `return animation.stop` pattern\n    this.stop = function () {\n      return _this.runAll(\"stop\");\n    };\n\n    this.animations = animations.filter(Boolean);\n  }\n\n  _createClass(BaseGroupPlaybackControls, [{\n    key: \"finished\",\n    get: function get() {\n      // Support for new finished Promise and legacy thennable API\n      return Promise.all(this.animations.map(function (animation) {\n        return \"finished\" in animation ? animation.finished : animation;\n      }));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n\n  }, {\n    key: \"getAll\",\n    value: function getAll(propName) {\n      return this.animations[0][propName];\n    }\n  }, {\n    key: \"setAll\",\n    value: function setAll(propName, newValue) {\n      for (var i = 0; i < this.animations.length; i++) {\n        this.animations[i][propName] = newValue;\n      }\n    }\n  }, {\n    key: \"attachTimeline\",\n    value: function attachTimeline(timeline, fallback) {\n      var _this2 = this;\n\n      var subscriptions = this.animations.map(function (animation) {\n        if (supportsScrollTimeline() && animation.attachTimeline) {\n          return animation.attachTimeline(timeline);\n        } else {\n          return fallback(animation);\n        }\n      });\n      return function () {\n        subscriptions.forEach(function (cancel, i) {\n          cancel && cancel();\n\n          _this2.animations[i].stop();\n        });\n      };\n    }\n  }, {\n    key: \"time\",\n    get: function get() {\n      return this.getAll(\"time\");\n    },\n    set: function set(time) {\n      this.setAll(\"time\", time);\n    }\n  }, {\n    key: \"speed\",\n    get: function get() {\n      return this.getAll(\"speed\");\n    },\n    set: function set(speed) {\n      this.setAll(\"speed\", speed);\n    }\n  }, {\n    key: \"startTime\",\n    get: function get() {\n      return this.getAll(\"startTime\");\n    }\n  }, {\n    key: \"duration\",\n    get: function get() {\n      var max = 0;\n\n      for (var i = 0; i < this.animations.length; i++) {\n        max = Math.max(max, this.animations[i].duration);\n      }\n\n      return max;\n    }\n  }, {\n    key: \"runAll\",\n    value: function runAll(methodName) {\n      this.animations.forEach(function (controls) {\n        return controls[methodName]();\n      });\n    }\n  }, {\n    key: \"flatten\",\n    value: function flatten() {\n      this.runAll(\"flatten\");\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      this.runAll(\"play\");\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.runAll(\"pause\");\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.runAll(\"cancel\");\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      this.runAll(\"complete\");\n    }\n  }]);\n\n  return BaseGroupPlaybackControls;\n}();\n\nexport { BaseGroupPlaybackControls };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs"],"names":["supportsScrollTimeline","BaseGroupPlaybackControls","animations","stop","runAll","filter","Boolean","Promise","all","map","animation","finished","propName","newValue","i","length","timeline","fallback","subscriptions","attachTimeline","forEach","cancel","getAll","time","setAll","speed","max","Math","duration","methodName","controls"],"mappings":"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","sourcesContent":["import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n"]},"metadata":{},"sourceType":"module"}