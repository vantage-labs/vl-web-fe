{"ast":null,"code":"import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n  var current = keyframes[0];\n  if (keyframes.length === 1) return true;\n\n  for (var i = 0; i < keyframes.length; i++) {\n    if (keyframes[i] !== current) return true;\n  }\n}\n\nfunction canAnimate(keyframes, name, type, velocity) {\n  /**\n   * Check if we're able to animate between the start and end keyframes,\n   * and throw a warning if we're attempting to animate between one that's\n   * animatable and another that isn't.\n   */\n  var originKeyframe = keyframes[0];\n  if (originKeyframe === null) return false;\n  /**\n   * These aren't traditionally animatable but we do support them.\n   * In future we could look into making this more generic or replacing\n   * this function with mix() === mixImmediate\n   */\n\n  if (name === \"display\" || name === \"visibility\") return true;\n  var targetKeyframe = keyframes[keyframes.length - 1];\n  var isOriginAnimatable = isAnimatable(originKeyframe, name);\n  var isTargetAnimatable = isAnimatable(targetKeyframe, name);\n  warning(isOriginAnimatable === isTargetAnimatable, \"You are trying to animate \".concat(name, \" from \\\"\").concat(originKeyframe, \"\\\" to \\\"\").concat(targetKeyframe, \"\\\". \").concat(originKeyframe, \" is not an animatable value - to enable this animation set \").concat(originKeyframe, \" to a value animatable to \").concat(targetKeyframe, \" via the `style` property.\")); // Always skip if any of these are true\n\n  if (!isOriginAnimatable || !isTargetAnimatable) {\n    return false;\n  }\n\n  return hasKeyframesChanged(keyframes) || (type === \"spring\" || isGenerator(type)) && velocity;\n}\n\nexport { canAnimate };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs"],"names":["isGenerator","warning","isAnimatable","hasKeyframesChanged","keyframes","current","length","i","canAnimate","name","type","velocity","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable"],"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,YAAT,QAA6B,+BAA7B;;AAEA,SAASC,mBAAT,CAA6BC,SAA7B,EAAwC;AACpC,MAAMC,OAAO,GAAGD,SAAS,CAAC,CAAD,CAAzB;AACA,MAAIA,SAAS,CAACE,MAAV,KAAqB,CAAzB,EACI,OAAO,IAAP;;AACJ,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACE,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;AACvC,QAAIH,SAAS,CAACG,CAAD,CAAT,KAAiBF,OAArB,EACI,OAAO,IAAP;AACP;AACJ;;AACD,SAASG,UAAT,CAAoBJ,SAApB,EAA+BK,IAA/B,EAAqCC,IAArC,EAA2CC,QAA3C,EAAqD;AACjD;AACJ;AACA;AACA;AACA;AACI,MAAMC,cAAc,GAAGR,SAAS,CAAC,CAAD,CAAhC;AACA,MAAIQ,cAAc,KAAK,IAAvB,EACI,OAAO,KAAP;AACJ;AACJ;AACA;AACA;AACA;;AACI,MAAIH,IAAI,KAAK,SAAT,IAAsBA,IAAI,KAAK,YAAnC,EACI,OAAO,IAAP;AACJ,MAAMI,cAAc,GAAGT,SAAS,CAACA,SAAS,CAACE,MAAV,GAAmB,CAApB,CAAhC;AACA,MAAMQ,kBAAkB,GAAGZ,YAAY,CAACU,cAAD,EAAiBH,IAAjB,CAAvC;AACA,MAAMM,kBAAkB,GAAGb,YAAY,CAACW,cAAD,EAAiBJ,IAAjB,CAAvC;AACAR,EAAAA,OAAO,CAACa,kBAAkB,KAAKC,kBAAxB,sCAAyEN,IAAzE,qBAAuFG,cAAvF,qBAA8GC,cAA9G,iBAAkID,cAAlI,wEAA8MA,cAA9M,uCAAyPC,cAAzP,gCAAP,CAnBiD,CAoBjD;;AACA,MAAI,CAACC,kBAAD,IAAuB,CAACC,kBAA5B,EAAgD;AAC5C,WAAO,KAAP;AACH;;AACD,SAAQZ,mBAAmB,CAACC,SAAD,CAAnB,IACH,CAACM,IAAI,KAAK,QAAT,IAAqBV,WAAW,CAACU,IAAD,CAAjC,KAA4CC,QADjD;AAEH;;AAED,SAASH,UAAT","sourcesContent":["import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n"]},"metadata":{},"sourceType":"module"}