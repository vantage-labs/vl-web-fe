{"ast":null,"code":"\"use client\"; // packages/react/portal/src/Portal.tsx\n\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PORTAL_NAME = \"Portal\";\nvar Portal = React.forwardRef((props, forwardedRef) => {\n  const {\n    container: containerProp,\n    ...portalProps\n  } = props;\n  const [mounted, setMounted] = React.useState(false);\n  useLayoutEffect(() => setMounted(true), []);\n  const container = containerProp || mounted && globalThis?.document?.body;\n  return container ? ReactDOM.createPortal( /* @__PURE__ */jsx(Primitive.div, { ...portalProps,\n    ref: forwardedRef\n  }), container) : null;\n});\nPortal.displayName = PORTAL_NAME;\nvar Root = Portal;\nexport { Portal, Root };","map":{"version":3,"mappings":";;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,eAAT,QAAgC,mCAAhC;AAuB4B;AAjB5B,IAAMC,cAAc,QAApB;AAWA,IAAMC,SAAeL,iBAAuC,CAACM,KAAD,EAAQC,YAAR,KAAyB;AACnF,QAAM;AAAEC,eAAWC,aAAb;AAA4B,OAAGC;AAA/B,MAA+CJ,KAArD;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAA8BZ,eAAS,KAAT,CAApC;AACAG,kBAAgB,MAAMS,WAAW,IAAX,CAAtB,EAAwC,EAAxC;AACA,QAAMJ,YAAYC,iBAAkBE,WAAWE,YAAYC,QAAZ,EAAsBC,IAArE;AACA,SAAOP,YACHP,SAASe,YAAT,EAAsB,mBAACd,UAAUe,GAAX,EAAC,EAAe,GAAGP,WAAlB;AAA+BQ,SAAKX;AAApC,GAAD,CAAtB,EAA6EC,SAA7E,CADG,GAEH,IAFJ;AAGD,CARoB,CAArB;AAUAH,OAAOc,WAAP,GAAqBf,WAArB;AAIA,IAAMgB,OAAOf,MAAb","names":["React","ReactDOM","Primitive","useLayoutEffect","PORTAL_NAME","Portal","props","forwardedRef","container","containerProp","portalProps","mounted","setMounted","globalThis","document","body","createPortal","div","ref","displayName","Root"],"sources":["/home/bahari/vl-web-fe/node_modules/@radix-ui/react-portal/src/Portal.tsx"],"sourcesContent":["import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n/* -------------------------------------------------------------------------------------------------\n * Portal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'Portal';\n\ntype PortalElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PortalProps extends PrimitiveDivProps {\n  /**\n   * An optional container where the portaled content should be appended.\n   */\n  container?: Element | DocumentFragment | null;\n}\n\nconst Portal = React.forwardRef<PortalElement, PortalProps>((props, forwardedRef) => {\n  const { container: containerProp, ...portalProps } = props;\n  const [mounted, setMounted] = React.useState(false);\n  useLayoutEffect(() => setMounted(true), []);\n  const container = containerProp || (mounted && globalThis?.document?.body);\n  return container\n    ? ReactDOM.createPortal(<Primitive.div {...portalProps} ref={forwardedRef} />, container)\n    : null;\n});\n\nPortal.displayName = PORTAL_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Portal;\n\nexport {\n  Portal,\n  //\n  Root,\n};\nexport type { PortalProps };\n"]},"metadata":{},"sourceType":"module"}