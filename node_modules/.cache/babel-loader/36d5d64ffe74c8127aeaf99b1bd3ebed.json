{"ast":null,"code":"import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n/**\n * Timeout defined in ms\n */\n\nfunction delay(callback, timeout) {\n  var start = time.now();\n\n  var checkElapsed = function checkElapsed(_ref) {\n    var timestamp = _ref.timestamp;\n    var elapsed = timestamp - start;\n\n    if (elapsed >= timeout) {\n      cancelFrame(checkElapsed);\n      callback(elapsed - timeout);\n    }\n  };\n\n  frame.read(checkElapsed, true);\n  return function () {\n    return cancelFrame(checkElapsed);\n  };\n}\n\nfunction delayInSeconds(callback, timeout) {\n  return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/framer-motion/dist/es/utils/delay.mjs"],"names":["secondsToMilliseconds","time","frame","cancelFrame","delay","callback","timeout","start","now","checkElapsed","timestamp","elapsed","read","delayInSeconds"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,cAAtC;AACA,SAASC,IAAT,QAAqB,4BAArB;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,wBAAnC;AAEA;AACA;AACA;;AACA,SAASC,KAAT,CAAeC,QAAf,EAAyBC,OAAzB,EAAkC;AAC9B,MAAMC,KAAK,GAAGN,IAAI,CAACO,GAAL,EAAd;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,OAAmB;AAAA,QAAhBC,SAAgB,QAAhBA,SAAgB;AACpC,QAAMC,OAAO,GAAGD,SAAS,GAAGH,KAA5B;;AACA,QAAII,OAAO,IAAIL,OAAf,EAAwB;AACpBH,MAAAA,WAAW,CAACM,YAAD,CAAX;AACAJ,MAAAA,QAAQ,CAACM,OAAO,GAAGL,OAAX,CAAR;AACH;AACJ,GAND;;AAOAJ,EAAAA,KAAK,CAACU,IAAN,CAAWH,YAAX,EAAyB,IAAzB;AACA,SAAO;AAAA,WAAMN,WAAW,CAACM,YAAD,CAAjB;AAAA,GAAP;AACH;;AACD,SAASI,cAAT,CAAwBR,QAAxB,EAAkCC,OAAlC,EAA2C;AACvC,SAAOF,KAAK,CAACC,QAAD,EAAWL,qBAAqB,CAACM,OAAD,CAAhC,CAAZ;AACH;;AAED,SAASF,KAAT,EAAgBS,cAAhB","sourcesContent":["import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n"]},"metadata":{},"sourceType":"module"}