{"ast":null,"code":"\"use client\"; // packages/react/focus-guards/src/FocusGuards.tsx\n\nimport * as React from \"react\";\nvar count = 0;\n\nfunction FocusGuards(props) {\n  useFocusGuards();\n  return props.children;\n}\n\nfunction useFocusGuards() {\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll(\"[data-radix-focus-guard]\");\n    document.body.insertAdjacentElement(\"afterbegin\", edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement(\"beforeend\", edgeGuards[1] ?? createFocusGuard());\n    count++;\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll(\"[data-radix-focus-guard]\").forEach(node => node.remove());\n      }\n\n      count--;\n    };\n  }, []);\n}\n\nfunction createFocusGuard() {\n  const element = document.createElement(\"span\");\n  element.setAttribute(\"data-radix-focus-guard\", \"\");\n  element.tabIndex = 0;\n  element.style.outline = \"none\";\n  element.style.opacity = \"0\";\n  element.style.position = \"fixed\";\n  element.style.pointerEvents = \"none\";\n  return element;\n}\n\nvar Root = FocusGuards;\nexport { FocusGuards, Root, useFocusGuards };","map":{"version":3,"mappings":";;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AAGA,IAAIC,QAAQ,CAAZ;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAAiC;AAC/BC;AACA,SAAOD,MAAME,QAAb;AACF;;AAMA,SAASD,cAAT,GAA0B;AAClBJ,kBAAU,MAAM;AACpB,UAAMM,aAAaC,SAASC,gBAAT,CAA0B,0BAA1B,CAAnB;AACAD,aAASE,IAAT,CAAcC,qBAAd,CAAoC,YAApC,EAAkDJ,WAAW,CAAX,KAAiBK,kBAAnE;AACAJ,aAASE,IAAT,CAAcC,qBAAd,CAAoC,WAApC,EAAiDJ,WAAW,CAAX,KAAiBK,kBAAlE;AACAV;AAEA,WAAO,MAAM;AACX,UAAIA,UAAU,CAAd,EAAiB;AACfM,iBAASC,gBAAT,CAA0B,0BAA1B,EAAsDI,OAAtD,CAA+DC,IAAD,IAAUA,KAAKC,MAAL,EAAxE;AACF;;AACAb;AACF,KALA;AAMF,GAZM,EAYH,EAZG;AAaR;;AAEA,SAASU,gBAAT,GAA4B;AAC1B,QAAMI,UAAUR,SAASS,aAAT,CAAuB,MAAvB,CAAhB;AACAD,UAAQE,YAAR,CAAqB,wBAArB,EAA+C,EAA/C;AACAF,UAAQG,QAAR,GAAmB,CAAnB;AACAH,UAAQI,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACAL,UAAQI,KAAR,CAAcE,OAAd,GAAwB,GAAxB;AACAN,UAAQI,KAAR,CAAcG,QAAd,GAAyB,OAAzB;AACAP,UAAQI,KAAR,CAAcI,aAAd,GAA8B,MAA9B;AACA,SAAOR,OAAP;AACF;;AAEA,IAAMS,OAAOtB,WAAb","names":["React","count","FocusGuards","props","useFocusGuards","children","edgeGuards","document","querySelectorAll","body","insertAdjacentElement","createFocusGuard","forEach","node","remove","element","createElement","setAttribute","tabIndex","style","outline","opacity","position","pointerEvents","Root"],"sources":["/home/bahari/vl-web-fe/node_modules/@radix-ui/react-focus-guards/src/FocusGuards.tsx"],"sourcesContent":["import * as React from 'react';\n\n/** Number of components which have requested interest to have focus guards */\nlet count = 0;\n\nfunction FocusGuards(props: any) {\n  useFocusGuards();\n  return props.children;\n}\n\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nfunction useFocusGuards() {\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', edgeGuards[1] ?? createFocusGuard());\n    count++;\n\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll('[data-radix-focus-guard]').forEach((node) => node.remove());\n      }\n      count--;\n    };\n  }, []);\n}\n\nfunction createFocusGuard() {\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.outline = 'none';\n  element.style.opacity = '0';\n  element.style.position = 'fixed';\n  element.style.pointerEvents = 'none';\n  return element;\n}\n\nconst Root = FocusGuards;\n\nexport {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n};\n"]},"metadata":{},"sourceType":"module"}