{"ast":null,"code":"import { GroupPlaybackControls } from 'motion-dom';\nimport { animateSequence } from './sequence.mjs';\nimport { animateSubject } from './subject.mjs';\n\nfunction isSequence(value) {\n  return Array.isArray(value) && Array.isArray(value[0]);\n}\n/**\n * Creates an animation function that is optionally scoped\n * to a specific element.\n */\n\n\nfunction createScopedAnimate(scope) {\n  /**\n   * Implementation\n   */\n  function scopedAnimate(subjectOrSequence, optionsOrKeyframes, options) {\n    var animations = [];\n\n    if (isSequence(subjectOrSequence)) {\n      animations = animateSequence(subjectOrSequence, optionsOrKeyframes, scope);\n    } else {\n      animations = animateSubject(subjectOrSequence, optionsOrKeyframes, options, scope);\n    }\n\n    var animation = new GroupPlaybackControls(animations);\n\n    if (scope) {\n      scope.animations.push(animation);\n    }\n\n    return animation;\n  }\n\n  return scopedAnimate;\n}\n\nvar animate = createScopedAnimate();\nexport { animate, createScopedAnimate };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/framer-motion/dist/es/animation/animate/index.mjs"],"names":["GroupPlaybackControls","animateSequence","animateSubject","isSequence","value","Array","isArray","createScopedAnimate","scope","scopedAnimate","subjectOrSequence","optionsOrKeyframes","options","animations","animation","push","animate"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,YAAtC;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,SAAOC,KAAK,CAACC,OAAN,CAAcF,KAAd,KAAwBC,KAAK,CAACC,OAAN,CAAcF,KAAK,CAAC,CAAD,CAAnB,CAA/B;AACH;AACD;AACA;AACA;AACA;;;AACA,SAASG,mBAAT,CAA6BC,KAA7B,EAAoC;AAChC;AACJ;AACA;AACI,WAASC,aAAT,CAAuBC,iBAAvB,EAA0CC,kBAA1C,EAA8DC,OAA9D,EAAuE;AACnE,QAAIC,UAAU,GAAG,EAAjB;;AACA,QAAIV,UAAU,CAACO,iBAAD,CAAd,EAAmC;AAC/BG,MAAAA,UAAU,GAAGZ,eAAe,CAACS,iBAAD,EAAoBC,kBAApB,EAAwCH,KAAxC,CAA5B;AACH,KAFD,MAGK;AACDK,MAAAA,UAAU,GAAGX,cAAc,CAACQ,iBAAD,EAAoBC,kBAApB,EAAwCC,OAAxC,EAAiDJ,KAAjD,CAA3B;AACH;;AACD,QAAMM,SAAS,GAAG,IAAId,qBAAJ,CAA0Ba,UAA1B,CAAlB;;AACA,QAAIL,KAAJ,EAAW;AACPA,MAAAA,KAAK,CAACK,UAAN,CAAiBE,IAAjB,CAAsBD,SAAtB;AACH;;AACD,WAAOA,SAAP;AACH;;AACD,SAAOL,aAAP;AACH;;AACD,IAAMO,OAAO,GAAGT,mBAAmB,EAAnC;AAEA,SAASS,OAAT,EAAkBT,mBAAlB","sourcesContent":["import { GroupPlaybackControls } from 'motion-dom';\nimport { animateSequence } from './sequence.mjs';\nimport { animateSubject } from './subject.mjs';\n\nfunction isSequence(value) {\n    return Array.isArray(value) && Array.isArray(value[0]);\n}\n/**\n * Creates an animation function that is optionally scoped\n * to a specific element.\n */\nfunction createScopedAnimate(scope) {\n    /**\n     * Implementation\n     */\n    function scopedAnimate(subjectOrSequence, optionsOrKeyframes, options) {\n        let animations = [];\n        if (isSequence(subjectOrSequence)) {\n            animations = animateSequence(subjectOrSequence, optionsOrKeyframes, scope);\n        }\n        else {\n            animations = animateSubject(subjectOrSequence, optionsOrKeyframes, options, scope);\n        }\n        const animation = new GroupPlaybackControls(animations);\n        if (scope) {\n            scope.animations.push(animation);\n        }\n        return animation;\n    }\n    return scopedAnimate;\n}\nconst animate = createScopedAnimate();\n\nexport { animate, createScopedAnimate };\n"]},"metadata":{},"sourceType":"module"}