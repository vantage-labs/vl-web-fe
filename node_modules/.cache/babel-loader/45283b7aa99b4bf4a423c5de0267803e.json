{"ast":null,"code":"import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards(_ref) {\n  var swiper = _ref.swiper,\n      extendParams = _ref.extendParams,\n      on = _ref.on;\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n\n  var setTranslate = function setTranslate() {\n    var slides = swiper.slides,\n        activeIndex = swiper.activeIndex,\n        rtl = swiper.rtlTranslate;\n    var params = swiper.params.cardsEffect;\n    var _swiper$touchEventsDa = swiper.touchEventsData,\n        startTranslate = _swiper$touchEventsDa.startTranslate,\n        isTouched = _swiper$touchEventsDa.isTouched;\n    var currentTranslate = rtl ? -swiper.translate : swiper.translate;\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slideEl = slides[i];\n      var slideProgress = slideEl.progress;\n      var progress = Math.min(Math.max(slideProgress, -4), 4);\n      var offset = slideEl.swiperSlideOffset;\n\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = \"translateX(\".concat(swiper.minTranslate(), \"px)\");\n      }\n\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n\n      var tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      var tY = 0;\n      var tZ = -100 * Math.abs(progress);\n      var scale = 1;\n      var rotate = -params.perSlideRotate * progress;\n      var tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      var slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      var isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      var isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n\n      if (isSwipeToNext || isSwipeToPrev) {\n        var subProgress = Math.pow(1 - Math.abs((Math.abs(progress) - 0.5) / 0.5), 0.5);\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = \"\".concat(-25 * subProgress * Math.abs(progress), \"%\");\n      }\n\n      if (progress < 0) {\n        // next\n        tX = \"calc(\".concat(tX, \"px \").concat(rtl ? '-' : '+', \" (\").concat(tXAdd * Math.abs(progress), \"%))\");\n      } else if (progress > 0) {\n        // prev\n        tX = \"calc(\".concat(tX, \"px \").concat(rtl ? '-' : '+', \" (-\").concat(tXAdd * Math.abs(progress), \"%))\");\n      } else {\n        tX = \"\".concat(tX, \"px\");\n      }\n\n      if (!swiper.isHorizontal()) {\n        var prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n\n      var scaleString = progress < 0 ? \"\".concat(1 + (1 - scale) * progress) : \"\".concat(1 - (1 - scale) * progress);\n      /* eslint-disable */\n\n      var transform = \"\\n        translate3d(\".concat(tX, \", \").concat(tY, \", \").concat(tZ, \"px)\\n        rotateZ(\").concat(params.rotate ? rtl ? -rotate : rotate : 0, \"deg)\\n        scale(\").concat(scaleString, \")\\n      \");\n      /* eslint-enable */\n\n      if (params.slideShadows) {\n        // Set shadows\n        var shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      var targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n\n  var setTransition = function setTransition(duration) {\n    var transformElements = swiper.slides.map(function (slideEl) {\n      return getSlideTransformEl(slideEl);\n    });\n    transformElements.forEach(function (el) {\n      el.style.transitionDuration = \"\".concat(duration, \"ms\");\n      el.querySelectorAll('.swiper-slide-shadow').forEach(function (shadowEl) {\n        shadowEl.style.transitionDuration = \"\".concat(duration, \"ms\");\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper: swiper,\n      duration: duration,\n      transformElements: transformElements\n    });\n  };\n\n  effectInit({\n    effect: 'cards',\n    swiper: swiper,\n    on: on,\n    setTranslate: setTranslate,\n    setTransition: setTransition,\n    perspective: function perspective() {\n      return true;\n    },\n    overwriteParams: function overwriteParams() {\n      return {\n        watchSlidesProgress: true,\n        virtualTranslate: !swiper.params.cssMode\n      };\n    }\n  });\n}","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/swiper/modules/effect-cards/effect-cards.js"],"names":["createShadow","effectInit","effectTarget","effectVirtualTransitionEnd","getSlideTransformEl","EffectCards","swiper","extendParams","on","cardsEffect","slideShadows","rotate","perSlideRotate","perSlideOffset","setTranslate","slides","activeIndex","rtl","rtlTranslate","params","touchEventsData","startTranslate","isTouched","currentTranslate","translate","i","length","slideEl","slideProgress","progress","Math","min","max","offset","swiperSlideOffset","centeredSlides","cssMode","wrapperEl","style","transform","minTranslate","tX","tY","tZ","abs","scale","tXAdd","slideIndex","virtual","enabled","from","isSwipeToNext","isSwipeToPrev","subProgress","isHorizontal","prevY","scaleString","shadowEl","querySelector","opacity","zIndex","round","targetEl","setTransition","duration","transformElements","map","forEach","el","transitionDuration","querySelectorAll","effect","perspective","overwriteParams","watchSlidesProgress","virtualTranslate"],"mappings":"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","sourcesContent":["import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = rtl ? -swiper.translate : swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px ${rtl ? '-' : '+'} (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px ${rtl ? '-' : '+'} (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n\n      /* eslint-disable */\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rtl ? -rotate : rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      /* eslint-enable */\n\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}"]},"metadata":{},"sourceType":"module"}