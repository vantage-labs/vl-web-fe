{"ast":null,"code":"// packages/react/separator/src/Separator.tsx\nimport * as React from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NAME = \"Separator\";\nvar DEFAULT_ORIENTATION = \"horizontal\";\nvar ORIENTATIONS = [\"horizontal\", \"vertical\"];\nvar Separator = React.forwardRef((props, forwardedRef) => {\n  const {\n    decorative,\n    orientation: orientationProp = DEFAULT_ORIENTATION,\n    ...domProps\n  } = props;\n  const orientation = isValidOrientation(orientationProp) ? orientationProp : DEFAULT_ORIENTATION;\n  const ariaOrientation = orientation === \"vertical\" ? orientation : void 0;\n  const semanticProps = decorative ? {\n    role: \"none\"\n  } : {\n    \"aria-orientation\": ariaOrientation,\n    role: \"separator\"\n  };\n  return /* @__PURE__ */jsx(Primitive.div, {\n    \"data-orientation\": orientation,\n    ...semanticProps,\n    ...domProps,\n    ref: forwardedRef\n  });\n});\nSeparator.displayName = NAME;\n\nfunction isValidOrientation(orientation) {\n  return ORIENTATIONS.includes(orientation);\n}\n\nvar Root = Separator;\nexport { Root, Separator };","map":{"version":3,"mappings":";AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AAmCI;AA7BJ,IAAMC,OAAO,WAAb;AACA,IAAMC,sBAAsB,YAA5B;AACA,IAAMC,eAAe,CAAC,YAAD,EAAe,UAAf,CAArB;AAiBA,IAAMC,YAAkBL,iBAA6C,CAACM,KAAD,EAAQC,YAAR,KAAyB;AAC5F,QAAM;AAAEC,cAAF;AAAcC,iBAAaC,kBAAkBP,mBAA7C;AAAkE,OAAGQ;AAArE,MAAkFL,KAAxF;AACA,QAAMG,cAAcG,mBAAmBF,eAAnB,IAAsCA,eAAtC,GAAwDP,mBAA5E;AAEA,QAAMU,kBAAkBJ,gBAAgB,UAAhB,GAA6BA,WAA7B,GAA2C,MAAnE;AACA,QAAMK,gBAAgBN,aAClB;AAAEO,UAAM;AAAR,GADkB,GAElB;AAAE,wBAAoBF,eAAtB;AAAuCE,UAAM;AAA7C,GAFJ;AAIA,SACE,mBAACd,UAAUe,GAAX,EAAC;AACC,wBAAkBP,WADnB;AAEE,OAAGK,aAFL;AAGE,OAAGH,QAHL;AAICM,SAAKV;AAJN,GAAD,CADF;AAQD,CAjBuB,CAAxB;AAmBAF,UAAUa,WAAV,GAAwBhB,IAAxB;;AAIA,SAASU,kBAAT,CAA4BH,WAA5B,EAA0E;AACxE,SAAOL,aAAae,QAAb,CAAsBV,WAAtB,CAAP;AACF;;AAEA,IAAMW,OAAOf,SAAb","names":["React","Primitive","NAME","DEFAULT_ORIENTATION","ORIENTATIONS","Separator","props","forwardedRef","decorative","orientation","orientationProp","domProps","isValidOrientation","ariaOrientation","semanticProps","role","div","ref","displayName","includes","Root"],"sources":["/home/bahari/vl-web-fe/node_modules/@radix-ui/react-separator/src/Separator.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n *  Separator\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Separator';\nconst DEFAULT_ORIENTATION = 'horizontal';\nconst ORIENTATIONS = ['horizontal', 'vertical'] as const;\n\ntype Orientation = (typeof ORIENTATIONS)[number];\ntype SeparatorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface SeparatorProps extends PrimitiveDivProps {\n  /**\n   * Either `vertical` or `horizontal`. Defaults to `horizontal`.\n   */\n  orientation?: Orientation;\n  /**\n   * Whether or not the component is purely decorative. When true, accessibility-related attributes\n   * are updated so that that the rendered element is removed from the accessibility tree.\n   */\n  decorative?: boolean;\n}\n\nconst Separator = React.forwardRef<SeparatorElement, SeparatorProps>((props, forwardedRef) => {\n  const { decorative, orientation: orientationProp = DEFAULT_ORIENTATION, ...domProps } = props;\n  const orientation = isValidOrientation(orientationProp) ? orientationProp : DEFAULT_ORIENTATION;\n  // `aria-orientation` defaults to `horizontal` so we only need it if `orientation` is vertical\n  const ariaOrientation = orientation === 'vertical' ? orientation : undefined;\n  const semanticProps = decorative\n    ? { role: 'none' }\n    : { 'aria-orientation': ariaOrientation, role: 'separator' };\n\n  return (\n    <Primitive.div\n      data-orientation={orientation}\n      {...semanticProps}\n      {...domProps}\n      ref={forwardedRef}\n    />\n  );\n});\n\nSeparator.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction isValidOrientation(orientation: any): orientation is Orientation {\n  return ORIENTATIONS.includes(orientation);\n}\n\nconst Root = Separator;\n\nexport {\n  Separator,\n  //\n  Root,\n};\nexport type { SeparatorProps };\n"]},"metadata":{},"sourceType":"module"}