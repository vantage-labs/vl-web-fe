{"ast":null,"code":"// packages/react/primitive/src/Primitive.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NODES = [\"a\", \"button\", \"div\", \"form\", \"h2\", \"h3\", \"img\", \"input\", \"label\", \"li\", \"nav\", \"ol\", \"p\", \"span\", \"svg\", \"ul\"];\nvar Primitive = NODES.reduce((primitive, node) => {\n  const Node = React.forwardRef((props, forwardedRef) => {\n    const {\n      asChild,\n      ...primitiveProps\n    } = props;\n    const Comp = asChild ? Slot : node;\n\n    if (typeof window !== \"undefined\") {\n      window[Symbol.for(\"radix-ui\")] = true;\n    }\n\n    return /* @__PURE__ */jsx(Comp, { ...primitiveProps,\n      ref: forwardedRef\n    });\n  });\n  Node.displayName = `Primitive.${node}`;\n  return { ...primitive,\n    [node]: Node\n  };\n}, {});\n\nfunction dispatchDiscreteCustomEvent(target, event) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\n\nvar Root = Primitive;\nexport { Primitive, Root, dispatchDiscreteCustomEvent };","map":{"version":3,"mappings":";AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,YAAYC,QAAZ,MAA0B,WAA1B;AACA,SAASC,IAAT,QAAqB,sBAArB;AA0CW;AAxCX,IAAMC,QAAQ,CACZ,GADY,EAEZ,QAFY,EAGZ,KAHY,EAIZ,MAJY,EAKZ,IALY,EAMZ,IANY,EAOZ,KAPY,EAQZ,OARY,EASZ,OATY,EAUZ,IAVY,EAWZ,KAXY,EAYZ,IAZY,EAaZ,GAbY,EAcZ,MAdY,EAeZ,KAfY,EAgBZ,IAhBY,CAAd;AA+BA,IAAMC,YAAYD,MAAME,MAAN,CAAa,CAACC,SAAD,EAAYC,IAAZ,KAAqB;AAClD,QAAMC,OAAaR,iBAAW,CAACS,KAAD,EAA4CC,YAA5C,KAAkE;AAC9F,UAAM;AAAEC,aAAF;AAAW,SAAGC;AAAd,QAAiCH,KAAvC;AACA,UAAMI,OAAYF,UAAUT,IAAV,GAAiBK,IAAnC;;AAEA,QAAI,OAAOO,MAAP,KAAkB,WAAtB,EAAmC;AAChCA,aAAeC,OAAOC,GAAP,CAAW,UAAX,CAAf,IAAyC,IAAzC;AACH;;AAEA,WAAO,mBAACH,IAAD,EAAC,EAAM,GAAGD,cAAT;AAAyBK,WAAKP;AAA9B,KAAD,CAAP;AACD,GATkB,CAAnB;AAWAF,OAAKU,WAAL,GAAmB,aAAaX,IAAI,EAApC;AAEA,SAAO,EAAE,GAAGD,SAAL;AAAgB,KAACC,IAAD,GAAQC;AAAxB,GAAP;AACF,CAfkB,EAef,EAfe,CAAlB;;AA0DA,SAASW,2BAAT,CAA4DC,MAA5D,EAAiFC,KAAjF,EAA2F;AACzF,MAAID,MAAJ,EAAqBnB,mBAAU,MAAMmB,OAAOE,aAAP,CAAqBD,KAArB,CAAhB;AACvB;;AAIA,IAAME,OAAOnB,SAAb","names":["React","ReactDOM","Slot","NODES","Primitive","reduce","primitive","node","Node","props","forwardedRef","asChild","primitiveProps","Comp","window","Symbol","for","ref","displayName","dispatchDiscreteCustomEvent","target","event","dispatchEvent","Root"],"sources":["/home/bahari/vl-web-fe/node_modules/@radix-ui/react-primitive/src/Primitive.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'form',\n  'h2',\n  'h3',\n  'img',\n  'input',\n  'label',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\ntype Primitives = { [E in (typeof NODES)[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce((primitive, node) => {\n  const Node = React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp: any = asChild ? Slot : node;\n\n    if (typeof window !== 'undefined') {\n      (window as any)[Symbol.for('radix-ui')] = true;\n    }\n\n    return <Comp {...primitiveProps} ref={forwardedRef} />;\n  });\n\n  Node.displayName = `Primitive.${node}`;\n\n  return { ...primitive, [node]: Node };\n}, {} as Primitives);\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Flush custom event dispatch\n * https://github.com/radix-ui/primitives/pull/1378\n *\n * React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.\n *\n * Internally, React prioritises events in the following order:\n *  - discrete\n *  - continuous\n *  - default\n *\n * https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350\n *\n * `discrete` is an  important distinction as updates within these events are applied immediately.\n * React however, is not able to infer the priority of custom event types due to how they are detected internally.\n * Because of this, it's possible for updates from custom events to be unexpectedly batched when\n * dispatched by another `discrete` event.\n *\n * In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.\n * This utility should be used when dispatching a custom event from within another `discrete` event, this utility\n * is not necessary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.\n * For example:\n *\n * dispatching a known click 👎\n * target.dispatchEvent(new Event(‘click’))\n *\n * dispatching a custom type within a non-discrete event 👎\n * onScroll={(event) => event.target.dispatchEvent(new CustomEvent(‘customType’))}\n *\n * dispatching a custom type within a `discrete` event 👍\n * onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(‘customType’))}\n *\n * Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use\n * this utility with them. This is because it's possible for those handlers to be called implicitly during render\n * e.g. when focus is within a component as it is unmounted, or when managing focus on mount.\n */\n\nfunction dispatchDiscreteCustomEvent<E extends CustomEvent>(target: E['target'], event: E) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n};\nexport type { PrimitivePropsWithRef };\n"]},"metadata":{},"sourceType":"module"}