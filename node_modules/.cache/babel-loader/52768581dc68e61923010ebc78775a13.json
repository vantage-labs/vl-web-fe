{"ast":null,"code":"var _jsxFileName = \"/home/bahari/vl-web-fe/src/contexts/LangContexts.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next'; // Membuat Context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LangContext = /*#__PURE__*/createContext(); // Provider untuk membungkus aplikasi\n\nexport const LangProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    i18n\n  } = useTranslation();\n  const [language, setLanguage] = useState(i18n.language || 'id'); // Default bahasa\n  // Fungsi untuk mengganti bahasa\n\n  const changeLanguage = lng => {\n    i18n.changeLanguage(lng);\n    setLanguage(lng);\n  };\n\n  return /*#__PURE__*/_jsxDEV(LangContext.Provider, {\n    value: {\n      language,\n      changeLanguage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}; // Custom hook untuk menggunakan context\n\n_s(LangProvider, \"PqlgPN/rNoiOlKLNVqxyAf1U8ZU=\", false, function () {\n  return [useTranslation];\n});\n\n_c = LangProvider;\nexport const useLang = () => {\n  _s2();\n\n  return useContext(LangContext);\n};\n\n_s2(useLang, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"LangProvider\");","map":{"version":3,"sources":["/home/bahari/vl-web-fe/src/contexts/LangContexts.js"],"names":["React","createContext","useContext","useState","useTranslation","LangContext","LangProvider","children","i18n","language","setLanguage","changeLanguage","lng","useLang"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;AACA,SAASC,cAAT,QAA+B,eAA/B,C,CAEA;;;AACA,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC,C,CAEA;;AACA,OAAO,MAAMK,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,cAAc,EAA/B;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAACK,IAAI,CAACC,QAAL,IAAiB,IAAlB,CAAxC,CAF4C,CAEqB;AAEjE;;AACA,QAAME,cAAc,GAAIC,GAAD,IAAS;AAC9BJ,IAAAA,IAAI,CAACG,cAAL,CAAoBC,GAApB;AACAF,IAAAA,WAAW,CAACE,GAAD,CAAX;AACD,GAHD;;AAKA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEH,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,KAA7B;AAAA,cACGJ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAfM,C,CAiBP;;GAjBaD,Y;UACMF,c;;;KADNE,Y;AAkBb,OAAO,MAAMO,OAAO,GAAG;AAAA;;AAAA,SAAMX,UAAU,CAACG,WAAD,CAAhB;AAAA,CAAhB;;IAAMQ,O","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\n// Membuat Context\nconst LangContext = createContext();\n\n// Provider untuk membungkus aplikasi\nexport const LangProvider = ({ children }) => {\n  const { i18n } = useTranslation();\n  const [language, setLanguage] = useState(i18n.language || 'id'); // Default bahasa\n\n  // Fungsi untuk mengganti bahasa\n  const changeLanguage = (lng) => {\n    i18n.changeLanguage(lng);\n    setLanguage(lng);\n  };\n\n  return (\n    <LangContext.Provider value={{ language, changeLanguage }}>\n      {children}\n    </LangContext.Provider>\n  );\n};\n\n// Custom hook untuk menggunakan context\nexport const useLang = () => useContext(LangContext);\n"]},"metadata":{},"sourceType":"module"}