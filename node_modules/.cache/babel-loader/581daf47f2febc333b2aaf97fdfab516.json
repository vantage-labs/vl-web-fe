{"ast":null,"code":"import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nvar deviceCached;\n\nfunction calcDevice() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      userAgent = _ref.userAgent;\n\n  var support = getSupport();\n  var window = getWindow();\n  var platform = window.navigator.platform;\n  var ua = userAgent || window.navigator.userAgent;\n  var device = {\n    ios: false,\n    android: false\n  };\n  var screenWidth = window.screen.width;\n  var screenHeight = window.screen.height;\n  var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n\n  var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  var windows = platform === 'Win32';\n  var macos = platform === 'MacIntel'; // iPadOs 13 fix\n\n  var iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(\"\".concat(screenWidth, \"x\").concat(screenHeight)) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  } // Android\n\n\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  } // Export object\n\n\n  return device;\n}\n\nfunction getDevice() {\n  var overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n\n  return deviceCached;\n}\n\nexport { getDevice };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/swiper/shared/get-device.js"],"names":["getWindow","getSupport","deviceCached","calcDevice","userAgent","support","window","platform","navigator","ua","device","ios","android","screenWidth","screen","width","screenHeight","height","match","ipad","ipod","iphone","windows","macos","iPadScreens","touch","indexOf","os","getDevice","overrides"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,IAAIC,YAAJ;;AACA,SAASC,UAAT,GAEQ;AAAA,iFAAJ,EAAI;AAAA,MADNC,SACM,QADNA,SACM;;AACN,MAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,MAAMK,MAAM,GAAGN,SAAS,EAAxB;AACA,MAAMO,QAAQ,GAAGD,MAAM,CAACE,SAAP,CAAiBD,QAAlC;AACA,MAAME,EAAE,GAAGL,SAAS,IAAIE,MAAM,CAACE,SAAP,CAAiBJ,SAAzC;AACA,MAAMM,MAAM,GAAG;AACbC,IAAAA,GAAG,EAAE,KADQ;AAEbC,IAAAA,OAAO,EAAE;AAFI,GAAf;AAIA,MAAMC,WAAW,GAAGP,MAAM,CAACQ,MAAP,CAAcC,KAAlC;AACA,MAAMC,YAAY,GAAGV,MAAM,CAACQ,MAAP,CAAcG,MAAnC;AACA,MAAML,OAAO,GAAGH,EAAE,CAACS,KAAH,CAAS,6BAAT,CAAhB,CAXM,CAWmD;;AACzD,MAAIC,IAAI,GAAGV,EAAE,CAACS,KAAH,CAAS,sBAAT,CAAX;AACA,MAAME,IAAI,GAAGX,EAAE,CAACS,KAAH,CAAS,yBAAT,CAAb;AACA,MAAMG,MAAM,GAAG,CAACF,IAAD,IAASV,EAAE,CAACS,KAAH,CAAS,4BAAT,CAAxB;AACA,MAAMI,OAAO,GAAGf,QAAQ,KAAK,OAA7B;AACA,MAAIgB,KAAK,GAAGhB,QAAQ,KAAK,UAAzB,CAhBM,CAkBN;;AACA,MAAMiB,WAAW,GAAG,CAAC,WAAD,EAAc,WAAd,EAA2B,UAA3B,EAAuC,UAAvC,EAAmD,UAAnD,EAA+D,UAA/D,EAA2E,UAA3E,EAAuF,UAAvF,EAAmG,UAAnG,EAA+G,UAA/G,EAA2H,UAA3H,EAAuI,UAAvI,CAApB;;AACA,MAAI,CAACL,IAAD,IAASI,KAAT,IAAkBlB,OAAO,CAACoB,KAA1B,IAAmCD,WAAW,CAACE,OAAZ,WAAuBb,WAAvB,cAAsCG,YAAtC,MAAyD,CAAhG,EAAmG;AACjGG,IAAAA,IAAI,GAAGV,EAAE,CAACS,KAAH,CAAS,qBAAT,CAAP;AACA,QAAI,CAACC,IAAL,EAAWA,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,QAAP,CAAP;AACXI,IAAAA,KAAK,GAAG,KAAR;AACD,GAxBK,CA0BN;;;AACA,MAAIX,OAAO,IAAI,CAACU,OAAhB,EAAyB;AACvBZ,IAAAA,MAAM,CAACiB,EAAP,GAAY,SAAZ;AACAjB,IAAAA,MAAM,CAACE,OAAP,GAAiB,IAAjB;AACD;;AACD,MAAIO,IAAI,IAAIE,MAAR,IAAkBD,IAAtB,EAA4B;AAC1BV,IAAAA,MAAM,CAACiB,EAAP,GAAY,KAAZ;AACAjB,IAAAA,MAAM,CAACC,GAAP,GAAa,IAAb;AACD,GAlCK,CAoCN;;;AACA,SAAOD,MAAP;AACD;;AACD,SAASkB,SAAT,GAAmC;AAAA,MAAhBC,SAAgB,uEAAJ,EAAI;;AACjC,MAAI,CAAC3B,YAAL,EAAmB;AACjBA,IAAAA,YAAY,GAAGC,UAAU,CAAC0B,SAAD,CAAzB;AACD;;AACD,SAAO3B,YAAP;AACD;;AACD,SAAS0B,SAAT","sourcesContent":["import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };"]},"metadata":{},"sourceType":"module"}