{"ast":null,"code":"import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip(_ref) {\n  var swiper = _ref.swiper,\n      extendParams = _ref.extendParams,\n      on = _ref.on;\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n\n  var createSlideShadows = function createSlideShadows(slideEl, progress, params) {\n    var shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    var shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n\n  var recreateShadows = function recreateShadows() {\n    // Set shadows\n    var params = swiper.params.flipEffect;\n    swiper.slides.forEach(function (slideEl) {\n      var progress = slideEl.progress;\n\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n\n  var setTranslate = function setTranslate() {\n    var slides = swiper.slides,\n        rtl = swiper.rtlTranslate;\n    var params = swiper.params.flipEffect;\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slideEl = slides[i];\n      var progress = slideEl.progress;\n\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n\n      var offset = slideEl.swiperSlideOffset;\n      var rotate = -180 * progress;\n      var rotateY = rotate;\n      var rotateX = 0;\n      var tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      var ty = 0;\n\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n\n      var transform = \"translate3d(\".concat(tx, \"px, \").concat(ty, \"px, 0px) rotateX(\").concat(rotateX, \"deg) rotateY(\").concat(rotateY, \"deg)\");\n      var targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n\n  var setTransition = function setTransition(duration) {\n    var transformElements = swiper.slides.map(function (slideEl) {\n      return getSlideTransformEl(slideEl);\n    });\n    transformElements.forEach(function (el) {\n      el.style.transitionDuration = \"\".concat(duration, \"ms\");\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(function (shadowEl) {\n        shadowEl.style.transitionDuration = \"\".concat(duration, \"ms\");\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper: swiper,\n      duration: duration,\n      transformElements: transformElements\n    });\n  };\n\n  effectInit({\n    effect: 'flip',\n    swiper: swiper,\n    on: on,\n    setTranslate: setTranslate,\n    setTransition: setTransition,\n    recreateShadows: recreateShadows,\n    getEffectParams: function getEffectParams() {\n      return swiper.params.flipEffect;\n    },\n    perspective: function perspective() {\n      return true;\n    },\n    overwriteParams: function overwriteParams() {\n      return {\n        slidesPerView: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: !swiper.params.cssMode\n      };\n    }\n  });\n}","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/swiper/modules/effect-flip/effect-flip.js"],"names":["createShadow","effectInit","effectTarget","effectVirtualTransitionEnd","getSlideTransformEl","EffectFlip","swiper","extendParams","on","flipEffect","slideShadows","limitRotation","createSlideShadows","slideEl","progress","params","shadowBefore","isHorizontal","querySelector","shadowAfter","style","opacity","Math","max","recreateShadows","slides","forEach","min","setTranslate","rtl","rtlTranslate","i","length","offset","swiperSlideOffset","rotate","rotateY","rotateX","tx","cssMode","translate","ty","zIndex","abs","round","transform","targetEl","setTransition","duration","transformElements","map","el","transitionDuration","querySelectorAll","shadowEl","effect","getEffectParams","perspective","overwriteParams","slidesPerView","slidesPerGroup","watchSlidesProgress","spaceBetween","virtualTranslate"],"mappings":"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","sourcesContent":["import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}"]},"metadata":{},"sourceType":"module"}