{"ast":null,"code":"import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  var slidesGrid = swiper.slidesGrid,\n      params = swiper.params;\n  var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  var activeIndex;\n\n  for (var i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  } // Normalize slideIndex\n\n\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  var swiper = this;\n  var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  var snapGrid = swiper.snapGrid,\n      params = swiper.params,\n      previousIndex = swiper.activeIndex,\n      previousRealIndex = swiper.realIndex,\n      previousSnapIndex = swiper.snapIndex;\n  var activeIndex = newActiveIndex;\n  var snapIndex;\n\n  var getVirtualRealIndex = function getVirtualRealIndex(aIndex) {\n    var realIndex = aIndex - swiper.virtual.slidesBefore;\n\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n\n    return realIndex;\n  };\n\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    var skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n\n    return;\n  } // Get real index\n\n\n  var realIndex;\n\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n\n  Object.assign(swiper, {\n    previousSnapIndex: previousSnapIndex,\n    snapIndex: snapIndex,\n    previousRealIndex: previousRealIndex,\n    realIndex: realIndex,\n    previousIndex: previousIndex,\n    activeIndex: activeIndex\n  });\n\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/swiper/core/update/updateActiveIndex.js"],"names":["preload","getActiveIndexByTranslate","swiper","slidesGrid","params","translate","rtlTranslate","activeIndex","i","length","normalizeSlideIndex","updateActiveIndex","newActiveIndex","snapGrid","previousIndex","previousRealIndex","realIndex","previousSnapIndex","snapIndex","getVirtualRealIndex","aIndex","virtual","slidesBefore","slides","indexOf","skip","Math","min","slidesPerGroupSkip","floor","slidesPerGroup","emit","loop","enabled","parseInt","getAttribute","Object","assign","initialized","runCallbacksOnInit"],"mappings":"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","sourcesContent":["import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}"]},"metadata":{},"sourceType":"module"}