{"ast":null,"code":"import _defineProperty from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\n\nvar isColorString = function isColorString(type, testProp) {\n  return function (v) {\n    return Boolean(typeof v === \"string\" && singleColorRegex.test(v) && v.startsWith(type) || testProp && !isNullish(v) && Object.prototype.hasOwnProperty.call(v, testProp));\n  };\n};\n\nvar splitColor = function splitColor(aName, bName, cName) {\n  return function (v) {\n    var _ref;\n\n    if (typeof v !== \"string\") return v;\n\n    var _v$match = v.match(floatRegex),\n        _v$match2 = _slicedToArray(_v$match, 4),\n        a = _v$match2[0],\n        b = _v$match2[1],\n        c = _v$match2[2],\n        alpha = _v$match2[3];\n\n    return _ref = {}, _defineProperty(_ref, aName, parseFloat(a)), _defineProperty(_ref, bName, parseFloat(b)), _defineProperty(_ref, cName, parseFloat(c)), _defineProperty(_ref, \"alpha\", alpha !== undefined ? parseFloat(alpha) : 1), _ref;\n  };\n};\n\nexport { isColorString, splitColor };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/framer-motion/dist/es/value/types/color/utils.mjs"],"names":["floatRegex","isNullish","singleColorRegex","isColorString","type","testProp","v","Boolean","test","startsWith","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","a","b","c","alpha","parseFloat","undefined"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AAEA;AACA;AACA;AACA;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAOC,QAAP;AAAA,SAAoB,UAACC,CAAD,EAAO;AAC7C,WAAOC,OAAO,CAAE,OAAOD,CAAP,KAAa,QAAb,IACZJ,gBAAgB,CAACM,IAAjB,CAAsBF,CAAtB,CADY,IAEZA,CAAC,CAACG,UAAF,CAAaL,IAAb,CAFW,IAGVC,QAAQ,IACL,CAACJ,SAAS,CAACK,CAAD,CADb,IAEGI,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCP,CAArC,EAAwCD,QAAxC,CALM,CAAd;AAMH,GAPqB;AAAA,CAAtB;;AAQA,IAAMS,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf;AAAA,SAAyB,UAACX,CAAD,EAAO;AAAA;;AAC/C,QAAI,OAAOA,CAAP,KAAa,QAAjB,EACI,OAAOA,CAAP;;AACJ,mBAAyBA,CAAC,CAACY,KAAF,CAAQlB,UAAR,CAAzB;AAAA;AAAA,QAAOmB,CAAP;AAAA,QAAUC,CAAV;AAAA,QAAaC,CAAb;AAAA,QAAgBC,KAAhB;;AACA,4CACKP,KADL,EACaQ,UAAU,CAACJ,CAAD,CADvB,yBAEKH,KAFL,EAEaO,UAAU,CAACH,CAAD,CAFvB,yBAGKH,KAHL,EAGaM,UAAU,CAACF,CAAD,CAHvB,kCAIWC,KAAK,KAAKE,SAAV,GAAsBD,UAAU,CAACD,KAAD,CAAhC,GAA0C,CAJrD;AAMH,GAVkB;AAAA,CAAnB;;AAYA,SAASnB,aAAT,EAAwBW,UAAxB","sourcesContent":["import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n"]},"metadata":{},"sourceType":"module"}