{"ast":null,"code":"// packages/react/direction/src/Direction.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar DirectionContext = React.createContext(void 0);\n\nvar DirectionProvider = props => {\n  const {\n    dir,\n    children\n  } = props;\n  return /* @__PURE__ */jsx(DirectionContext.Provider, {\n    value: dir,\n    children\n  });\n};\n\nfunction useDirection(localDir) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || \"ltr\";\n}\n\nvar Provider = DirectionProvider;\nexport { DirectionProvider, Provider, useDirection };","map":{"version":3,"mappings":";AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AAeS;AAZT,IAAMC,mBAAyBD,oBAAqC,MAArC,CAA/B;;AAUA,IAAME,oBAAuDC,KAAD,IAAW;AACrE,QAAM;AAAEC,OAAF;AAAOC;AAAP,MAAoBF,KAA1B;AACA,SAAO,mBAACF,iBAAiBK,QAAlB,EAAC;AAA0BC,WAAOH,GAAjC;AAAuCC;AAAvC,GAAD,CAAP;AACF,CAHA;;AAOA,SAASG,YAAT,CAAsBC,QAAtB,EAA4C;AAC1C,QAAMC,YAAkBV,iBAAWC,gBAAX,CAAxB;AACA,SAAOQ,YAAYC,SAAZ,IAAyB,KAAhC;AACF;;AAEA,IAAMJ,WAAWJ,iBAAjB","names":["React","DirectionContext","DirectionProvider","props","dir","children","Provider","value","useDirection","localDir","globalDir"],"sources":["/home/bahari/vl-web-fe/node_modules/@radix-ui/react-direction/src/Direction.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype Direction = 'ltr' | 'rtl';\nconst DirectionContext = React.createContext<Direction | undefined>(undefined);\n\n/* -------------------------------------------------------------------------------------------------\n * Direction\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DirectionProviderProps {\n  children?: React.ReactNode;\n  dir: Direction;\n}\nconst DirectionProvider: React.FC<DirectionProviderProps> = (props) => {\n  const { dir, children } = props;\n  return <DirectionContext.Provider value={dir}>{children}</DirectionContext.Provider>;\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useDirection(localDir?: Direction) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || 'ltr';\n}\n\nconst Provider = DirectionProvider;\n\nexport {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n};\n"]},"metadata":{},"sourceType":"module"}