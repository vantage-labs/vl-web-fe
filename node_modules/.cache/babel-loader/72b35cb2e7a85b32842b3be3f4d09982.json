{"ast":null,"code":"import { getWindow } from 'ssr-window';\nexport default function Resize(_ref) {\n  var swiper = _ref.swiper,\n      on = _ref.on,\n      emit = _ref.emit;\n  var window = getWindow();\n  var observer = null;\n  var animationFrame = null;\n\n  var resizeHandler = function resizeHandler() {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n\n  var createObserver = function createObserver() {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(function (entries) {\n      animationFrame = window.requestAnimationFrame(function () {\n        var width = swiper.width,\n            height = swiper.height;\n        var newWidth = width;\n        var newHeight = height;\n        entries.forEach(function (_ref2) {\n          var contentBoxSize = _ref2.contentBoxSize,\n              contentRect = _ref2.contentRect,\n              target = _ref2.target;\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n\n  var removeObserver = function removeObserver() {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n\n  var orientationChangeHandler = function orientationChangeHandler() {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n\n  on('init', function () {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', function () {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/swiper/core/modules/resize/resize.js"],"names":["getWindow","Resize","swiper","on","emit","window","observer","animationFrame","resizeHandler","destroyed","initialized","createObserver","ResizeObserver","entries","requestAnimationFrame","width","height","newWidth","newHeight","forEach","contentBoxSize","contentRect","target","el","inlineSize","blockSize","observe","removeObserver","cancelAnimationFrame","unobserve","orientationChangeHandler","params","resizeObserver","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}"]},"metadata":{},"sourceType":"module"}