{"ast":null,"code":"import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nfunction useAnimationFrame(callback) {\n  var initialTimestamp = useRef(0);\n\n  var _useContext = useContext(MotionConfigContext),\n      isStatic = _useContext.isStatic;\n\n  useEffect(function () {\n    if (isStatic) return;\n\n    var provideTimeSinceStart = function provideTimeSinceStart(_ref) {\n      var timestamp = _ref.timestamp,\n          delta = _ref.delta;\n      if (!initialTimestamp.current) initialTimestamp.current = timestamp;\n      callback(timestamp - initialTimestamp.current, delta);\n    };\n\n    frame.update(provideTimeSinceStart, true);\n    return function () {\n      return cancelFrame(provideTimeSinceStart);\n    };\n  }, [callback]);\n}\n\nexport { useAnimationFrame };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/framer-motion/dist/es/utils/use-animation-frame.mjs"],"names":["useRef","useContext","useEffect","MotionConfigContext","frame","cancelFrame","useAnimationFrame","callback","initialTimestamp","isStatic","provideTimeSinceStart","timestamp","delta","current","update"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,UAAjB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,mBAAT,QAAoC,oCAApC;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,wBAAnC;;AAEA,SAASC,iBAAT,CAA2BC,QAA3B,EAAqC;AACjC,MAAMC,gBAAgB,GAAGR,MAAM,CAAC,CAAD,CAA/B;;AACA,oBAAqBC,UAAU,CAACE,mBAAD,CAA/B;AAAA,MAAQM,QAAR,eAAQA,QAAR;;AACAP,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIO,QAAJ,EACI;;AACJ,QAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,OAA0B;AAAA,UAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,UAAZC,KAAY,QAAZA,KAAY;AACpD,UAAI,CAACJ,gBAAgB,CAACK,OAAtB,EACIL,gBAAgB,CAACK,OAAjB,GAA2BF,SAA3B;AACJJ,MAAAA,QAAQ,CAACI,SAAS,GAAGH,gBAAgB,CAACK,OAA9B,EAAuCD,KAAvC,CAAR;AACH,KAJD;;AAKAR,IAAAA,KAAK,CAACU,MAAN,CAAaJ,qBAAb,EAAoC,IAApC;AACA,WAAO;AAAA,aAAML,WAAW,CAACK,qBAAD,CAAjB;AAAA,KAAP;AACH,GAVQ,EAUN,CAACH,QAAD,CAVM,CAAT;AAWH;;AAED,SAASD,iBAAT","sourcesContent":["import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nfunction useAnimationFrame(callback) {\n    const initialTimestamp = useRef(0);\n    const { isStatic } = useContext(MotionConfigContext);\n    useEffect(() => {\n        if (isStatic)\n            return;\n        const provideTimeSinceStart = ({ timestamp, delta }) => {\n            if (!initialTimestamp.current)\n                initialTimestamp.current = timestamp;\n            callback(timestamp - initialTimestamp.current, delta);\n        };\n        frame.update(provideTimeSinceStart, true);\n        return () => cancelFrame(provideTimeSinceStart);\n    }, [callback]);\n}\n\nexport { useAnimationFrame };\n"]},"metadata":{},"sourceType":"module"}