{"ast":null,"code":"import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n  constructor() {\n    super(...arguments);\n    this.KeyframeResolver = DOMKeyframesResolver;\n  }\n\n  sortInstanceNodePosition(a, b) {\n    /**\n     * compareDocumentPosition returns a bitmask, by using the bitwise &\n     * we're returning true if 2 in that bitmask is set to true. 2 is set\n     * to true if b preceeds a.\n     */\n    return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n  }\n\n  getBaseTargetFromProps(props, key) {\n    return props.style ? props.style[key] : undefined;\n  }\n\n  removeValueFromRenderState(key, _ref) {\n    let {\n      vars,\n      style\n    } = _ref;\n    delete vars[key];\n    delete style[key];\n  }\n\n  handleChildMotionValue() {\n    if (this.childSubscription) {\n      this.childSubscription();\n      delete this.childSubscription;\n    }\n\n    const {\n      children\n    } = this.props;\n\n    if (isMotionValue(children)) {\n      this.childSubscription = children.on(\"change\", latest => {\n        if (this.current) {\n          this.current.textContent = `${latest}`;\n        }\n      });\n    }\n  }\n\n}\n\nexport { DOMVisualElement };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs"],"names":["VisualElement","DOMKeyframesResolver","isMotionValue","DOMVisualElement","constructor","arguments","KeyframeResolver","sortInstanceNodePosition","a","b","compareDocumentPosition","getBaseTargetFromProps","props","key","style","undefined","removeValueFromRenderState","vars","handleChildMotionValue","childSubscription","children","on","latest","current","textContent"],"mappings":"AAAA,SAASA,aAAT,QAA8B,sBAA9B;AACA,SAASC,oBAAT,QAAqC,4BAArC;AACA,SAASC,aAAT,QAA8B,uCAA9B;;AAEA,MAAMC,gBAAN,SAA+BH,aAA/B,CAA6C;AACzCI,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA,SAAKC,gBAAL,GAAwBL,oBAAxB;AACH;;AACDM,EAAAA,wBAAwB,CAACC,CAAD,EAAIC,CAAJ,EAAO;AAC3B;AACR;AACA;AACA;AACA;AACQ,WAAOD,CAAC,CAACE,uBAAF,CAA0BD,CAA1B,IAA+B,CAA/B,GAAmC,CAAnC,GAAuC,CAAC,CAA/C;AACH;;AACDE,EAAAA,sBAAsB,CAACC,KAAD,EAAQC,GAAR,EAAa;AAC/B,WAAOD,KAAK,CAACE,KAAN,GACDF,KAAK,CAACE,KAAN,CAAYD,GAAZ,CADC,GAEDE,SAFN;AAGH;;AACDC,EAAAA,0BAA0B,CAACH,GAAD,QAAuB;AAAA,QAAjB;AAAEI,MAAAA,IAAF;AAAQH,MAAAA;AAAR,KAAiB;AAC7C,WAAOG,IAAI,CAACJ,GAAD,CAAX;AACA,WAAOC,KAAK,CAACD,GAAD,CAAZ;AACH;;AACDK,EAAAA,sBAAsB,GAAG;AACrB,QAAI,KAAKC,iBAAT,EAA4B;AACxB,WAAKA,iBAAL;AACA,aAAO,KAAKA,iBAAZ;AACH;;AACD,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKR,KAA1B;;AACA,QAAIV,aAAa,CAACkB,QAAD,CAAjB,EAA6B;AACzB,WAAKD,iBAAL,GAAyBC,QAAQ,CAACC,EAAT,CAAY,QAAZ,EAAuBC,MAAD,IAAY;AACvD,YAAI,KAAKC,OAAT,EAAkB;AACd,eAAKA,OAAL,CAAaC,WAAb,GAA4B,GAAEF,MAAO,EAArC;AACH;AACJ,OAJwB,CAAzB;AAKH;AACJ;;AAnCwC;;AAsC7C,SAASnB,gBAAT","sourcesContent":["import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n"]},"metadata":{},"sourceType":"module"}