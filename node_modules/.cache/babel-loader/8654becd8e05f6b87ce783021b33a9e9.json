{"ast":null,"code":"const isString = obj => typeof obj === 'string';\n\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\n\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\n\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\n\nconst lastOfPathSeparatorRegExp = /###/g;\n\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\n\nconst canNotTraverseDeeper = object => !object || isString(object);\n\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n\n    ++stackIndex;\n  }\n\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\n\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n\n    if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n\n  last.obj[`${last.k}.${e}`] = newValue;\n};\n\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\n\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n  return obj[k];\n};\n\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n\n  if (value !== undefined) {\n    return value;\n  }\n\n  return getPath(defaultData, key);\n};\n\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n\n  return target;\n};\n\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\n\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n\n  return data;\n};\n\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n\n    const regExpNew = new RegExp(pattern);\n\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n\n}\n\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\n\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n\n  return matched;\n};\n\nconst deepFind = function (obj, path) {\n  let keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n\n  if (obj[path]) {\n    if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n    return obj[path];\n  }\n\n  const tokens = path.split(keySeparator);\n  let current = obj;\n\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n\n    let next;\n    let nextPath = '';\n\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n\n      nextPath += tokens[j];\n      next = current[nextPath];\n\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n\n        i += j - i + 1;\n        break;\n      }\n    }\n\n    current = next;\n  }\n\n  return current;\n};\n\nconst getCleanedCode = code => code?.replace('_', '-');\n\nconst consoleLogger = {\n  type: 'logger',\n\n  log(args) {\n    this.output('log', args);\n  },\n\n  warn(args) {\n    this.output('warn', args);\n  },\n\n  error(args) {\n    this.output('error', args);\n  },\n\n  output(type, args) {\n    console?.[type]?.apply?.(console, args);\n  }\n\n};\n\nclass Logger {\n  constructor(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.init(concreteLogger, options);\n  }\n\n  init(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n\n  log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return this.forward(args, 'log', '', true);\n  }\n\n  warn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return this.forward(args, 'warn', '', true);\n  }\n\n  error() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return this.forward(args, 'error', '');\n  }\n\n  deprecate() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n\n  create(moduleName) {\n    return new Logger(this.logger, { ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n\n}\n\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n\n  off(event, listener) {\n    if (!this.observers[event]) return;\n\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n\n    this.observers[event].delete(listener);\n  }\n\n  emit(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(_ref => {\n        let [observer, numTimesAdded] = _ref;\n\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(_ref2 => {\n        let [observer, numTimesAdded] = _ref2;\n\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n    super();\n    this.data = data || {};\n    this.options = options;\n\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n\n  getResource(lng, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n\n    const result = getPath(this.data, path);\n\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n  }\n\n  addResource(lng, ns, key, value) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      silent: false\n    };\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n\n  addResources(lng, ns, resources) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n      silent: false\n    };\n\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n\n  addResourceBundle(lng, ns, resources, deep, overwrite) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n      silent: false,\n      skipCopy: false\n    };\n    let path = [lng, ns];\n\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = { ...pack,\n        ...resources\n      };\n    }\n\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    return this.getResource(lng, ns);\n  }\n\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n\n  toJSON() {\n    return this.data;\n  }\n\n}\n\nvar postProcessor = {\n  processors: {},\n\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n    });\n    return value;\n  }\n\n};\nconst checkedLoadedFor = {};\n\nconst shouldHandleAsObject = res => !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\n\nclass Translator extends EventEmitter {\n  constructor(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n\n    this.logger = baseLogger.create('translator');\n  }\n\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n\n  exists(key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n\n    if (key == null) {\n      return false;\n    }\n\n    const resolved = this.resolve(key, options);\n    return resolved?.res !== undefined;\n  }\n\n  extractFromKey(key, options) {\n    let nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let namespaces = options.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n\n  translate(keys, options, lastKey) {\n    if (typeof options !== 'object' && this.options.overloadTranslationOptionHandler) {\n      options = this.options.overloadTranslationOptionHandler(arguments);\n    }\n\n    if (typeof options === 'object') options = { ...options\n    };\n    if (!options) options = {};\n    if (keys == null) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], options);\n    const namespace = namespaces[namespaces.length - 1];\n    const lng = options.lng || this.language;\n    const appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n\n    if (lng?.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        const nsSeparator = options.nsSeparator || this.options.nsSeparator;\n\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(options)\n          };\n        }\n\n        return `${namespace}${nsSeparator}${key}`;\n      }\n\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(options)\n        };\n      }\n\n      return key;\n    }\n\n    const resolved = this.resolve(keys, options);\n    let res = resolved?.res;\n    const resUsedKey = resolved?.usedKey || key;\n    const resExactUsedKey = resolved?.exactUsedKey || key;\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const needsPluralHandling = options.count !== undefined && !isString(options.count);\n    const hasDefaultValue = Translator.hasDefaultValue(options);\n    const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : '';\n    const defaultValueSuffixOrdinalFallback = options.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, {\n      ordinal: false\n    }) : '';\n    const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;\n    const defaultValue = needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] || options[`defaultValue${defaultValueSuffix}`] || options[`defaultValue${defaultValueSuffixOrdinalFallback}`] || options.defaultValue;\n    let resForObjHndl = res;\n\n    if (handleAsObjectInI18nFormat && !res && hasDefaultValue) {\n      resForObjHndl = defaultValue;\n    }\n\n    const handleAsObject = shouldHandleAsObject(resForObjHndl);\n    const resType = Object.prototype.toString.apply(resForObjHndl);\n\n    if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {\n      if (!options.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, { ...options,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(options);\n          return resolved;\n        }\n\n        return r;\n      }\n\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(resForObjHndl);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n\n        for (const m in resForObjHndl) {\n          if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n\n            if (hasDefaultValue && !res) {\n              copy[m] = this.translate(deepKey, { ...options,\n                defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            } else {\n              copy[m] = this.translate(deepKey, { ...options,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            }\n\n            if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n          }\n        }\n\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, options, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n\n      const missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n\n        if (keySeparator) {\n          const fk = this.resolve(key, { ...options,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n        } else {\n          lngs.push(options.lng || this.language);\n        }\n\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);\n          } else if (this.backendConnector?.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);\n          }\n\n          this.emit('missingKey', l, namespace, k, res);\n        };\n\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, options);\n\n              if (needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, options[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n\n      res = this.extendTranslation(res, keys, options, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = `${namespace}:${key}`;\n\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}:${key}` : key, usedDefault ? res : undefined);\n      }\n    }\n\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(options);\n      return resolved;\n    }\n\n    return res;\n  }\n\n  extendTranslation(res, key, options, resolved, lastKey) {\n    var _this = this;\n\n    if (this.i18nFormat?.parse) {\n      res = this.i18nFormat.parse(res, { ...this.options.interpolation.defaultVariables,\n        ...options\n      }, options.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!options.skipInterpolation) {\n      if (options.interpolation) this.interpolator.init({ ...options,\n        ...{\n          interpolation: { ...this.options.interpolation,\n            ...options.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n\n      let data = options.replace && !isString(options.replace) ? options.replace : options;\n      if (this.options.interpolation.defaultVariables) data = { ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, options.lng || this.language || resolved.usedLng, options);\n\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) options.nest = false;\n      }\n\n      if (!options.lng && resolved && resolved.res) options.lng = this.language || resolved.usedLng;\n      if (options.nest !== false) res = this.interpolator.nest(res, function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (lastKey?.[0] === args[0] && !options.context) {\n          _this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n\n          return null;\n        }\n\n        return _this.translate(...args, key);\n      }, options);\n      if (options.interpolation) this.interpolator.reset();\n    }\n\n    const postProcess = options.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n\n    if (res != null && postProcessorNames?.length && options.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: { ...resolved,\n          usedParams: this.getUsedParamsDetails(options)\n        },\n        ...options\n      } : options, this);\n    }\n\n    return res;\n  }\n\n  resolve(keys) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, options);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = options.count !== undefined && !isString(options.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;\n      const needsContextHandling = options.context !== undefined && (isString(options.context) || typeof options.context === 'number') && options.context !== '';\n      const codes = options.lngs ? options.lngs : this.languageUtils.toResolveHierarchy(options.lng || this.language, options.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n\n          if (this.i18nFormat?.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, options.count, options);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n\n            if (needsPluralHandling) {\n              finalKeys.push(key + pluralSuffix);\n\n              if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator}${options.context}`;\n              finalKeys.push(contextKey);\n\n              if (needsPluralHandling) {\n                finalKeys.push(contextKey + pluralSuffix);\n\n                if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n\n          let possibleKey;\n\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, options);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n\n  getResource(code, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n\n  getUsedParamsDetails() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n\n    if (this.options.interpolation.defaultVariables) {\n      data = { ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n\n    if (!useOptionsReplaceForData) {\n      data = { ...data\n      };\n\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n\n    return data;\n  }\n\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      let formattedCode;\n\n      try {\n        formattedCode = Intl.getCanonicalLocales(code)[0];\n      } catch (e) {}\n\n      if (formattedCode && this.options.lowerCaseLng) {\n        formattedCode = formattedCode.toLowerCase();\n      }\n\n      if (formattedCode) return formattedCode;\n\n      if (this.options.lowerCaseLng) {\n        return code.toLowerCase();\n      }\n\n      return code;\n    }\n\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n    const codes = [];\n\n    const addCode = c => {\n      if (!c) return;\n\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n\n}\n\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst dummyRule = {\n  select: count => count === 1 ? 'one' : 'other',\n  resolvedOptions: () => ({\n    pluralCategories: ['one', 'other']\n  })\n};\n\nclass PluralResolver {\n  constructor(languageUtils) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.pluralRulesCache = {};\n  }\n\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n\n  getRule(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n    const type = options.ordinal ? 'ordinal' : 'cardinal';\n    const cacheKey = JSON.stringify({\n      cleanedCode,\n      type\n    });\n\n    if (cacheKey in this.pluralRulesCache) {\n      return this.pluralRulesCache[cacheKey];\n    }\n\n    let rule;\n\n    try {\n      rule = new Intl.PluralRules(cleanedCode, {\n        type\n      });\n    } catch (err) {\n      if (!Intl) {\n        this.logger.error('No Intl support, please use an Intl polyfill!');\n        return dummyRule;\n      }\n\n      if (!code.match(/-|_/)) return dummyRule;\n      const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n      rule = this.getRule(lngPart, options);\n    }\n\n    this.pluralRulesCache[cacheKey] = rule;\n    return rule;\n  }\n\n  needsPlural(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    return rule?.resolvedOptions().pluralCategories.length > 1;\n  }\n\n  getPluralFormsOfKey(code, key) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n\n  getSuffixes(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    if (!rule) return [];\n    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n  }\n\n  getSuffix(code, count) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const rule = this.getRule(code, options);\n\n    if (rule) {\n      return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n    }\n\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return this.getSuffix('dev', count, options);\n  }\n\n}\n\nconst deepFindWithDefaults = function (data, defaultData, key) {\n  let keySeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n  let ignoreJSONStructure = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  let path = getPathWithDefaults(data, defaultData, key);\n\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n\n  return path;\n};\n\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\n\nclass Interpolator {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n\n    this.format = options?.interpolation?.format || (value => value);\n\n    this.init(options);\n  }\n\n  init() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp?.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n\n      return new RegExp(pattern, 'g');\n    };\n\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);\n  }\n\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, { ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, { ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n\n    this.resetRegExp();\n    const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n\n        replaces++;\n\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n\n  nest(str, fc) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let match;\n    let value;\n    let clonedOptions;\n\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n\n      if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = { ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = { ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      let doReduce = false;\n\n      if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n        const r = match[1].split(this.formatSeparator).map(elem => elem.trim());\n        match[1] = r.shift();\n        formatters = r;\n        doReduce = true;\n      }\n\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n\n      if (doReduce) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, { ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n\n    return str;\n  }\n\n}\n\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n\n  return {\n    formatName,\n    formatOptions\n  };\n};\n\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (val, lng, options) => {\n    let optForCache = options;\n\n    if (options && options.interpolationkey && options.formatParams && options.formatParams[options.interpolationkey] && options[options.interpolationkey]) {\n      optForCache = { ...optForCache,\n        [options.interpolationkey]: undefined\n      };\n    }\n\n    const key = lng + JSON.stringify(optForCache);\n    let formatter = cache[key];\n\n    if (!formatter) {\n      formatter = fn(getCleanedCode(lng), options);\n      cache[key] = formatter;\n    }\n\n    return formatter(val);\n  };\n};\n\nclass Formatter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.formats = {\n      number: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, { ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, { ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, { ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, { ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, { ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n    this.init(options);\n  }\n\n  init(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n  }\n\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n\n  format(value, format, lng) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const formats = format.split(this.formatSeparator);\n\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n\n      if (this.formats[formatName]) {\n        let formatted = mem;\n\n        try {\n          const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, { ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n\n      return mem;\n    }, value);\n    return result;\n  }\n\n}\n\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\n\nclass Connector extends EventEmitter {\n  constructor(backend, store, services) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    this.backend?.init?.(services, options.backend, options);\n  }\n\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ;else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n\n  read(lng, ns, fcName) {\n    let tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;\n    let callback = arguments.length > 5 ? arguments[5] : undefined;\n    if (!lng.length) return callback(null, {});\n\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n\n    this.readingCalls++;\n\n    const resolver = (err, data) => {\n      this.readingCalls--;\n\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n\n      callback(err, data);\n    };\n\n    const fc = this.backend[fcName].bind(this.backend);\n\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n\n      return;\n    }\n\n    return fc(lng, ns, resolver);\n  }\n\n  prepareLoading(languages, namespaces) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let callback = arguments.length > 3 ? arguments[3] : undefined;\n\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n\n  loadOne(name) {\n    let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    let clb = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : () => {};\n\n    if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n\n    if (key === undefined || key === null || key === '') return;\n\n    if (this.backend?.create) {\n      const opts = { ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n\n      if (fc.length < 6) {\n        try {\n          let r;\n\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n\n}\n\nconst get = () => ({\n  debug: false,\n  initAsync: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  }\n});\n\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n\n  if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n\n  if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n  return options;\n};\n\nconst noop = () => {};\n\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\n\nclass I18n extends EventEmitter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initAsync) {\n        this.init(options, callback);\n        return this;\n      }\n\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n\n  init() {\n    var _this = this;\n\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    this.isInitializing = true;\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    if (options.defaultNS == null && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n\n    const defOpts = get();\n    this.options = { ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    this.options.interpolation = { ...defOpts.interpolation,\n      ...this.options.interpolation\n    };\n\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n\n      let formatter;\n\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else {\n        formatter = Formatter;\n      }\n\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', function (event) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        _this.emit(event, ...args);\n      });\n\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', function (event) {\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        _this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = function () {\n        return _this.store[fcName](...arguments);\n      };\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = function () {\n        _this.store[fcName](...arguments);\n\n        return _this;\n      };\n    });\n    const deferred = defer();\n\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n\n      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n\n    if (this.options.resources || !this.options.initAsync) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n\n    return deferred;\n  }\n\n  loadResources(language) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n\n      this.options.preload?.forEach?.(l => append(l));\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n\n    return this;\n  }\n\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n  }\n\n  changeLanguage(lng, callback) {\n    var _this2 = this;\n\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n\n    const done = (err, l) => {\n      if (l) {\n        setLngProps(l);\n        this.translator.changeLanguage(l);\n        this.isLanguageChangingTo = undefined;\n        this.emit('languageChanged', l);\n        this.logger.log('languageChanged', l);\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n\n      deferred.resolve(function () {\n        return _this2.t(...arguments);\n      });\n      if (callback) callback(err, function () {\n        return _this2.t(...arguments);\n      });\n    };\n\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const l = isString(lngs) ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);\n\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        this.services.languageDetector?.cacheUserLanguage?.(l);\n      }\n\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n\n    return deferred;\n  }\n\n  getFixedT(lng, ns, keyPrefix) {\n    var _this3 = this;\n\n    const fixedT = function (key, opts) {\n      let options;\n\n      if (typeof opts !== 'object') {\n        for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n          rest[_key3 - 2] = arguments[_key3];\n        }\n\n        options = _this3.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        options = { ...opts\n        };\n      }\n\n      options.lng = options.lng || fixedT.lng;\n      options.lngs = options.lngs || fixedT.lngs;\n      options.ns = options.ns || fixedT.ns;\n      if (options.keyPrefix !== '') options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = _this3.options.keySeparator || '.';\n      let resultKey;\n\n      if (options.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => `${options.keyPrefix}${keySeparator}${k}`);\n      } else {\n        resultKey = options.keyPrefix ? `${options.keyPrefix}${keySeparator}${key}` : key;\n      }\n\n      return _this3.t(resultKey, options);\n    };\n\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n\n  t() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return this.translator?.translate(...args);\n  }\n\n  exists() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    return this.translator?.exists(...args);\n  }\n\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n\n  hasLoadedNamespace(ns) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n\n  static createInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    return new I18n(options, callback);\n  }\n\n  cloneInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = { ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = { ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n\n    if (forkResourceStore) {\n      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n        prev[l] = { ...this.store.data[l]\n        };\n        return Object.keys(prev[l]).reduce((acc, n) => {\n          acc[n] = { ...prev[l][n]\n          };\n          return acc;\n        }, {});\n      }, {});\n      clone.store = new ResourceStore(clonedData, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', function (event) {\n      for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n        args[_key6 - 1] = arguments[_key6];\n      }\n\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n\n}\n\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/i18next/dist/esm/i18next.js"],"names":["isString","obj","defer","res","rej","promise","Promise","resolve","reject","makeString","object","copy","a","s","t","forEach","m","lastOfPathSeparatorRegExp","cleanKey","key","indexOf","replace","canNotTraverseDeeper","getLastOfPath","path","Empty","stack","split","stackIndex","length","Object","prototype","hasOwnProperty","call","k","setPath","newValue","undefined","e","p","slice","last","pushPath","concat","push","getPath","getPathWithDefaults","data","defaultData","value","deepExtend","target","source","overwrite","prop","String","regexEscape","str","_entityMap","escape","RegExpCache","constructor","capacity","regExpMap","Map","regExpQueue","getRegExp","pattern","regExpFromCache","get","regExpNew","RegExp","delete","shift","set","chars","looksLikeObjectPathRegExpCache","looksLikeObjectPath","nsSeparator","keySeparator","possibleChars","filter","c","r","map","join","matched","test","ki","substring","deepFind","arguments","tokens","current","i","next","nextPath","j","getCleanedCode","code","consoleLogger","type","log","args","output","warn","error","console","apply","Logger","concreteLogger","options","init","prefix","logger","debug","_len","Array","_key","forward","_len2","_key2","_len3","_key3","deprecate","_len4","_key4","lvl","debugOnly","create","moduleName","clone","baseLogger","EventEmitter","observers","on","events","listener","event","numListeners","off","emit","cloned","from","entries","_ref","observer","numTimesAdded","_ref2","ResourceStore","ns","defaultNS","ignoreJSONStructure","addNamespaces","removeNamespaces","index","splice","getResource","lng","isArray","result","addResource","silent","addResources","resources","addResourceBundle","deep","skipCopy","pack","JSON","parse","stringify","removeResourceBundle","hasResourceBundle","getResourceBundle","getDataByLanguage","hasLanguageSomeTranslations","n","keys","find","v","toJSON","postProcessor","processors","addPostProcessor","module","name","handle","translator","processor","process","checkedLoadedFor","shouldHandleAsObject","Translator","services","changeLanguage","language","exists","interpolation","resolved","extractFromKey","namespaces","wouldCheckForNsInKey","seemsNaturalLanguage","userDefinedKeySeparator","userDefinedNsSeparator","match","interpolator","nestingRegexp","parts","translate","lastKey","overloadTranslationOptionHandler","returnDetails","namespace","appendNamespaceToCIMode","toLowerCase","usedKey","exactUsedKey","usedLng","usedNS","usedParams","getUsedParamsDetails","resUsedKey","resExactUsedKey","noObject","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","needsPluralHandling","count","hasDefaultValue","defaultValueSuffix","pluralResolver","getSuffix","defaultValueSuffixOrdinalFallback","ordinal","needsZeroSuffixLookup","defaultValue","pluralSeparator","resForObjHndl","resType","toString","returnObjects","returnedObjectHandler","resTypeIsArray","newKeyToUse","deepKey","extendTranslation","usedDefault","isValidLookup","missingKeyNoValueFallbackToKey","resForMissing","updateMissing","fk","lngs","fallbackLngs","languageUtils","getFallbackCodes","fallbackLng","saveMissingTo","toResolveHierarchy","send","l","specificDefaultValue","defaultForMissing","missingKeyHandler","backendConnector","saveMissing","saveMissingPlurals","suffixes","getSuffixes","suffix","appendNamespaceToMissingKey","parseMissingKeyHandler","_this","defaultVariables","skipInterpolation","skipOnVariables","nestBef","nb","interpolate","na","nestAft","nest","context","reset","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","found","extracted","fallbackNS","needsContextHandling","codes","utils","hasLoadedNamespace","finalKeys","addLookupKeys","pluralSuffix","zeroSuffix","ordinalPrefix","contextKey","contextSeparator","possibleKey","pop","returnNull","returnEmptyString","resourceStore","optionsKeys","useOptionsReplaceForData","option","LanguageUtil","supportedLngs","getScriptPartFromCode","formatLanguageCode","getLanguagePartFromCode","formattedCode","Intl","getCanonicalLocales","lowerCaseLng","cleanCode","isSupportedCode","load","nonExplicitSupportedLngs","getBestMatchFromCodes","cleanedLng","lngOnly","supportedLng","fallbacks","default","fallbackCode","fallbackCodes","addCode","fc","suffixesOrder","zero","one","two","few","many","other","dummyRule","select","resolvedOptions","pluralCategories","PluralResolver","pluralRulesCache","addRule","rules","clearCache","getRule","cleanedCode","cacheKey","rule","PluralRules","err","lngPart","needsPlural","getPluralFormsOfKey","sort","pluralCategory1","pluralCategory2","pluralCategory","prepend","deepFindWithDefaults","regexSafe","val","Interpolator","format","escapeValue","escape$1","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapeSuffix","unescapePrefix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","resetRegExp","getOrResetRegExp","existingRegExp","lastIndex","regexp","regexpUnescape","replaces","handleFormat","interpolationkey","trim","f","missingInterpolationHandler","todos","regex","safeValue","todo","exec","matchedVar","temp","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","matchedSingleQuotes","matchedDoubleQuotes","formatters","doReduce","elem","reduce","parseFormatStr","formatStr","formatName","formatOptions","optStr","currency","range","opts","opt","rest","trimmedKey","isNaN","parseInt","createCachedFormatter","fn","cache","optForCache","formatParams","formatter","Formatter","formats","number","NumberFormat","style","datetime","DateTimeFormat","relativetime","RelativeTimeFormat","list","ListFormat","add","addCached","findIndex","mem","formatted","valOptions","locale","removePending","q","pending","pendingCount","Connector","backend","store","waitingReads","maxParallelReads","readingCalls","maxRetries","retryTimeout","state","queue","queueLoad","languages","callback","toLoad","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","reload","loaded","errors","done","loadedKeys","read","fcName","tried","wait","resolver","setTimeout","bind","then","catch","prepareLoading","loadOne","fallbackValue","isUpdate","clb","initAsync","preload","simplifyPluralSuffix","partialBundledLanguages","ret","tDescription","transformOptions","initImmediate","noop","bindMemberFunctions","inst","mems","getOwnPropertyNames","getPrototypeOf","I18n","modules","external","isInitialized","isClone","isInitializing","defOpts","createClassOnDemand","ClassOrObject","lu","languageDetector","detection","storeApi","storeApiChained","deferred","finish","initializedStoreOnce","loadResources","usedCallback","append","resolvedLanguage","setResolvedLanguage","reloadResources","use","Error","li","lngInLngs","_this2","isLanguageChangingTo","setLngProps","setLng","cacheUserLanguage","async","detect","getFixedT","keyPrefix","_this3","fixedT","resultKey","_len5","_key5","setDefaultNamespace","lastLng","loadNotPending","loadState","precheck","preResult","loadNamespaces","loadLanguages","preloaded","newLngs","dir","rtlLngs","createInstance","cloneInstance","forkResourceStore","mergedOptions","membersToCopy","clonedData","prev","acc","_len6","_key6","instance"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,GAAG,IAAI,OAAOA,GAAP,KAAe,QAAvC;;AACA,MAAMC,KAAK,GAAG,MAAM;AAClB,MAAIC,GAAJ;AACA,MAAIC,GAAJ;AACA,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/CL,IAAAA,GAAG,GAAGI,OAAN;AACAH,IAAAA,GAAG,GAAGI,MAAN;AACD,GAHe,CAAhB;AAIAH,EAAAA,OAAO,CAACE,OAAR,GAAkBJ,GAAlB;AACAE,EAAAA,OAAO,CAACG,MAAR,GAAiBJ,GAAjB;AACA,SAAOC,OAAP;AACD,CAVD;;AAWA,MAAMI,UAAU,GAAGC,MAAM,IAAI;AAC3B,MAAIA,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;AACpB,SAAO,KAAKA,MAAZ;AACD,CAHD;;AAIA,MAAMC,IAAI,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa;AACxBF,EAAAA,CAAC,CAACG,OAAF,CAAUC,CAAC,IAAI;AACb,QAAIH,CAAC,CAACG,CAAD,CAAL,EAAUF,CAAC,CAACE,CAAD,CAAD,GAAOH,CAAC,CAACG,CAAD,CAAR;AACX,GAFD;AAGD,CAJD;;AAKA,MAAMC,yBAAyB,GAAG,MAAlC;;AACA,MAAMC,QAAQ,GAAGC,GAAG,IAAIA,GAAG,IAAIA,GAAG,CAACC,OAAJ,CAAY,KAAZ,IAAqB,CAAC,CAA7B,GAAiCD,GAAG,CAACE,OAAJ,CAAYJ,yBAAZ,EAAuC,GAAvC,CAAjC,GAA+EE,GAAvG;;AACA,MAAMG,oBAAoB,GAAGZ,MAAM,IAAI,CAACA,MAAD,IAAWV,QAAQ,CAACU,MAAD,CAA1D;;AACA,MAAMa,aAAa,GAAG,CAACb,MAAD,EAASc,IAAT,EAAeC,KAAf,KAAyB;AAC7C,QAAMC,KAAK,GAAG,CAAC1B,QAAQ,CAACwB,IAAD,CAAT,GAAkBA,IAAlB,GAAyBA,IAAI,CAACG,KAAL,CAAW,GAAX,CAAvC;AACA,MAAIC,UAAU,GAAG,CAAjB;;AACA,SAAOA,UAAU,GAAGF,KAAK,CAACG,MAAN,GAAe,CAAnC,EAAsC;AACpC,QAAIP,oBAAoB,CAACZ,MAAD,CAAxB,EAAkC,OAAO,EAAP;AAClC,UAAMS,GAAG,GAAGD,QAAQ,CAACQ,KAAK,CAACE,UAAD,CAAN,CAApB;AACA,QAAI,CAAClB,MAAM,CAACS,GAAD,CAAP,IAAgBM,KAApB,EAA2Bf,MAAM,CAACS,GAAD,CAAN,GAAc,IAAIM,KAAJ,EAAd;;AAC3B,QAAIK,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCvB,MAArC,EAA6CS,GAA7C,CAAJ,EAAuD;AACrDT,MAAAA,MAAM,GAAGA,MAAM,CAACS,GAAD,CAAf;AACD,KAFD,MAEO;AACLT,MAAAA,MAAM,GAAG,EAAT;AACD;;AACD,MAAEkB,UAAF;AACD;;AACD,MAAIN,oBAAoB,CAACZ,MAAD,CAAxB,EAAkC,OAAO,EAAP;AAClC,SAAO;AACLT,IAAAA,GAAG,EAAES,MADA;AAELwB,IAAAA,CAAC,EAAEhB,QAAQ,CAACQ,KAAK,CAACE,UAAD,CAAN;AAFN,GAAP;AAID,CAnBD;;AAoBA,MAAMO,OAAO,GAAG,CAACzB,MAAD,EAASc,IAAT,EAAeY,QAAf,KAA4B;AAC1C,QAAM;AACJnC,IAAAA,GADI;AAEJiC,IAAAA;AAFI,MAGFX,aAAa,CAACb,MAAD,EAASc,IAAT,EAAeM,MAAf,CAHjB;;AAIA,MAAI7B,GAAG,KAAKoC,SAAR,IAAqBb,IAAI,CAACK,MAAL,KAAgB,CAAzC,EAA4C;AAC1C5B,IAAAA,GAAG,CAACiC,CAAD,CAAH,GAASE,QAAT;AACA;AACD;;AACD,MAAIE,CAAC,GAAGd,IAAI,CAACA,IAAI,CAACK,MAAL,GAAc,CAAf,CAAZ;AACA,MAAIU,CAAC,GAAGf,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAchB,IAAI,CAACK,MAAL,GAAc,CAA5B,CAAR;AACA,MAAIY,IAAI,GAAGlB,aAAa,CAACb,MAAD,EAAS6B,CAAT,EAAYT,MAAZ,CAAxB;;AACA,SAAOW,IAAI,CAACxC,GAAL,KAAaoC,SAAb,IAA0BE,CAAC,CAACV,MAAnC,EAA2C;AACzCS,IAAAA,CAAC,GAAI,GAAEC,CAAC,CAACA,CAAC,CAACV,MAAF,GAAW,CAAZ,CAAe,IAAGS,CAAE,EAA5B;AACAC,IAAAA,CAAC,GAAGA,CAAC,CAACC,KAAF,CAAQ,CAAR,EAAWD,CAAC,CAACV,MAAF,GAAW,CAAtB,CAAJ;AACAY,IAAAA,IAAI,GAAGlB,aAAa,CAACb,MAAD,EAAS6B,CAAT,EAAYT,MAAZ,CAApB;;AACA,QAAIW,IAAI,EAAExC,GAAN,IAAa,OAAOwC,IAAI,CAACxC,GAAL,CAAU,GAAEwC,IAAI,CAACP,CAAE,IAAGI,CAAE,EAAxB,CAAP,KAAsC,WAAvD,EAAoE;AAClEG,MAAAA,IAAI,CAACxC,GAAL,GAAWoC,SAAX;AACD;AACF;;AACDI,EAAAA,IAAI,CAACxC,GAAL,CAAU,GAAEwC,IAAI,CAACP,CAAE,IAAGI,CAAE,EAAxB,IAA6BF,QAA7B;AACD,CArBD;;AAsBA,MAAMM,QAAQ,GAAG,CAAChC,MAAD,EAASc,IAAT,EAAeY,QAAf,EAAyBO,MAAzB,KAAoC;AACnD,QAAM;AACJ1C,IAAAA,GADI;AAEJiC,IAAAA;AAFI,MAGFX,aAAa,CAACb,MAAD,EAASc,IAAT,EAAeM,MAAf,CAHjB;AAIA7B,EAAAA,GAAG,CAACiC,CAAD,CAAH,GAASjC,GAAG,CAACiC,CAAD,CAAH,IAAU,EAAnB;AACAjC,EAAAA,GAAG,CAACiC,CAAD,CAAH,CAAOU,IAAP,CAAYR,QAAZ;AACD,CAPD;;AAQA,MAAMS,OAAO,GAAG,CAACnC,MAAD,EAASc,IAAT,KAAkB;AAChC,QAAM;AACJvB,IAAAA,GADI;AAEJiC,IAAAA;AAFI,MAGFX,aAAa,CAACb,MAAD,EAASc,IAAT,CAHjB;AAIA,MAAI,CAACvB,GAAL,EAAU,OAAOoC,SAAP;AACV,MAAI,CAACP,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqChC,GAArC,EAA0CiC,CAA1C,CAAL,EAAmD,OAAOG,SAAP;AACnD,SAAOpC,GAAG,CAACiC,CAAD,CAAV;AACD,CARD;;AASA,MAAMY,mBAAmB,GAAG,CAACC,IAAD,EAAOC,WAAP,EAAoB7B,GAApB,KAA4B;AACtD,QAAM8B,KAAK,GAAGJ,OAAO,CAACE,IAAD,EAAO5B,GAAP,CAArB;;AACA,MAAI8B,KAAK,KAAKZ,SAAd,EAAyB;AACvB,WAAOY,KAAP;AACD;;AACD,SAAOJ,OAAO,CAACG,WAAD,EAAc7B,GAAd,CAAd;AACD,CAND;;AAOA,MAAM+B,UAAU,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,SAAjB,KAA+B;AAChD,OAAK,MAAMC,IAAX,IAAmBF,MAAnB,EAA2B;AACzB,QAAIE,IAAI,KAAK,WAAT,IAAwBA,IAAI,KAAK,aAArC,EAAoD;AAClD,UAAIA,IAAI,IAAIH,MAAZ,EAAoB;AAClB,YAAInD,QAAQ,CAACmD,MAAM,CAACG,IAAD,CAAP,CAAR,IAA0BH,MAAM,CAACG,IAAD,CAAN,YAAwBC,MAAlD,IAA4DvD,QAAQ,CAACoD,MAAM,CAACE,IAAD,CAAP,CAApE,IAAsFF,MAAM,CAACE,IAAD,CAAN,YAAwBC,MAAlH,EAA0H;AACxH,cAAIF,SAAJ,EAAeF,MAAM,CAACG,IAAD,CAAN,GAAeF,MAAM,CAACE,IAAD,CAArB;AAChB,SAFD,MAEO;AACLJ,UAAAA,UAAU,CAACC,MAAM,CAACG,IAAD,CAAP,EAAeF,MAAM,CAACE,IAAD,CAArB,EAA6BD,SAA7B,CAAV;AACD;AACF,OAND,MAMO;AACLF,QAAAA,MAAM,CAACG,IAAD,CAAN,GAAeF,MAAM,CAACE,IAAD,CAArB;AACD;AACF;AACF;;AACD,SAAOH,MAAP;AACD,CAfD;;AAgBA,MAAMK,WAAW,GAAGC,GAAG,IAAIA,GAAG,CAACpC,OAAJ,CAAY,qCAAZ,EAAmD,MAAnD,CAA3B;;AACA,IAAIqC,UAAU,GAAG;AACf,OAAK,OADU;AAEf,OAAK,MAFU;AAGf,OAAK,MAHU;AAIf,OAAK,QAJU;AAKf,OAAK,OALU;AAMf,OAAK;AANU,CAAjB;;AAQA,MAAMC,MAAM,GAAGZ,IAAI,IAAI;AACrB,MAAI/C,QAAQ,CAAC+C,IAAD,CAAZ,EAAoB;AAClB,WAAOA,IAAI,CAAC1B,OAAL,CAAa,YAAb,EAA2BR,CAAC,IAAI6C,UAAU,CAAC7C,CAAD,CAA1C,CAAP;AACD;;AACD,SAAOkC,IAAP;AACD,CALD;;AAMA,MAAMa,WAAN,CAAkB;AAChBC,EAAAA,WAAW,CAACC,QAAD,EAAW;AACpB,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKC,SAAL,GAAiB,IAAIC,GAAJ,EAAjB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACD;;AACDC,EAAAA,SAAS,CAACC,OAAD,EAAU;AACjB,UAAMC,eAAe,GAAG,KAAKL,SAAL,CAAeM,GAAf,CAAmBF,OAAnB,CAAxB;;AACA,QAAIC,eAAe,KAAK/B,SAAxB,EAAmC;AACjC,aAAO+B,eAAP;AACD;;AACD,UAAME,SAAS,GAAG,IAAIC,MAAJ,CAAWJ,OAAX,CAAlB;;AACA,QAAI,KAAKF,WAAL,CAAiBpC,MAAjB,KAA4B,KAAKiC,QAArC,EAA+C;AAC7C,WAAKC,SAAL,CAAeS,MAAf,CAAsB,KAAKP,WAAL,CAAiBQ,KAAjB,EAAtB;AACD;;AACD,SAAKV,SAAL,CAAeW,GAAf,CAAmBP,OAAnB,EAA4BG,SAA5B;AACA,SAAKL,WAAL,CAAiBrB,IAAjB,CAAsBuB,OAAtB;AACA,WAAOG,SAAP;AACD;;AAlBe;;AAoBlB,MAAMK,KAAK,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAd;AACA,MAAMC,8BAA8B,GAAG,IAAIhB,WAAJ,CAAgB,EAAhB,CAAvC;;AACA,MAAMiB,mBAAmB,GAAG,CAAC1D,GAAD,EAAM2D,WAAN,EAAmBC,YAAnB,KAAoC;AAC9DD,EAAAA,WAAW,GAAGA,WAAW,IAAI,EAA7B;AACAC,EAAAA,YAAY,GAAGA,YAAY,IAAI,EAA/B;AACA,QAAMC,aAAa,GAAGL,KAAK,CAACM,MAAN,CAAaC,CAAC,IAAIJ,WAAW,CAAC1D,OAAZ,CAAoB8D,CAApB,IAAyB,CAAzB,IAA8BH,YAAY,CAAC3D,OAAb,CAAqB8D,CAArB,IAA0B,CAA1E,CAAtB;AACA,MAAIF,aAAa,CAACnD,MAAd,KAAyB,CAA7B,EAAgC,OAAO,IAAP;AAChC,QAAMsD,CAAC,GAAGP,8BAA8B,CAACV,SAA/B,CAA0C,IAAGc,aAAa,CAACI,GAAd,CAAkBF,CAAC,IAAIA,CAAC,KAAK,GAAN,GAAY,KAAZ,GAAoBA,CAA3C,EAA8CG,IAA9C,CAAmD,GAAnD,CAAwD,GAArG,CAAV;AACA,MAAIC,OAAO,GAAG,CAACH,CAAC,CAACI,IAAF,CAAOpE,GAAP,CAAf;;AACA,MAAI,CAACmE,OAAL,EAAc;AACZ,UAAME,EAAE,GAAGrE,GAAG,CAACC,OAAJ,CAAY2D,YAAZ,CAAX;;AACA,QAAIS,EAAE,GAAG,CAAL,IAAU,CAACL,CAAC,CAACI,IAAF,CAAOpE,GAAG,CAACsE,SAAJ,CAAc,CAAd,EAAiBD,EAAjB,CAAP,CAAf,EAA6C;AAC3CF,MAAAA,OAAO,GAAG,IAAV;AACD;AACF;;AACD,SAAOA,OAAP;AACD,CAdD;;AAeA,MAAMI,QAAQ,GAAG,UAAUzF,GAAV,EAAeuB,IAAf,EAAqB;AACpC,MAAIuD,YAAY,GAAGY,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,GAAvF;AACA,MAAI,CAAC1F,GAAL,EAAU,OAAOoC,SAAP;;AACV,MAAIpC,GAAG,CAACuB,IAAD,CAAP,EAAe;AACb,QAAI,CAACM,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqChC,GAArC,EAA0CuB,IAA1C,CAAL,EAAsD,OAAOa,SAAP;AACtD,WAAOpC,GAAG,CAACuB,IAAD,CAAV;AACD;;AACD,QAAMoE,MAAM,GAAGpE,IAAI,CAACG,KAAL,CAAWoD,YAAX,CAAf;AACA,MAAIc,OAAO,GAAG5F,GAAd;;AACA,OAAK,IAAI6F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAAC/D,MAA3B,GAAoC;AAClC,QAAI,CAACgE,OAAD,IAAY,OAAOA,OAAP,KAAmB,QAAnC,EAA6C;AAC3C,aAAOxD,SAAP;AACD;;AACD,QAAI0D,IAAJ;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIC,CAAC,GAAGH,CAAb,EAAgBG,CAAC,GAAGL,MAAM,CAAC/D,MAA3B,EAAmC,EAAEoE,CAArC,EAAwC;AACtC,UAAIA,CAAC,KAAKH,CAAV,EAAa;AACXE,QAAAA,QAAQ,IAAIjB,YAAZ;AACD;;AACDiB,MAAAA,QAAQ,IAAIJ,MAAM,CAACK,CAAD,CAAlB;AACAF,MAAAA,IAAI,GAAGF,OAAO,CAACG,QAAD,CAAd;;AACA,UAAID,IAAI,KAAK1D,SAAb,EAAwB;AACtB,YAAI,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgCjB,OAAhC,CAAwC,OAAO2E,IAA/C,IAAuD,CAAC,CAAxD,IAA6DE,CAAC,GAAGL,MAAM,CAAC/D,MAAP,GAAgB,CAArF,EAAwF;AACtF;AACD;;AACDiE,QAAAA,CAAC,IAAIG,CAAC,GAAGH,CAAJ,GAAQ,CAAb;AACA;AACD;AACF;;AACDD,IAAAA,OAAO,GAAGE,IAAV;AACD;;AACD,SAAOF,OAAP;AACD,CAhCD;;AAiCA,MAAMK,cAAc,GAAGC,IAAI,IAAIA,IAAI,EAAE9E,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAA/B;;AAEA,MAAM+E,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,QADc;;AAEpBC,EAAAA,GAAG,CAACC,IAAD,EAAO;AACR,SAAKC,MAAL,CAAY,KAAZ,EAAmBD,IAAnB;AACD,GAJmB;;AAKpBE,EAAAA,IAAI,CAACF,IAAD,EAAO;AACT,SAAKC,MAAL,CAAY,MAAZ,EAAoBD,IAApB;AACD,GAPmB;;AAQpBG,EAAAA,KAAK,CAACH,IAAD,EAAO;AACV,SAAKC,MAAL,CAAY,OAAZ,EAAqBD,IAArB;AACD,GAVmB;;AAWpBC,EAAAA,MAAM,CAACH,IAAD,EAAOE,IAAP,EAAa;AACjBI,IAAAA,OAAO,GAAGN,IAAH,CAAP,EAAiBO,KAAjB,GAAyBD,OAAzB,EAAkCJ,IAAlC;AACD;;AAbmB,CAAtB;;AAeA,MAAMM,MAAN,CAAa;AACXhD,EAAAA,WAAW,CAACiD,cAAD,EAAiB;AAC1B,QAAIC,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,SAAKqB,IAAL,CAAUF,cAAV,EAA0BC,OAA1B;AACD;;AACDC,EAAAA,IAAI,CAACF,cAAD,EAAiB;AACnB,QAAIC,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,SAAKsB,MAAL,GAAcF,OAAO,CAACE,MAAR,IAAkB,UAAhC;AACA,SAAKC,MAAL,GAAcJ,cAAc,IAAIV,aAAhC;AACA,SAAKW,OAAL,GAAeA,OAAf;AACA,SAAKI,KAAL,GAAaJ,OAAO,CAACI,KAArB;AACD;;AACDb,EAAAA,GAAG,GAAG;AACJ,SAAK,IAAIc,IAAI,GAAGzB,SAAS,CAAC9D,MAArB,EAA6B0E,IAAI,GAAG,IAAIc,KAAJ,CAAUD,IAAV,CAApC,EAAqDE,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGF,IAA3E,EAAiFE,IAAI,EAArF,EAAyF;AACvFf,MAAAA,IAAI,CAACe,IAAD,CAAJ,GAAa3B,SAAS,CAAC2B,IAAD,CAAtB;AACD;;AACD,WAAO,KAAKC,OAAL,CAAahB,IAAb,EAAmB,KAAnB,EAA0B,EAA1B,EAA8B,IAA9B,CAAP;AACD;;AACDE,EAAAA,IAAI,GAAG;AACL,SAAK,IAAIe,KAAK,GAAG7B,SAAS,CAAC9D,MAAtB,EAA8B0E,IAAI,GAAG,IAAIc,KAAJ,CAAUG,KAAV,CAArC,EAAuDC,KAAK,GAAG,CAApE,EAAuEA,KAAK,GAAGD,KAA/E,EAAsFC,KAAK,EAA3F,EAA+F;AAC7FlB,MAAAA,IAAI,CAACkB,KAAD,CAAJ,GAAc9B,SAAS,CAAC8B,KAAD,CAAvB;AACD;;AACD,WAAO,KAAKF,OAAL,CAAahB,IAAb,EAAmB,MAAnB,EAA2B,EAA3B,EAA+B,IAA/B,CAAP;AACD;;AACDG,EAAAA,KAAK,GAAG;AACN,SAAK,IAAIgB,KAAK,GAAG/B,SAAS,CAAC9D,MAAtB,EAA8B0E,IAAI,GAAG,IAAIc,KAAJ,CAAUK,KAAV,CAArC,EAAuDC,KAAK,GAAG,CAApE,EAAuEA,KAAK,GAAGD,KAA/E,EAAsFC,KAAK,EAA3F,EAA+F;AAC7FpB,MAAAA,IAAI,CAACoB,KAAD,CAAJ,GAAchC,SAAS,CAACgC,KAAD,CAAvB;AACD;;AACD,WAAO,KAAKJ,OAAL,CAAahB,IAAb,EAAmB,OAAnB,EAA4B,EAA5B,CAAP;AACD;;AACDqB,EAAAA,SAAS,GAAG;AACV,SAAK,IAAIC,KAAK,GAAGlC,SAAS,CAAC9D,MAAtB,EAA8B0E,IAAI,GAAG,IAAIc,KAAJ,CAAUQ,KAAV,CAArC,EAAuDC,KAAK,GAAG,CAApE,EAAuEA,KAAK,GAAGD,KAA/E,EAAsFC,KAAK,EAA3F,EAA+F;AAC7FvB,MAAAA,IAAI,CAACuB,KAAD,CAAJ,GAAcnC,SAAS,CAACmC,KAAD,CAAvB;AACD;;AACD,WAAO,KAAKP,OAAL,CAAahB,IAAb,EAAmB,MAAnB,EAA2B,sBAA3B,EAAmD,IAAnD,CAAP;AACD;;AACDgB,EAAAA,OAAO,CAAChB,IAAD,EAAOwB,GAAP,EAAYd,MAAZ,EAAoBe,SAApB,EAA+B;AACpC,QAAIA,SAAS,IAAI,CAAC,KAAKb,KAAvB,EAA8B,OAAO,IAAP;AAC9B,QAAInH,QAAQ,CAACuG,IAAI,CAAC,CAAD,CAAL,CAAZ,EAAuBA,IAAI,CAAC,CAAD,CAAJ,GAAW,GAAEU,MAAO,GAAE,KAAKA,MAAO,IAAGV,IAAI,CAAC,CAAD,CAAI,EAA7C;AACvB,WAAO,KAAKW,MAAL,CAAYa,GAAZ,EAAiBxB,IAAjB,CAAP;AACD;;AACD0B,EAAAA,MAAM,CAACC,UAAD,EAAa;AACjB,WAAO,IAAIrB,MAAJ,CAAW,KAAKK,MAAhB,EAAwB,EAC7B,GAAG;AACDD,QAAAA,MAAM,EAAG,GAAE,KAAKA,MAAO,IAAGiB,UAAW;AADpC,OAD0B;AAI7B,SAAG,KAAKnB;AAJqB,KAAxB,CAAP;AAMD;;AACDoB,EAAAA,KAAK,CAACpB,OAAD,EAAU;AACbA,IAAAA,OAAO,GAAGA,OAAO,IAAI,KAAKA,OAA1B;AACAA,IAAAA,OAAO,CAACE,MAAR,GAAiBF,OAAO,CAACE,MAAR,IAAkB,KAAKA,MAAxC;AACA,WAAO,IAAIJ,MAAJ,CAAW,KAAKK,MAAhB,EAAwBH,OAAxB,CAAP;AACD;;AArDU;;AAuDb,IAAIqB,UAAU,GAAG,IAAIvB,MAAJ,EAAjB;;AAEA,MAAMwB,YAAN,CAAmB;AACjBxE,EAAAA,WAAW,GAAG;AACZ,SAAKyE,SAAL,GAAiB,EAAjB;AACD;;AACDC,EAAAA,EAAE,CAACC,MAAD,EAASC,QAAT,EAAmB;AACnBD,IAAAA,MAAM,CAAC7G,KAAP,CAAa,GAAb,EAAkBZ,OAAlB,CAA0B2H,KAAK,IAAI;AACjC,UAAI,CAAC,KAAKJ,SAAL,CAAeI,KAAf,CAAL,EAA4B,KAAKJ,SAAL,CAAeI,KAAf,IAAwB,IAAI1E,GAAJ,EAAxB;AAC5B,YAAM2E,YAAY,GAAG,KAAKL,SAAL,CAAeI,KAAf,EAAsBrE,GAAtB,CAA0BoE,QAA1B,KAAuC,CAA5D;AACA,WAAKH,SAAL,CAAeI,KAAf,EAAsBhE,GAAtB,CAA0B+D,QAA1B,EAAoCE,YAAY,GAAG,CAAnD;AACD,KAJD;AAKA,WAAO,IAAP;AACD;;AACDC,EAAAA,GAAG,CAACF,KAAD,EAAQD,QAAR,EAAkB;AACnB,QAAI,CAAC,KAAKH,SAAL,CAAeI,KAAf,CAAL,EAA4B;;AAC5B,QAAI,CAACD,QAAL,EAAe;AACb,aAAO,KAAKH,SAAL,CAAeI,KAAf,CAAP;AACA;AACD;;AACD,SAAKJ,SAAL,CAAeI,KAAf,EAAsBlE,MAAtB,CAA6BiE,QAA7B;AACD;;AACDI,EAAAA,IAAI,CAACH,KAAD,EAAQ;AACV,SAAK,IAAItB,IAAI,GAAGzB,SAAS,CAAC9D,MAArB,EAA6B0E,IAAI,GAAG,IAAIc,KAAJ,CAAUD,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAApC,EAAwEE,IAAI,GAAG,CAApF,EAAuFA,IAAI,GAAGF,IAA9F,EAAoGE,IAAI,EAAxG,EAA4G;AAC1Gf,MAAAA,IAAI,CAACe,IAAI,GAAG,CAAR,CAAJ,GAAiB3B,SAAS,CAAC2B,IAAD,CAA1B;AACD;;AACD,QAAI,KAAKgB,SAAL,CAAeI,KAAf,CAAJ,EAA2B;AACzB,YAAMI,MAAM,GAAGzB,KAAK,CAAC0B,IAAN,CAAW,KAAKT,SAAL,CAAeI,KAAf,EAAsBM,OAAtB,EAAX,CAAf;AACAF,MAAAA,MAAM,CAAC/H,OAAP,CAAekI,IAAI,IAAI;AACrB,YAAI,CAACC,QAAD,EAAWC,aAAX,IAA4BF,IAAhC;;AACA,aAAK,IAAInD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqD,aAApB,EAAmCrD,CAAC,EAApC,EAAwC;AACtCoD,UAAAA,QAAQ,CAAC,GAAG3C,IAAJ,CAAR;AACD;AACF,OALD;AAMD;;AACD,QAAI,KAAK+B,SAAL,CAAe,GAAf,CAAJ,EAAyB;AACvB,YAAMQ,MAAM,GAAGzB,KAAK,CAAC0B,IAAN,CAAW,KAAKT,SAAL,CAAe,GAAf,EAAoBU,OAApB,EAAX,CAAf;AACAF,MAAAA,MAAM,CAAC/H,OAAP,CAAeqI,KAAK,IAAI;AACtB,YAAI,CAACF,QAAD,EAAWC,aAAX,IAA4BC,KAAhC;;AACA,aAAK,IAAItD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqD,aAApB,EAAmCrD,CAAC,EAApC,EAAwC;AACtCoD,UAAAA,QAAQ,CAACtC,KAAT,CAAesC,QAAf,EAAyB,CAACR,KAAD,EAAQ,GAAGnC,IAAX,CAAzB;AACD;AACF,OALD;AAMD;AACF;;AA1CgB;;AA6CnB,MAAM8C,aAAN,SAA4BhB,YAA5B,CAAyC;AACvCxE,EAAAA,WAAW,CAACd,IAAD,EAAO;AAChB,QAAIgE,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE;AAChF2D,MAAAA,EAAE,EAAE,CAAC,aAAD,CAD4E;AAEhFC,MAAAA,SAAS,EAAE;AAFqE,KAAlF;AAIA;AACA,SAAKxG,IAAL,GAAYA,IAAI,IAAI,EAApB;AACA,SAAKgE,OAAL,GAAeA,OAAf;;AACA,QAAI,KAAKA,OAAL,CAAahC,YAAb,KAA8B1C,SAAlC,EAA6C;AAC3C,WAAK0E,OAAL,CAAahC,YAAb,GAA4B,GAA5B;AACD;;AACD,QAAI,KAAKgC,OAAL,CAAayC,mBAAb,KAAqCnH,SAAzC,EAAoD;AAClD,WAAK0E,OAAL,CAAayC,mBAAb,GAAmC,IAAnC;AACD;AACF;;AACDC,EAAAA,aAAa,CAACH,EAAD,EAAK;AAChB,QAAI,KAAKvC,OAAL,CAAauC,EAAb,CAAgBlI,OAAhB,CAAwBkI,EAAxB,IAA8B,CAAlC,EAAqC;AACnC,WAAKvC,OAAL,CAAauC,EAAb,CAAgB1G,IAAhB,CAAqB0G,EAArB;AACD;AACF;;AACDI,EAAAA,gBAAgB,CAACJ,EAAD,EAAK;AACnB,UAAMK,KAAK,GAAG,KAAK5C,OAAL,CAAauC,EAAb,CAAgBlI,OAAhB,CAAwBkI,EAAxB,CAAd;;AACA,QAAIK,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,WAAK5C,OAAL,CAAauC,EAAb,CAAgBM,MAAhB,CAAuBD,KAAvB,EAA8B,CAA9B;AACD;AACF;;AACDE,EAAAA,WAAW,CAACC,GAAD,EAAMR,EAAN,EAAUnI,GAAV,EAAe;AACxB,QAAI4F,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,UAAMZ,YAAY,GAAGgC,OAAO,CAAChC,YAAR,KAAyB1C,SAAzB,GAAqC0E,OAAO,CAAChC,YAA7C,GAA4D,KAAKgC,OAAL,CAAahC,YAA9F;AACA,UAAMyE,mBAAmB,GAAGzC,OAAO,CAACyC,mBAAR,KAAgCnH,SAAhC,GAA4C0E,OAAO,CAACyC,mBAApD,GAA0E,KAAKzC,OAAL,CAAayC,mBAAnH;AACA,QAAIhI,IAAJ;;AACA,QAAIsI,GAAG,CAAC1I,OAAJ,CAAY,GAAZ,IAAmB,CAAC,CAAxB,EAA2B;AACzBI,MAAAA,IAAI,GAAGsI,GAAG,CAACnI,KAAJ,CAAU,GAAV,CAAP;AACD,KAFD,MAEO;AACLH,MAAAA,IAAI,GAAG,CAACsI,GAAD,EAAMR,EAAN,CAAP;;AACA,UAAInI,GAAJ,EAAS;AACP,YAAIkG,KAAK,CAAC0C,OAAN,CAAc5I,GAAd,CAAJ,EAAwB;AACtBK,UAAAA,IAAI,CAACoB,IAAL,CAAU,GAAGzB,GAAb;AACD,SAFD,MAEO,IAAInB,QAAQ,CAACmB,GAAD,CAAR,IAAiB4D,YAArB,EAAmC;AACxCvD,UAAAA,IAAI,CAACoB,IAAL,CAAU,GAAGzB,GAAG,CAACQ,KAAJ,CAAUoD,YAAV,CAAb;AACD,SAFM,MAEA;AACLvD,UAAAA,IAAI,CAACoB,IAAL,CAAUzB,GAAV;AACD;AACF;AACF;;AACD,UAAM6I,MAAM,GAAGnH,OAAO,CAAC,KAAKE,IAAN,EAAYvB,IAAZ,CAAtB;;AACA,QAAI,CAACwI,MAAD,IAAW,CAACV,EAAZ,IAAkB,CAACnI,GAAnB,IAA0B2I,GAAG,CAAC1I,OAAJ,CAAY,GAAZ,IAAmB,CAAC,CAAlD,EAAqD;AACnD0I,MAAAA,GAAG,GAAGtI,IAAI,CAAC,CAAD,CAAV;AACA8H,MAAAA,EAAE,GAAG9H,IAAI,CAAC,CAAD,CAAT;AACAL,MAAAA,GAAG,GAAGK,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAc6C,IAAd,CAAmB,GAAnB,CAAN;AACD;;AACD,QAAI2E,MAAM,IAAI,CAACR,mBAAX,IAAkC,CAACxJ,QAAQ,CAACmB,GAAD,CAA/C,EAAsD,OAAO6I,MAAP;AACtD,WAAOtE,QAAQ,CAAC,KAAK3C,IAAL,GAAY+G,GAAZ,IAAmBR,EAAnB,CAAD,EAAyBnI,GAAzB,EAA8B4D,YAA9B,CAAf;AACD;;AACDkF,EAAAA,WAAW,CAACH,GAAD,EAAMR,EAAN,EAAUnI,GAAV,EAAe8B,KAAf,EAAsB;AAC/B,QAAI8D,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE;AAChFuE,MAAAA,MAAM,EAAE;AADwE,KAAlF;AAGA,UAAMnF,YAAY,GAAGgC,OAAO,CAAChC,YAAR,KAAyB1C,SAAzB,GAAqC0E,OAAO,CAAChC,YAA7C,GAA4D,KAAKgC,OAAL,CAAahC,YAA9F;AACA,QAAIvD,IAAI,GAAG,CAACsI,GAAD,EAAMR,EAAN,CAAX;AACA,QAAInI,GAAJ,EAASK,IAAI,GAAGA,IAAI,CAACmB,MAAL,CAAYoC,YAAY,GAAG5D,GAAG,CAACQ,KAAJ,CAAUoD,YAAV,CAAH,GAA6B5D,GAArD,CAAP;;AACT,QAAI2I,GAAG,CAAC1I,OAAJ,CAAY,GAAZ,IAAmB,CAAC,CAAxB,EAA2B;AACzBI,MAAAA,IAAI,GAAGsI,GAAG,CAACnI,KAAJ,CAAU,GAAV,CAAP;AACAsB,MAAAA,KAAK,GAAGqG,EAAR;AACAA,MAAAA,EAAE,GAAG9H,IAAI,CAAC,CAAD,CAAT;AACD;;AACD,SAAKiI,aAAL,CAAmBH,EAAnB;AACAnH,IAAAA,OAAO,CAAC,KAAKY,IAAN,EAAYvB,IAAZ,EAAkByB,KAAlB,CAAP;AACA,QAAI,CAAC8D,OAAO,CAACmD,MAAb,EAAqB,KAAKrB,IAAL,CAAU,OAAV,EAAmBiB,GAAnB,EAAwBR,EAAxB,EAA4BnI,GAA5B,EAAiC8B,KAAjC;AACtB;;AACDkH,EAAAA,YAAY,CAACL,GAAD,EAAMR,EAAN,EAAUc,SAAV,EAAqB;AAC/B,QAAIrD,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE;AAChFuE,MAAAA,MAAM,EAAE;AADwE,KAAlF;;AAGA,SAAK,MAAMlJ,CAAX,IAAgBoJ,SAAhB,EAA2B;AACzB,UAAIpK,QAAQ,CAACoK,SAAS,CAACpJ,CAAD,CAAV,CAAR,IAA0BqG,KAAK,CAAC0C,OAAN,CAAcK,SAAS,CAACpJ,CAAD,CAAvB,CAA9B,EAA2D,KAAKiJ,WAAL,CAAiBH,GAAjB,EAAsBR,EAAtB,EAA0BtI,CAA1B,EAA6BoJ,SAAS,CAACpJ,CAAD,CAAtC,EAA2C;AACpGkJ,QAAAA,MAAM,EAAE;AAD4F,OAA3C;AAG5D;;AACD,QAAI,CAACnD,OAAO,CAACmD,MAAb,EAAqB,KAAKrB,IAAL,CAAU,OAAV,EAAmBiB,GAAnB,EAAwBR,EAAxB,EAA4Bc,SAA5B;AACtB;;AACDC,EAAAA,iBAAiB,CAACP,GAAD,EAAMR,EAAN,EAAUc,SAAV,EAAqBE,IAArB,EAA2BjH,SAA3B,EAAsC;AACrD,QAAI0D,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE;AAChFuE,MAAAA,MAAM,EAAE,KADwE;AAEhFK,MAAAA,QAAQ,EAAE;AAFsE,KAAlF;AAIA,QAAI/I,IAAI,GAAG,CAACsI,GAAD,EAAMR,EAAN,CAAX;;AACA,QAAIQ,GAAG,CAAC1I,OAAJ,CAAY,GAAZ,IAAmB,CAAC,CAAxB,EAA2B;AACzBI,MAAAA,IAAI,GAAGsI,GAAG,CAACnI,KAAJ,CAAU,GAAV,CAAP;AACA2I,MAAAA,IAAI,GAAGF,SAAP;AACAA,MAAAA,SAAS,GAAGd,EAAZ;AACAA,MAAAA,EAAE,GAAG9H,IAAI,CAAC,CAAD,CAAT;AACD;;AACD,SAAKiI,aAAL,CAAmBH,EAAnB;AACA,QAAIkB,IAAI,GAAG3H,OAAO,CAAC,KAAKE,IAAN,EAAYvB,IAAZ,CAAP,IAA4B,EAAvC;AACA,QAAI,CAACuF,OAAO,CAACwD,QAAb,EAAuBH,SAAS,GAAGK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeP,SAAf,CAAX,CAAZ;;AACvB,QAAIE,IAAJ,EAAU;AACRpH,MAAAA,UAAU,CAACsH,IAAD,EAAOJ,SAAP,EAAkB/G,SAAlB,CAAV;AACD,KAFD,MAEO;AACLmH,MAAAA,IAAI,GAAG,EACL,GAAGA,IADE;AAEL,WAAGJ;AAFE,OAAP;AAID;;AACDjI,IAAAA,OAAO,CAAC,KAAKY,IAAN,EAAYvB,IAAZ,EAAkBgJ,IAAlB,CAAP;AACA,QAAI,CAACzD,OAAO,CAACmD,MAAb,EAAqB,KAAKrB,IAAL,CAAU,OAAV,EAAmBiB,GAAnB,EAAwBR,EAAxB,EAA4Bc,SAA5B;AACtB;;AACDQ,EAAAA,oBAAoB,CAACd,GAAD,EAAMR,EAAN,EAAU;AAC5B,QAAI,KAAKuB,iBAAL,CAAuBf,GAAvB,EAA4BR,EAA5B,CAAJ,EAAqC;AACnC,aAAO,KAAKvG,IAAL,CAAU+G,GAAV,EAAeR,EAAf,CAAP;AACD;;AACD,SAAKI,gBAAL,CAAsBJ,EAAtB;AACA,SAAKT,IAAL,CAAU,SAAV,EAAqBiB,GAArB,EAA0BR,EAA1B;AACD;;AACDuB,EAAAA,iBAAiB,CAACf,GAAD,EAAMR,EAAN,EAAU;AACzB,WAAO,KAAKO,WAAL,CAAiBC,GAAjB,EAAsBR,EAAtB,MAA8BjH,SAArC;AACD;;AACDyI,EAAAA,iBAAiB,CAAChB,GAAD,EAAMR,EAAN,EAAU;AACzB,QAAI,CAACA,EAAL,EAASA,EAAE,GAAG,KAAKvC,OAAL,CAAawC,SAAlB;AACT,WAAO,KAAKM,WAAL,CAAiBC,GAAjB,EAAsBR,EAAtB,CAAP;AACD;;AACDyB,EAAAA,iBAAiB,CAACjB,GAAD,EAAM;AACrB,WAAO,KAAK/G,IAAL,CAAU+G,GAAV,CAAP;AACD;;AACDkB,EAAAA,2BAA2B,CAAClB,GAAD,EAAM;AAC/B,UAAM/G,IAAI,GAAG,KAAKgI,iBAAL,CAAuBjB,GAAvB,CAAb;AACA,UAAMmB,CAAC,GAAGlI,IAAI,IAAIjB,MAAM,CAACoJ,IAAP,CAAYnI,IAAZ,CAAR,IAA6B,EAAvC;AACA,WAAO,CAAC,CAACkI,CAAC,CAACE,IAAF,CAAOC,CAAC,IAAIrI,IAAI,CAACqI,CAAD,CAAJ,IAAWtJ,MAAM,CAACoJ,IAAP,CAAYnI,IAAI,CAACqI,CAAD,CAAhB,EAAqBvJ,MAArB,GAA8B,CAArD,CAAT;AACD;;AACDwJ,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKtI,IAAZ;AACD;;AApIsC;;AAuIzC,IAAIuI,aAAa,GAAG;AAClBC,EAAAA,UAAU,EAAE,EADM;;AAElBC,EAAAA,gBAAgB,CAACC,MAAD,EAAS;AACvB,SAAKF,UAAL,CAAgBE,MAAM,CAACC,IAAvB,IAA+BD,MAA/B;AACD,GAJiB;;AAKlBE,EAAAA,MAAM,CAACJ,UAAD,EAAatI,KAAb,EAAoB9B,GAApB,EAAyB4F,OAAzB,EAAkC6E,UAAlC,EAA8C;AAClDL,IAAAA,UAAU,CAACxK,OAAX,CAAmB8K,SAAS,IAAI;AAC9B5I,MAAAA,KAAK,GAAG,KAAKsI,UAAL,CAAgBM,SAAhB,GAA4BC,OAA5B,CAAoC7I,KAApC,EAA2C9B,GAA3C,EAAgD4F,OAAhD,EAAyD6E,UAAzD,KAAwE3I,KAAhF;AACD,KAFD;AAGA,WAAOA,KAAP;AACD;;AAViB,CAApB;AAaA,MAAM8I,gBAAgB,GAAG,EAAzB;;AACA,MAAMC,oBAAoB,GAAG7L,GAAG,IAAI,CAACH,QAAQ,CAACG,GAAD,CAAT,IAAkB,OAAOA,GAAP,KAAe,SAAjC,IAA8C,OAAOA,GAAP,KAAe,QAAjG;;AACA,MAAM8L,UAAN,SAAyB5D,YAAzB,CAAsC;AACpCxE,EAAAA,WAAW,CAACqI,QAAD,EAAW;AACpB,QAAInF,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA;AACAhF,IAAAA,IAAI,CAAC,CAAC,eAAD,EAAkB,eAAlB,EAAmC,gBAAnC,EAAqD,cAArD,EAAqE,kBAArE,EAAyF,YAAzF,EAAuG,OAAvG,CAAD,EAAkHuL,QAAlH,EAA4H,IAA5H,CAAJ;AACA,SAAKnF,OAAL,GAAeA,OAAf;;AACA,QAAI,KAAKA,OAAL,CAAahC,YAAb,KAA8B1C,SAAlC,EAA6C;AAC3C,WAAK0E,OAAL,CAAahC,YAAb,GAA4B,GAA5B;AACD;;AACD,SAAKmC,MAAL,GAAckB,UAAU,CAACH,MAAX,CAAkB,YAAlB,CAAd;AACD;;AACDkE,EAAAA,cAAc,CAACrC,GAAD,EAAM;AAClB,QAAIA,GAAJ,EAAS,KAAKsC,QAAL,GAAgBtC,GAAhB;AACV;;AACDuC,EAAAA,MAAM,CAAClL,GAAD,EAAM;AACV,QAAI4F,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE;AAChF2G,MAAAA,aAAa,EAAE;AADiE,KAAlF;;AAGA,QAAInL,GAAG,IAAI,IAAX,EAAiB;AACf,aAAO,KAAP;AACD;;AACD,UAAMoL,QAAQ,GAAG,KAAKhM,OAAL,CAAaY,GAAb,EAAkB4F,OAAlB,CAAjB;AACA,WAAOwF,QAAQ,EAAEpM,GAAV,KAAkBkC,SAAzB;AACD;;AACDmK,EAAAA,cAAc,CAACrL,GAAD,EAAM4F,OAAN,EAAe;AAC3B,QAAIjC,WAAW,GAAGiC,OAAO,CAACjC,WAAR,KAAwBzC,SAAxB,GAAoC0E,OAAO,CAACjC,WAA5C,GAA0D,KAAKiC,OAAL,CAAajC,WAAzF;AACA,QAAIA,WAAW,KAAKzC,SAApB,EAA+ByC,WAAW,GAAG,GAAd;AAC/B,UAAMC,YAAY,GAAGgC,OAAO,CAAChC,YAAR,KAAyB1C,SAAzB,GAAqC0E,OAAO,CAAChC,YAA7C,GAA4D,KAAKgC,OAAL,CAAahC,YAA9F;AACA,QAAI0H,UAAU,GAAG1F,OAAO,CAACuC,EAAR,IAAc,KAAKvC,OAAL,CAAawC,SAA3B,IAAwC,EAAzD;AACA,UAAMmD,oBAAoB,GAAG5H,WAAW,IAAI3D,GAAG,CAACC,OAAJ,CAAY0D,WAAZ,IAA2B,CAAC,CAAxE;AACA,UAAM6H,oBAAoB,GAAG,CAAC,KAAK5F,OAAL,CAAa6F,uBAAd,IAAyC,CAAC7F,OAAO,CAAChC,YAAlD,IAAkE,CAAC,KAAKgC,OAAL,CAAa8F,sBAAhF,IAA0G,CAAC9F,OAAO,CAACjC,WAAnH,IAAkI,CAACD,mBAAmB,CAAC1D,GAAD,EAAM2D,WAAN,EAAmBC,YAAnB,CAAnL;;AACA,QAAI2H,oBAAoB,IAAI,CAACC,oBAA7B,EAAmD;AACjD,YAAM3L,CAAC,GAAGG,GAAG,CAAC2L,KAAJ,CAAU,KAAKC,YAAL,CAAkBC,aAA5B,CAAV;;AACA,UAAIhM,CAAC,IAAIA,CAAC,CAACa,MAAF,GAAW,CAApB,EAAuB;AACrB,eAAO;AACLV,UAAAA,GADK;AAELsL,UAAAA,UAAU,EAAEzM,QAAQ,CAACyM,UAAD,CAAR,GAAuB,CAACA,UAAD,CAAvB,GAAsCA;AAF7C,SAAP;AAID;;AACD,YAAMQ,KAAK,GAAG9L,GAAG,CAACQ,KAAJ,CAAUmD,WAAV,CAAd;AACA,UAAIA,WAAW,KAAKC,YAAhB,IAAgCD,WAAW,KAAKC,YAAhB,IAAgC,KAAKgC,OAAL,CAAauC,EAAb,CAAgBlI,OAAhB,CAAwB6L,KAAK,CAAC,CAAD,CAA7B,IAAoC,CAAC,CAAzG,EAA4GR,UAAU,GAAGQ,KAAK,CAACxI,KAAN,EAAb;AAC5GtD,MAAAA,GAAG,GAAG8L,KAAK,CAAC5H,IAAN,CAAWN,YAAX,CAAN;AACD;;AACD,WAAO;AACL5D,MAAAA,GADK;AAELsL,MAAAA,UAAU,EAAEzM,QAAQ,CAACyM,UAAD,CAAR,GAAuB,CAACA,UAAD,CAAvB,GAAsCA;AAF7C,KAAP;AAID;;AACDS,EAAAA,SAAS,CAAChC,IAAD,EAAOnE,OAAP,EAAgBoG,OAAhB,EAAyB;AAChC,QAAI,OAAOpG,OAAP,KAAmB,QAAnB,IAA+B,KAAKA,OAAL,CAAaqG,gCAAhD,EAAkF;AAChFrG,MAAAA,OAAO,GAAG,KAAKA,OAAL,CAAaqG,gCAAb,CAA8CzH,SAA9C,CAAV;AACD;;AACD,QAAI,OAAOoB,OAAP,KAAmB,QAAvB,EAAiCA,OAAO,GAAG,EACzC,GAAGA;AADsC,KAAV;AAGjC,QAAI,CAACA,OAAL,EAAcA,OAAO,GAAG,EAAV;AACd,QAAImE,IAAI,IAAI,IAAZ,EAAkB,OAAO,EAAP;AAClB,QAAI,CAAC7D,KAAK,CAAC0C,OAAN,CAAcmB,IAAd,CAAL,EAA0BA,IAAI,GAAG,CAAC3H,MAAM,CAAC2H,IAAD,CAAP,CAAP;AAC1B,UAAMmC,aAAa,GAAGtG,OAAO,CAACsG,aAAR,KAA0BhL,SAA1B,GAAsC0E,OAAO,CAACsG,aAA9C,GAA8D,KAAKtG,OAAL,CAAasG,aAAjG;AACA,UAAMtI,YAAY,GAAGgC,OAAO,CAAChC,YAAR,KAAyB1C,SAAzB,GAAqC0E,OAAO,CAAChC,YAA7C,GAA4D,KAAKgC,OAAL,CAAahC,YAA9F;AACA,UAAM;AACJ5D,MAAAA,GADI;AAEJsL,MAAAA;AAFI,QAGF,KAAKD,cAAL,CAAoBtB,IAAI,CAACA,IAAI,CAACrJ,MAAL,GAAc,CAAf,CAAxB,EAA2CkF,OAA3C,CAHJ;AAIA,UAAMuG,SAAS,GAAGb,UAAU,CAACA,UAAU,CAAC5K,MAAX,GAAoB,CAArB,CAA5B;AACA,UAAMiI,GAAG,GAAG/C,OAAO,CAAC+C,GAAR,IAAe,KAAKsC,QAAhC;AACA,UAAMmB,uBAAuB,GAAGxG,OAAO,CAACwG,uBAAR,IAAmC,KAAKxG,OAAL,CAAawG,uBAAhF;;AACA,QAAIzD,GAAG,EAAE0D,WAAL,OAAuB,QAA3B,EAAqC;AACnC,UAAID,uBAAJ,EAA6B;AAC3B,cAAMzI,WAAW,GAAGiC,OAAO,CAACjC,WAAR,IAAuB,KAAKiC,OAAL,CAAajC,WAAxD;;AACA,YAAIuI,aAAJ,EAAmB;AACjB,iBAAO;AACLlN,YAAAA,GAAG,EAAG,GAAEmN,SAAU,GAAExI,WAAY,GAAE3D,GAAI,EADjC;AAELsM,YAAAA,OAAO,EAAEtM,GAFJ;AAGLuM,YAAAA,YAAY,EAAEvM,GAHT;AAILwM,YAAAA,OAAO,EAAE7D,GAJJ;AAKL8D,YAAAA,MAAM,EAAEN,SALH;AAMLO,YAAAA,UAAU,EAAE,KAAKC,oBAAL,CAA0B/G,OAA1B;AANP,WAAP;AAQD;;AACD,eAAQ,GAAEuG,SAAU,GAAExI,WAAY,GAAE3D,GAAI,EAAxC;AACD;;AACD,UAAIkM,aAAJ,EAAmB;AACjB,eAAO;AACLlN,UAAAA,GAAG,EAAEgB,GADA;AAELsM,UAAAA,OAAO,EAAEtM,GAFJ;AAGLuM,UAAAA,YAAY,EAAEvM,GAHT;AAILwM,UAAAA,OAAO,EAAE7D,GAJJ;AAKL8D,UAAAA,MAAM,EAAEN,SALH;AAMLO,UAAAA,UAAU,EAAE,KAAKC,oBAAL,CAA0B/G,OAA1B;AANP,SAAP;AAQD;;AACD,aAAO5F,GAAP;AACD;;AACD,UAAMoL,QAAQ,GAAG,KAAKhM,OAAL,CAAa2K,IAAb,EAAmBnE,OAAnB,CAAjB;AACA,QAAI5G,GAAG,GAAGoM,QAAQ,EAAEpM,GAApB;AACA,UAAM4N,UAAU,GAAGxB,QAAQ,EAAEkB,OAAV,IAAqBtM,GAAxC;AACA,UAAM6M,eAAe,GAAGzB,QAAQ,EAAEmB,YAAV,IAA0BvM,GAAlD;AACA,UAAM8M,QAAQ,GAAG,CAAC,iBAAD,EAAoB,mBAApB,EAAyC,iBAAzC,CAAjB;AACA,UAAMC,UAAU,GAAGnH,OAAO,CAACmH,UAAR,KAAuB7L,SAAvB,GAAmC0E,OAAO,CAACmH,UAA3C,GAAwD,KAAKnH,OAAL,CAAamH,UAAxF;AACA,UAAMC,0BAA0B,GAAG,CAAC,KAAKC,UAAN,IAAoB,KAAKA,UAAL,CAAgBC,cAAvE;AACA,UAAMC,mBAAmB,GAAGvH,OAAO,CAACwH,KAAR,KAAkBlM,SAAlB,IAA+B,CAACrC,QAAQ,CAAC+G,OAAO,CAACwH,KAAT,CAApE;AACA,UAAMC,eAAe,GAAGvC,UAAU,CAACuC,eAAX,CAA2BzH,OAA3B,CAAxB;AACA,UAAM0H,kBAAkB,GAAGH,mBAAmB,GAAG,KAAKI,cAAL,CAAoBC,SAApB,CAA8B7E,GAA9B,EAAmC/C,OAAO,CAACwH,KAA3C,EAAkDxH,OAAlD,CAAH,GAAgE,EAA9G;AACA,UAAM6H,iCAAiC,GAAG7H,OAAO,CAAC8H,OAAR,IAAmBP,mBAAnB,GAAyC,KAAKI,cAAL,CAAoBC,SAApB,CAA8B7E,GAA9B,EAAmC/C,OAAO,CAACwH,KAA3C,EAAkD;AACnIM,MAAAA,OAAO,EAAE;AAD0H,KAAlD,CAAzC,GAErC,EAFL;AAGA,UAAMC,qBAAqB,GAAGR,mBAAmB,IAAI,CAACvH,OAAO,CAAC8H,OAAhC,IAA2C9H,OAAO,CAACwH,KAAR,KAAkB,CAA3F;AACA,UAAMQ,YAAY,GAAGD,qBAAqB,IAAI/H,OAAO,CAAE,eAAc,KAAKA,OAAL,CAAaiI,eAAgB,MAA7C,CAAhC,IAAuFjI,OAAO,CAAE,eAAc0H,kBAAmB,EAAnC,CAA9F,IAAuI1H,OAAO,CAAE,eAAc6H,iCAAkC,EAAlD,CAA9I,IAAsM7H,OAAO,CAACgI,YAAnO;AACA,QAAIE,aAAa,GAAG9O,GAApB;;AACA,QAAIgO,0BAA0B,IAAI,CAAChO,GAA/B,IAAsCqO,eAA1C,EAA2D;AACzDS,MAAAA,aAAa,GAAGF,YAAhB;AACD;;AACD,UAAMV,cAAc,GAAGrC,oBAAoB,CAACiD,aAAD,CAA3C;AACA,UAAMC,OAAO,GAAGpN,MAAM,CAACC,SAAP,CAAiBoN,QAAjB,CAA0BvI,KAA1B,CAAgCqI,aAAhC,CAAhB;;AACA,QAAId,0BAA0B,IAAIc,aAA9B,IAA+CZ,cAA/C,IAAiEJ,QAAQ,CAAC7M,OAAT,CAAiB8N,OAAjB,IAA4B,CAA7F,IAAkG,EAAElP,QAAQ,CAACkO,UAAD,CAAR,IAAwB7G,KAAK,CAAC0C,OAAN,CAAckF,aAAd,CAA1B,CAAtG,EAA+J;AAC7J,UAAI,CAAClI,OAAO,CAACqI,aAAT,IAA0B,CAAC,KAAKrI,OAAL,CAAaqI,aAA5C,EAA2D;AACzD,YAAI,CAAC,KAAKrI,OAAL,CAAasI,qBAAlB,EAAyC;AACvC,eAAKnI,MAAL,CAAYT,IAAZ,CAAiB,iEAAjB;AACD;;AACD,cAAMtB,CAAC,GAAG,KAAK4B,OAAL,CAAasI,qBAAb,GAAqC,KAAKtI,OAAL,CAAasI,qBAAb,CAAmCtB,UAAnC,EAA+CkB,aAA/C,EAA8D,EAC3G,GAAGlI,OADwG;AAE3GuC,UAAAA,EAAE,EAAEmD;AAFuG,SAA9D,CAArC,GAGJ,QAAOtL,GAAI,KAAI,KAAKiL,QAAS,0CAHnC;;AAIA,YAAIiB,aAAJ,EAAmB;AACjBd,UAAAA,QAAQ,CAACpM,GAAT,GAAegF,CAAf;AACAoH,UAAAA,QAAQ,CAACsB,UAAT,GAAsB,KAAKC,oBAAL,CAA0B/G,OAA1B,CAAtB;AACA,iBAAOwF,QAAP;AACD;;AACD,eAAOpH,CAAP;AACD;;AACD,UAAIJ,YAAJ,EAAkB;AAChB,cAAMuK,cAAc,GAAGjI,KAAK,CAAC0C,OAAN,CAAckF,aAAd,CAAvB;AACA,cAAMtO,IAAI,GAAG2O,cAAc,GAAG,EAAH,GAAQ,EAAnC;AACA,cAAMC,WAAW,GAAGD,cAAc,GAAGtB,eAAH,GAAqBD,UAAvD;;AACA,aAAK,MAAM/M,CAAX,IAAgBiO,aAAhB,EAA+B;AAC7B,cAAInN,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCgN,aAArC,EAAoDjO,CAApD,CAAJ,EAA4D;AAC1D,kBAAMwO,OAAO,GAAI,GAAED,WAAY,GAAExK,YAAa,GAAE/D,CAAE,EAAlD;;AACA,gBAAIwN,eAAe,IAAI,CAACrO,GAAxB,EAA6B;AAC3BQ,cAAAA,IAAI,CAACK,CAAD,CAAJ,GAAU,KAAKkM,SAAL,CAAesC,OAAf,EAAwB,EAChC,GAAGzI,OAD6B;AAEhCgI,gBAAAA,YAAY,EAAE/C,oBAAoB,CAAC+C,YAAD,CAApB,GAAqCA,YAAY,CAAC/N,CAAD,CAAjD,GAAuDqB,SAFrC;AAGhC,mBAAG;AACD6L,kBAAAA,UAAU,EAAE,KADX;AAED5E,kBAAAA,EAAE,EAAEmD;AAFH;AAH6B,eAAxB,CAAV;AAQD,aATD,MASO;AACL9L,cAAAA,IAAI,CAACK,CAAD,CAAJ,GAAU,KAAKkM,SAAL,CAAesC,OAAf,EAAwB,EAChC,GAAGzI,OAD6B;AAEhC,mBAAG;AACDmH,kBAAAA,UAAU,EAAE,KADX;AAED5E,kBAAAA,EAAE,EAAEmD;AAFH;AAF6B,eAAxB,CAAV;AAOD;;AACD,gBAAI9L,IAAI,CAACK,CAAD,CAAJ,KAAYwO,OAAhB,EAAyB7O,IAAI,CAACK,CAAD,CAAJ,GAAUiO,aAAa,CAACjO,CAAD,CAAvB;AAC1B;AACF;;AACDb,QAAAA,GAAG,GAAGQ,IAAN;AACD;AACF,KA9CD,MA8CO,IAAIwN,0BAA0B,IAAInO,QAAQ,CAACkO,UAAD,CAAtC,IAAsD7G,KAAK,CAAC0C,OAAN,CAAc5J,GAAd,CAA1D,EAA8E;AACnFA,MAAAA,GAAG,GAAGA,GAAG,CAACkF,IAAJ,CAAS6I,UAAT,CAAN;AACA,UAAI/N,GAAJ,EAASA,GAAG,GAAG,KAAKsP,iBAAL,CAAuBtP,GAAvB,EAA4B+K,IAA5B,EAAkCnE,OAAlC,EAA2CoG,OAA3C,CAAN;AACV,KAHM,MAGA;AACL,UAAIuC,WAAW,GAAG,KAAlB;AACA,UAAIjC,OAAO,GAAG,KAAd;;AACA,UAAI,CAAC,KAAKkC,aAAL,CAAmBxP,GAAnB,CAAD,IAA4BqO,eAAhC,EAAiD;AAC/CkB,QAAAA,WAAW,GAAG,IAAd;AACAvP,QAAAA,GAAG,GAAG4O,YAAN;AACD;;AACD,UAAI,CAAC,KAAKY,aAAL,CAAmBxP,GAAnB,CAAL,EAA8B;AAC5BsN,QAAAA,OAAO,GAAG,IAAV;AACAtN,QAAAA,GAAG,GAAGgB,GAAN;AACD;;AACD,YAAMyO,8BAA8B,GAAG7I,OAAO,CAAC6I,8BAAR,IAA0C,KAAK7I,OAAL,CAAa6I,8BAA9F;AACA,YAAMC,aAAa,GAAGD,8BAA8B,IAAInC,OAAlC,GAA4CpL,SAA5C,GAAwDlC,GAA9E;AACA,YAAM2P,aAAa,GAAGtB,eAAe,IAAIO,YAAY,KAAK5O,GAApC,IAA2C,KAAK4G,OAAL,CAAa+I,aAA9E;;AACA,UAAIrC,OAAO,IAAIiC,WAAX,IAA0BI,aAA9B,EAA6C;AAC3C,aAAK5I,MAAL,CAAYZ,GAAZ,CAAgBwJ,aAAa,GAAG,WAAH,GAAiB,YAA9C,EAA4DhG,GAA5D,EAAiEwD,SAAjE,EAA4EnM,GAA5E,EAAiF2O,aAAa,GAAGf,YAAH,GAAkB5O,GAAhH;;AACA,YAAI4E,YAAJ,EAAkB;AAChB,gBAAMgL,EAAE,GAAG,KAAKxP,OAAL,CAAaY,GAAb,EAAkB,EAC3B,GAAG4F,OADwB;AAE3BhC,YAAAA,YAAY,EAAE;AAFa,WAAlB,CAAX;AAIA,cAAIgL,EAAE,IAAIA,EAAE,CAAC5P,GAAb,EAAkB,KAAK+G,MAAL,CAAYT,IAAZ,CAAiB,iLAAjB;AACnB;;AACD,YAAIuJ,IAAI,GAAG,EAAX;AACA,cAAMC,YAAY,GAAG,KAAKC,aAAL,CAAmBC,gBAAnB,CAAoC,KAAKpJ,OAAL,CAAaqJ,WAAjD,EAA8DrJ,OAAO,CAAC+C,GAAR,IAAe,KAAKsC,QAAlF,CAArB;;AACA,YAAI,KAAKrF,OAAL,CAAasJ,aAAb,KAA+B,UAA/B,IAA6CJ,YAA7C,IAA6DA,YAAY,CAAC,CAAD,CAA7E,EAAkF;AAChF,eAAK,IAAInK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmK,YAAY,CAACpO,MAAjC,EAAyCiE,CAAC,EAA1C,EAA8C;AAC5CkK,YAAAA,IAAI,CAACpN,IAAL,CAAUqN,YAAY,CAACnK,CAAD,CAAtB;AACD;AACF,SAJD,MAIO,IAAI,KAAKiB,OAAL,CAAasJ,aAAb,KAA+B,KAAnC,EAA0C;AAC/CL,UAAAA,IAAI,GAAG,KAAKE,aAAL,CAAmBI,kBAAnB,CAAsCvJ,OAAO,CAAC+C,GAAR,IAAe,KAAKsC,QAA1D,CAAP;AACD,SAFM,MAEA;AACL4D,UAAAA,IAAI,CAACpN,IAAL,CAAUmE,OAAO,CAAC+C,GAAR,IAAe,KAAKsC,QAA9B;AACD;;AACD,cAAMmE,IAAI,GAAG,CAACC,CAAD,EAAItO,CAAJ,EAAOuO,oBAAP,KAAgC;AAC3C,gBAAMC,iBAAiB,GAAGlC,eAAe,IAAIiC,oBAAoB,KAAKtQ,GAA5C,GAAkDsQ,oBAAlD,GAAyEZ,aAAnG;;AACA,cAAI,KAAK9I,OAAL,CAAa4J,iBAAjB,EAAoC;AAClC,iBAAK5J,OAAL,CAAa4J,iBAAb,CAA+BH,CAA/B,EAAkClD,SAAlC,EAA6CpL,CAA7C,EAAgDwO,iBAAhD,EAAmEZ,aAAnE,EAAkF/I,OAAlF;AACD,WAFD,MAEO,IAAI,KAAK6J,gBAAL,EAAuBC,WAA3B,EAAwC;AAC7C,iBAAKD,gBAAL,CAAsBC,WAAtB,CAAkCL,CAAlC,EAAqClD,SAArC,EAAgDpL,CAAhD,EAAmDwO,iBAAnD,EAAsEZ,aAAtE,EAAqF/I,OAArF;AACD;;AACD,eAAK8B,IAAL,CAAU,YAAV,EAAwB2H,CAAxB,EAA2BlD,SAA3B,EAAsCpL,CAAtC,EAAyC/B,GAAzC;AACD,SARD;;AASA,YAAI,KAAK4G,OAAL,CAAa8J,WAAjB,EAA8B;AAC5B,cAAI,KAAK9J,OAAL,CAAa+J,kBAAb,IAAmCxC,mBAAvC,EAA4D;AAC1D0B,YAAAA,IAAI,CAACjP,OAAL,CAAaqL,QAAQ,IAAI;AACvB,oBAAM2E,QAAQ,GAAG,KAAKrC,cAAL,CAAoBsC,WAApB,CAAgC5E,QAAhC,EAA0CrF,OAA1C,CAAjB;;AACA,kBAAI+H,qBAAqB,IAAI/H,OAAO,CAAE,eAAc,KAAKA,OAAL,CAAaiI,eAAgB,MAA7C,CAAhC,IAAuF+B,QAAQ,CAAC3P,OAAT,CAAkB,GAAE,KAAK2F,OAAL,CAAaiI,eAAgB,MAAjD,IAA0D,CAArJ,EAAwJ;AACtJ+B,gBAAAA,QAAQ,CAACnO,IAAT,CAAe,GAAE,KAAKmE,OAAL,CAAaiI,eAAgB,MAA9C;AACD;;AACD+B,cAAAA,QAAQ,CAAChQ,OAAT,CAAiBkQ,MAAM,IAAI;AACzBV,gBAAAA,IAAI,CAAC,CAACnE,QAAD,CAAD,EAAajL,GAAG,GAAG8P,MAAnB,EAA2BlK,OAAO,CAAE,eAAckK,MAAO,EAAvB,CAAP,IAAoClC,YAA/D,CAAJ;AACD,eAFD;AAGD,aARD;AASD,WAVD,MAUO;AACLwB,YAAAA,IAAI,CAACP,IAAD,EAAO7O,GAAP,EAAY4N,YAAZ,CAAJ;AACD;AACF;AACF;;AACD5O,MAAAA,GAAG,GAAG,KAAKsP,iBAAL,CAAuBtP,GAAvB,EAA4B+K,IAA5B,EAAkCnE,OAAlC,EAA2CwF,QAA3C,EAAqDY,OAArD,CAAN;AACA,UAAIM,OAAO,IAAItN,GAAG,KAAKgB,GAAnB,IAA0B,KAAK4F,OAAL,CAAamK,2BAA3C,EAAwE/Q,GAAG,GAAI,GAAEmN,SAAU,IAAGnM,GAAI,EAA1B;;AACxE,UAAI,CAACsM,OAAO,IAAIiC,WAAZ,KAA4B,KAAK3I,OAAL,CAAaoK,sBAA7C,EAAqE;AACnEhR,QAAAA,GAAG,GAAG,KAAK4G,OAAL,CAAaoK,sBAAb,CAAoC,KAAKpK,OAAL,CAAamK,2BAAb,GAA4C,GAAE5D,SAAU,IAAGnM,GAAI,EAA/D,GAAmEA,GAAvG,EAA4GuO,WAAW,GAAGvP,GAAH,GAASkC,SAAhI,CAAN;AACD;AACF;;AACD,QAAIgL,aAAJ,EAAmB;AACjBd,MAAAA,QAAQ,CAACpM,GAAT,GAAeA,GAAf;AACAoM,MAAAA,QAAQ,CAACsB,UAAT,GAAsB,KAAKC,oBAAL,CAA0B/G,OAA1B,CAAtB;AACA,aAAOwF,QAAP;AACD;;AACD,WAAOpM,GAAP;AACD;;AACDsP,EAAAA,iBAAiB,CAACtP,GAAD,EAAMgB,GAAN,EAAW4F,OAAX,EAAoBwF,QAApB,EAA8BY,OAA9B,EAAuC;AACtD,QAAIiE,KAAK,GAAG,IAAZ;;AACA,QAAI,KAAKhD,UAAL,EAAiB1D,KAArB,EAA4B;AAC1BvK,MAAAA,GAAG,GAAG,KAAKiO,UAAL,CAAgB1D,KAAhB,CAAsBvK,GAAtB,EAA2B,EAC/B,GAAG,KAAK4G,OAAL,CAAauF,aAAb,CAA2B+E,gBADC;AAE/B,WAAGtK;AAF4B,OAA3B,EAGHA,OAAO,CAAC+C,GAAR,IAAe,KAAKsC,QAApB,IAAgCG,QAAQ,CAACoB,OAHtC,EAG+CpB,QAAQ,CAACqB,MAHxD,EAGgErB,QAAQ,CAACkB,OAHzE,EAGkF;AACtFlB,QAAAA;AADsF,OAHlF,CAAN;AAMD,KAPD,MAOO,IAAI,CAACxF,OAAO,CAACuK,iBAAb,EAAgC;AACrC,UAAIvK,OAAO,CAACuF,aAAZ,EAA2B,KAAKS,YAAL,CAAkB/F,IAAlB,CAAuB,EAChD,GAAGD,OAD6C;AAEhD,WAAG;AACDuF,UAAAA,aAAa,EAAE,EACb,GAAG,KAAKvF,OAAL,CAAauF,aADH;AAEb,eAAGvF,OAAO,CAACuF;AAFE;AADd;AAF6C,OAAvB;AAS3B,YAAMiF,eAAe,GAAGvR,QAAQ,CAACG,GAAD,CAAR,KAAkB4G,OAAO,EAAEuF,aAAT,EAAwBiF,eAAxB,KAA4ClP,SAA5C,GAAwD0E,OAAO,CAACuF,aAAR,CAAsBiF,eAA9E,GAAgG,KAAKxK,OAAL,CAAauF,aAAb,CAA2BiF,eAA7I,CAAxB;AACA,UAAIC,OAAJ;;AACA,UAAID,eAAJ,EAAqB;AACnB,cAAME,EAAE,GAAGtR,GAAG,CAAC2M,KAAJ,CAAU,KAAKC,YAAL,CAAkBC,aAA5B,CAAX;AACAwE,QAAAA,OAAO,GAAGC,EAAE,IAAIA,EAAE,CAAC5P,MAAnB;AACD;;AACD,UAAIkB,IAAI,GAAGgE,OAAO,CAAC1F,OAAR,IAAmB,CAACrB,QAAQ,CAAC+G,OAAO,CAAC1F,OAAT,CAA5B,GAAgD0F,OAAO,CAAC1F,OAAxD,GAAkE0F,OAA7E;AACA,UAAI,KAAKA,OAAL,CAAauF,aAAb,CAA2B+E,gBAA/B,EAAiDtO,IAAI,GAAG,EACtD,GAAG,KAAKgE,OAAL,CAAauF,aAAb,CAA2B+E,gBADwB;AAEtD,WAAGtO;AAFmD,OAAP;AAIjD5C,MAAAA,GAAG,GAAG,KAAK4M,YAAL,CAAkB2E,WAAlB,CAA8BvR,GAA9B,EAAmC4C,IAAnC,EAAyCgE,OAAO,CAAC+C,GAAR,IAAe,KAAKsC,QAApB,IAAgCG,QAAQ,CAACoB,OAAlF,EAA2F5G,OAA3F,CAAN;;AACA,UAAIwK,eAAJ,EAAqB;AACnB,cAAMI,EAAE,GAAGxR,GAAG,CAAC2M,KAAJ,CAAU,KAAKC,YAAL,CAAkBC,aAA5B,CAAX;AACA,cAAM4E,OAAO,GAAGD,EAAE,IAAIA,EAAE,CAAC9P,MAAzB;AACA,YAAI2P,OAAO,GAAGI,OAAd,EAAuB7K,OAAO,CAAC8K,IAAR,GAAe,KAAf;AACxB;;AACD,UAAI,CAAC9K,OAAO,CAAC+C,GAAT,IAAgByC,QAAhB,IAA4BA,QAAQ,CAACpM,GAAzC,EAA8C4G,OAAO,CAAC+C,GAAR,GAAc,KAAKsC,QAAL,IAAiBG,QAAQ,CAACoB,OAAxC;AAC9C,UAAI5G,OAAO,CAAC8K,IAAR,KAAiB,KAArB,EAA4B1R,GAAG,GAAG,KAAK4M,YAAL,CAAkB8E,IAAlB,CAAuB1R,GAAvB,EAA4B,YAAY;AACxE,aAAK,IAAIiH,IAAI,GAAGzB,SAAS,CAAC9D,MAArB,EAA6B0E,IAAI,GAAG,IAAIc,KAAJ,CAAUD,IAAV,CAApC,EAAqDE,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGF,IAA3E,EAAiFE,IAAI,EAArF,EAAyF;AACvFf,UAAAA,IAAI,CAACe,IAAD,CAAJ,GAAa3B,SAAS,CAAC2B,IAAD,CAAtB;AACD;;AACD,YAAI6F,OAAO,GAAG,CAAH,CAAP,KAAiB5G,IAAI,CAAC,CAAD,CAArB,IAA4B,CAACQ,OAAO,CAAC+K,OAAzC,EAAkD;AAChDV,UAAAA,KAAK,CAAClK,MAAN,CAAaT,IAAb,CAAmB,6CAA4CF,IAAI,CAAC,CAAD,CAAI,YAAWpF,GAAG,CAAC,CAAD,CAAI,EAAzF;;AACA,iBAAO,IAAP;AACD;;AACD,eAAOiQ,KAAK,CAAClE,SAAN,CAAgB,GAAG3G,IAAnB,EAAyBpF,GAAzB,CAAP;AACD,OATiC,EAS/B4F,OAT+B,CAAN;AAU5B,UAAIA,OAAO,CAACuF,aAAZ,EAA2B,KAAKS,YAAL,CAAkBgF,KAAlB;AAC5B;;AACD,UAAMC,WAAW,GAAGjL,OAAO,CAACiL,WAAR,IAAuB,KAAKjL,OAAL,CAAaiL,WAAxD;AACA,UAAMC,kBAAkB,GAAGjS,QAAQ,CAACgS,WAAD,CAAR,GAAwB,CAACA,WAAD,CAAxB,GAAwCA,WAAnE;;AACA,QAAI7R,GAAG,IAAI,IAAP,IAAe8R,kBAAkB,EAAEpQ,MAAnC,IAA6CkF,OAAO,CAACmL,kBAAR,KAA+B,KAAhF,EAAuF;AACrF/R,MAAAA,GAAG,GAAGmL,aAAa,CAACK,MAAd,CAAqBsG,kBAArB,EAAyC9R,GAAzC,EAA8CgB,GAA9C,EAAmD,KAAK4F,OAAL,IAAgB,KAAKA,OAAL,CAAaoL,uBAA7B,GAAuD;AAC9GC,QAAAA,YAAY,EAAE,EACZ,GAAG7F,QADS;AAEZsB,UAAAA,UAAU,EAAE,KAAKC,oBAAL,CAA0B/G,OAA1B;AAFA,SADgG;AAK9G,WAAGA;AAL2G,OAAvD,GAMrDA,OANE,EAMO,IANP,CAAN;AAOD;;AACD,WAAO5G,GAAP;AACD;;AACDI,EAAAA,OAAO,CAAC2K,IAAD,EAAO;AACZ,QAAInE,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,QAAI0M,KAAJ;AACA,QAAI5E,OAAJ;AACA,QAAIC,YAAJ;AACA,QAAIC,OAAJ;AACA,QAAIC,MAAJ;AACA,QAAI5N,QAAQ,CAACkL,IAAD,CAAZ,EAAoBA,IAAI,GAAG,CAACA,IAAD,CAAP;AACpBA,IAAAA,IAAI,CAACnK,OAAL,CAAamB,CAAC,IAAI;AAChB,UAAI,KAAKyN,aAAL,CAAmB0C,KAAnB,CAAJ,EAA+B;AAC/B,YAAMC,SAAS,GAAG,KAAK9F,cAAL,CAAoBtK,CAApB,EAAuB6E,OAAvB,CAAlB;AACA,YAAM5F,GAAG,GAAGmR,SAAS,CAACnR,GAAtB;AACAsM,MAAAA,OAAO,GAAGtM,GAAV;AACA,UAAIsL,UAAU,GAAG6F,SAAS,CAAC7F,UAA3B;AACA,UAAI,KAAK1F,OAAL,CAAawL,UAAjB,EAA6B9F,UAAU,GAAGA,UAAU,CAAC9J,MAAX,CAAkB,KAAKoE,OAAL,CAAawL,UAA/B,CAAb;AAC7B,YAAMjE,mBAAmB,GAAGvH,OAAO,CAACwH,KAAR,KAAkBlM,SAAlB,IAA+B,CAACrC,QAAQ,CAAC+G,OAAO,CAACwH,KAAT,CAApE;AACA,YAAMO,qBAAqB,GAAGR,mBAAmB,IAAI,CAACvH,OAAO,CAAC8H,OAAhC,IAA2C9H,OAAO,CAACwH,KAAR,KAAkB,CAA3F;AACA,YAAMiE,oBAAoB,GAAGzL,OAAO,CAAC+K,OAAR,KAAoBzP,SAApB,KAAkCrC,QAAQ,CAAC+G,OAAO,CAAC+K,OAAT,CAAR,IAA6B,OAAO/K,OAAO,CAAC+K,OAAf,KAA2B,QAA1F,KAAuG/K,OAAO,CAAC+K,OAAR,KAAoB,EAAxJ;AACA,YAAMW,KAAK,GAAG1L,OAAO,CAACiJ,IAAR,GAAejJ,OAAO,CAACiJ,IAAvB,GAA8B,KAAKE,aAAL,CAAmBI,kBAAnB,CAAsCvJ,OAAO,CAAC+C,GAAR,IAAe,KAAKsC,QAA1D,EAAoErF,OAAO,CAACqJ,WAA5E,CAA5C;AACA3D,MAAAA,UAAU,CAAC1L,OAAX,CAAmBuI,EAAE,IAAI;AACvB,YAAI,KAAKqG,aAAL,CAAmB0C,KAAnB,CAAJ,EAA+B;AAC/BzE,QAAAA,MAAM,GAAGtE,EAAT;;AACA,YAAI,CAACyC,gBAAgB,CAAE,GAAE0G,KAAK,CAAC,CAAD,CAAI,IAAGnJ,EAAG,EAAnB,CAAjB,IAA0C,KAAKoJ,KAAL,EAAYC,kBAAtD,IAA4E,CAAC,KAAKD,KAAL,EAAYC,kBAAZ,CAA+B/E,MAA/B,CAAjF,EAAyH;AACvH7B,UAAAA,gBAAgB,CAAE,GAAE0G,KAAK,CAAC,CAAD,CAAI,IAAGnJ,EAAG,EAAnB,CAAhB,GAAwC,IAAxC;AACA,eAAKpC,MAAL,CAAYT,IAAZ,CAAkB,QAAOgH,OAAQ,oBAAmBgF,KAAK,CAACpN,IAAN,CAAW,IAAX,CAAiB,sCAAqCuI,MAAO,sBAAjH,EAAwI,0NAAxI;AACD;;AACD6E,QAAAA,KAAK,CAAC1R,OAAN,CAAcoF,IAAI,IAAI;AACpB,cAAI,KAAKwJ,aAAL,CAAmB0C,KAAnB,CAAJ,EAA+B;AAC/B1E,UAAAA,OAAO,GAAGxH,IAAV;AACA,gBAAMyM,SAAS,GAAG,CAACzR,GAAD,CAAlB;;AACA,cAAI,KAAKiN,UAAL,EAAiByE,aAArB,EAAoC;AAClC,iBAAKzE,UAAL,CAAgByE,aAAhB,CAA8BD,SAA9B,EAAyCzR,GAAzC,EAA8CgF,IAA9C,EAAoDmD,EAApD,EAAwDvC,OAAxD;AACD,WAFD,MAEO;AACL,gBAAI+L,YAAJ;AACA,gBAAIxE,mBAAJ,EAAyBwE,YAAY,GAAG,KAAKpE,cAAL,CAAoBC,SAApB,CAA8BxI,IAA9B,EAAoCY,OAAO,CAACwH,KAA5C,EAAmDxH,OAAnD,CAAf;AACzB,kBAAMgM,UAAU,GAAI,GAAE,KAAKhM,OAAL,CAAaiI,eAAgB,MAAnD;AACA,kBAAMgE,aAAa,GAAI,GAAE,KAAKjM,OAAL,CAAaiI,eAAgB,UAAS,KAAKjI,OAAL,CAAaiI,eAAgB,EAA5F;;AACA,gBAAIV,mBAAJ,EAAyB;AACvBsE,cAAAA,SAAS,CAAChQ,IAAV,CAAezB,GAAG,GAAG2R,YAArB;;AACA,kBAAI/L,OAAO,CAAC8H,OAAR,IAAmBiE,YAAY,CAAC1R,OAAb,CAAqB4R,aAArB,MAAwC,CAA/D,EAAkE;AAChEJ,gBAAAA,SAAS,CAAChQ,IAAV,CAAezB,GAAG,GAAG2R,YAAY,CAACzR,OAAb,CAAqB2R,aAArB,EAAoC,KAAKjM,OAAL,CAAaiI,eAAjD,CAArB;AACD;;AACD,kBAAIF,qBAAJ,EAA2B;AACzB8D,gBAAAA,SAAS,CAAChQ,IAAV,CAAezB,GAAG,GAAG4R,UAArB;AACD;AACF;;AACD,gBAAIP,oBAAJ,EAA0B;AACxB,oBAAMS,UAAU,GAAI,GAAE9R,GAAI,GAAE,KAAK4F,OAAL,CAAamM,gBAAiB,GAAEnM,OAAO,CAAC+K,OAAQ,EAA5E;AACAc,cAAAA,SAAS,CAAChQ,IAAV,CAAeqQ,UAAf;;AACA,kBAAI3E,mBAAJ,EAAyB;AACvBsE,gBAAAA,SAAS,CAAChQ,IAAV,CAAeqQ,UAAU,GAAGH,YAA5B;;AACA,oBAAI/L,OAAO,CAAC8H,OAAR,IAAmBiE,YAAY,CAAC1R,OAAb,CAAqB4R,aAArB,MAAwC,CAA/D,EAAkE;AAChEJ,kBAAAA,SAAS,CAAChQ,IAAV,CAAeqQ,UAAU,GAAGH,YAAY,CAACzR,OAAb,CAAqB2R,aAArB,EAAoC,KAAKjM,OAAL,CAAaiI,eAAjD,CAA5B;AACD;;AACD,oBAAIF,qBAAJ,EAA2B;AACzB8D,kBAAAA,SAAS,CAAChQ,IAAV,CAAeqQ,UAAU,GAAGF,UAA5B;AACD;AACF;AACF;AACF;;AACD,cAAII,WAAJ;;AACA,iBAAOA,WAAW,GAAGP,SAAS,CAACQ,GAAV,EAArB,EAAsC;AACpC,gBAAI,CAAC,KAAKzD,aAAL,CAAmB0C,KAAnB,CAAL,EAAgC;AAC9B3E,cAAAA,YAAY,GAAGyF,WAAf;AACAd,cAAAA,KAAK,GAAG,KAAKxI,WAAL,CAAiB1D,IAAjB,EAAuBmD,EAAvB,EAA2B6J,WAA3B,EAAwCpM,OAAxC,CAAR;AACD;AACF;AACF,SAzCD;AA0CD,OAjDD;AAkDD,KA7DD;AA8DA,WAAO;AACL5G,MAAAA,GAAG,EAAEkS,KADA;AAEL5E,MAAAA,OAFK;AAGLC,MAAAA,YAHK;AAILC,MAAAA,OAJK;AAKLC,MAAAA;AALK,KAAP;AAOD;;AACD+B,EAAAA,aAAa,CAACxP,GAAD,EAAM;AACjB,WAAOA,GAAG,KAAKkC,SAAR,IAAqB,EAAE,CAAC,KAAK0E,OAAL,CAAasM,UAAd,IAA4BlT,GAAG,KAAK,IAAtC,CAArB,IAAoE,EAAE,CAAC,KAAK4G,OAAL,CAAauM,iBAAd,IAAmCnT,GAAG,KAAK,EAA7C,CAA3E;AACD;;AACD0J,EAAAA,WAAW,CAAC1D,IAAD,EAAOmD,EAAP,EAAWnI,GAAX,EAAgB;AACzB,QAAI4F,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,QAAI,KAAKyI,UAAL,EAAiBvE,WAArB,EAAkC,OAAO,KAAKuE,UAAL,CAAgBvE,WAAhB,CAA4B1D,IAA5B,EAAkCmD,EAAlC,EAAsCnI,GAAtC,EAA2C4F,OAA3C,CAAP;AAClC,WAAO,KAAKwM,aAAL,CAAmB1J,WAAnB,CAA+B1D,IAA/B,EAAqCmD,EAArC,EAAyCnI,GAAzC,EAA8C4F,OAA9C,CAAP;AACD;;AACD+G,EAAAA,oBAAoB,GAAG;AACrB,QAAI/G,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,UAAM6N,WAAW,GAAG,CAAC,cAAD,EAAiB,SAAjB,EAA4B,SAA5B,EAAuC,SAAvC,EAAkD,KAAlD,EAAyD,MAAzD,EAAiE,aAAjE,EAAgF,IAAhF,EAAsF,cAAtF,EAAsG,aAAtG,EAAqH,eAArH,EAAsI,eAAtI,EAAuJ,YAAvJ,EAAqK,aAArK,EAAoL,eAApL,CAApB;AACA,UAAMC,wBAAwB,GAAG1M,OAAO,CAAC1F,OAAR,IAAmB,CAACrB,QAAQ,CAAC+G,OAAO,CAAC1F,OAAT,CAA7D;AACA,QAAI0B,IAAI,GAAG0Q,wBAAwB,GAAG1M,OAAO,CAAC1F,OAAX,GAAqB0F,OAAxD;;AACA,QAAI0M,wBAAwB,IAAI,OAAO1M,OAAO,CAACwH,KAAf,KAAyB,WAAzD,EAAsE;AACpExL,MAAAA,IAAI,CAACwL,KAAL,GAAaxH,OAAO,CAACwH,KAArB;AACD;;AACD,QAAI,KAAKxH,OAAL,CAAauF,aAAb,CAA2B+E,gBAA/B,EAAiD;AAC/CtO,MAAAA,IAAI,GAAG,EACL,GAAG,KAAKgE,OAAL,CAAauF,aAAb,CAA2B+E,gBADzB;AAEL,WAAGtO;AAFE,OAAP;AAID;;AACD,QAAI,CAAC0Q,wBAAL,EAA+B;AAC7B1Q,MAAAA,IAAI,GAAG,EACL,GAAGA;AADE,OAAP;;AAGA,WAAK,MAAM5B,GAAX,IAAkBqS,WAAlB,EAA+B;AAC7B,eAAOzQ,IAAI,CAAC5B,GAAD,CAAX;AACD;AACF;;AACD,WAAO4B,IAAP;AACD;;AACqB,SAAfyL,eAAe,CAACzH,OAAD,EAAU;AAC9B,UAAME,MAAM,GAAG,cAAf;;AACA,SAAK,MAAMyM,MAAX,IAAqB3M,OAArB,EAA8B;AAC5B,UAAIjF,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC8E,OAArC,EAA8C2M,MAA9C,KAAyDzM,MAAM,KAAKyM,MAAM,CAACjO,SAAP,CAAiB,CAAjB,EAAoBwB,MAAM,CAACpF,MAA3B,CAApE,IAA0GQ,SAAS,KAAK0E,OAAO,CAAC2M,MAAD,CAAnI,EAA6I;AAC3I,eAAO,IAAP;AACD;AACF;;AACD,WAAO,KAAP;AACD;;AAhamC;;AAmatC,MAAMC,YAAN,CAAmB;AACjB9P,EAAAA,WAAW,CAACkD,OAAD,EAAU;AACnB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAK6M,aAAL,GAAqB,KAAK7M,OAAL,CAAa6M,aAAb,IAA8B,KAAnD;AACA,SAAK1M,MAAL,GAAckB,UAAU,CAACH,MAAX,CAAkB,eAAlB,CAAd;AACD;;AACD4L,EAAAA,qBAAqB,CAAC1N,IAAD,EAAO;AAC1BA,IAAAA,IAAI,GAAGD,cAAc,CAACC,IAAD,CAArB;AACA,QAAI,CAACA,IAAD,IAASA,IAAI,CAAC/E,OAAL,CAAa,GAAb,IAAoB,CAAjC,EAAoC,OAAO,IAAP;AACpC,UAAMmB,CAAC,GAAG4D,IAAI,CAACxE,KAAL,CAAW,GAAX,CAAV;AACA,QAAIY,CAAC,CAACV,MAAF,KAAa,CAAjB,EAAoB,OAAO,IAAP;AACpBU,IAAAA,CAAC,CAAC6Q,GAAF;AACA,QAAI7Q,CAAC,CAACA,CAAC,CAACV,MAAF,GAAW,CAAZ,CAAD,CAAgB2L,WAAhB,OAAkC,GAAtC,EAA2C,OAAO,IAAP;AAC3C,WAAO,KAAKsG,kBAAL,CAAwBvR,CAAC,CAAC8C,IAAF,CAAO,GAAP,CAAxB,CAAP;AACD;;AACD0O,EAAAA,uBAAuB,CAAC5N,IAAD,EAAO;AAC5BA,IAAAA,IAAI,GAAGD,cAAc,CAACC,IAAD,CAArB;AACA,QAAI,CAACA,IAAD,IAASA,IAAI,CAAC/E,OAAL,CAAa,GAAb,IAAoB,CAAjC,EAAoC,OAAO+E,IAAP;AACpC,UAAM5D,CAAC,GAAG4D,IAAI,CAACxE,KAAL,CAAW,GAAX,CAAV;AACA,WAAO,KAAKmS,kBAAL,CAAwBvR,CAAC,CAAC,CAAD,CAAzB,CAAP;AACD;;AACDuR,EAAAA,kBAAkB,CAAC3N,IAAD,EAAO;AACvB,QAAInG,QAAQ,CAACmG,IAAD,CAAR,IAAkBA,IAAI,CAAC/E,OAAL,CAAa,GAAb,IAAoB,CAAC,CAA3C,EAA8C;AAC5C,UAAI4S,aAAJ;;AACA,UAAI;AACFA,QAAAA,aAAa,GAAGC,IAAI,CAACC,mBAAL,CAAyB/N,IAAzB,EAA+B,CAA/B,CAAhB;AACD,OAFD,CAEE,OAAO7D,CAAP,EAAU,CAAE;;AACd,UAAI0R,aAAa,IAAI,KAAKjN,OAAL,CAAaoN,YAAlC,EAAgD;AAC9CH,QAAAA,aAAa,GAAGA,aAAa,CAACxG,WAAd,EAAhB;AACD;;AACD,UAAIwG,aAAJ,EAAmB,OAAOA,aAAP;;AACnB,UAAI,KAAKjN,OAAL,CAAaoN,YAAjB,EAA+B;AAC7B,eAAOhO,IAAI,CAACqH,WAAL,EAAP;AACD;;AACD,aAAOrH,IAAP;AACD;;AACD,WAAO,KAAKY,OAAL,CAAaqN,SAAb,IAA0B,KAAKrN,OAAL,CAAaoN,YAAvC,GAAsDhO,IAAI,CAACqH,WAAL,EAAtD,GAA2ErH,IAAlF;AACD;;AACDkO,EAAAA,eAAe,CAAClO,IAAD,EAAO;AACpB,QAAI,KAAKY,OAAL,CAAauN,IAAb,KAAsB,cAAtB,IAAwC,KAAKvN,OAAL,CAAawN,wBAAzD,EAAmF;AACjFpO,MAAAA,IAAI,GAAG,KAAK4N,uBAAL,CAA6B5N,IAA7B,CAAP;AACD;;AACD,WAAO,CAAC,KAAKyN,aAAN,IAAuB,CAAC,KAAKA,aAAL,CAAmB/R,MAA3C,IAAqD,KAAK+R,aAAL,CAAmBxS,OAAnB,CAA2B+E,IAA3B,IAAmC,CAAC,CAAhG;AACD;;AACDqO,EAAAA,qBAAqB,CAAC/B,KAAD,EAAQ;AAC3B,QAAI,CAACA,KAAL,EAAY,OAAO,IAAP;AACZ,QAAIJ,KAAJ;AACAI,IAAAA,KAAK,CAAC1R,OAAN,CAAcoF,IAAI,IAAI;AACpB,UAAIkM,KAAJ,EAAW;AACX,YAAMoC,UAAU,GAAG,KAAKX,kBAAL,CAAwB3N,IAAxB,CAAnB;AACA,UAAI,CAAC,KAAKY,OAAL,CAAa6M,aAAd,IAA+B,KAAKS,eAAL,CAAqBI,UAArB,CAAnC,EAAqEpC,KAAK,GAAGoC,UAAR;AACtE,KAJD;;AAKA,QAAI,CAACpC,KAAD,IAAU,KAAKtL,OAAL,CAAa6M,aAA3B,EAA0C;AACxCnB,MAAAA,KAAK,CAAC1R,OAAN,CAAcoF,IAAI,IAAI;AACpB,YAAIkM,KAAJ,EAAW;AACX,cAAMqC,OAAO,GAAG,KAAKX,uBAAL,CAA6B5N,IAA7B,CAAhB;AACA,YAAI,KAAKkO,eAAL,CAAqBK,OAArB,CAAJ,EAAmC,OAAOrC,KAAK,GAAGqC,OAAf;AACnCrC,QAAAA,KAAK,GAAG,KAAKtL,OAAL,CAAa6M,aAAb,CAA2BzI,IAA3B,CAAgCwJ,YAAY,IAAI;AACtD,cAAIA,YAAY,KAAKD,OAArB,EAA8B,OAAOC,YAAP;AAC9B,cAAIA,YAAY,CAACvT,OAAb,CAAqB,GAArB,IAA4B,CAA5B,IAAiCsT,OAAO,CAACtT,OAAR,CAAgB,GAAhB,IAAuB,CAA5D,EAA+D;AAC/D,cAAIuT,YAAY,CAACvT,OAAb,CAAqB,GAArB,IAA4B,CAA5B,IAAiCsT,OAAO,CAACtT,OAAR,CAAgB,GAAhB,IAAuB,CAAxD,IAA6DuT,YAAY,CAAClP,SAAb,CAAuB,CAAvB,EAA0BkP,YAAY,CAACvT,OAAb,CAAqB,GAArB,CAA1B,MAAyDsT,OAA1H,EAAmI,OAAOC,YAAP;AACnI,cAAIA,YAAY,CAACvT,OAAb,CAAqBsT,OAArB,MAAkC,CAAlC,IAAuCA,OAAO,CAAC7S,MAAR,GAAiB,CAA5D,EAA+D,OAAO8S,YAAP;AAChE,SALO,CAAR;AAMD,OAVD;AAWD;;AACD,QAAI,CAACtC,KAAL,EAAYA,KAAK,GAAG,KAAKlC,gBAAL,CAAsB,KAAKpJ,OAAL,CAAaqJ,WAAnC,EAAgD,CAAhD,CAAR;AACZ,WAAOiC,KAAP;AACD;;AACDlC,EAAAA,gBAAgB,CAACyE,SAAD,EAAYzO,IAAZ,EAAkB;AAChC,QAAI,CAACyO,SAAL,EAAgB,OAAO,EAAP;AAChB,QAAI,OAAOA,SAAP,KAAqB,UAAzB,EAAqCA,SAAS,GAAGA,SAAS,CAACzO,IAAD,CAArB;AACrC,QAAInG,QAAQ,CAAC4U,SAAD,CAAZ,EAAyBA,SAAS,GAAG,CAACA,SAAD,CAAZ;AACzB,QAAIvN,KAAK,CAAC0C,OAAN,CAAc6K,SAAd,CAAJ,EAA8B,OAAOA,SAAP;AAC9B,QAAI,CAACzO,IAAL,EAAW,OAAOyO,SAAS,CAACC,OAAV,IAAqB,EAA5B;AACX,QAAIxC,KAAK,GAAGuC,SAAS,CAACzO,IAAD,CAArB;AACA,QAAI,CAACkM,KAAL,EAAYA,KAAK,GAAGuC,SAAS,CAAC,KAAKf,qBAAL,CAA2B1N,IAA3B,CAAD,CAAjB;AACZ,QAAI,CAACkM,KAAL,EAAYA,KAAK,GAAGuC,SAAS,CAAC,KAAKd,kBAAL,CAAwB3N,IAAxB,CAAD,CAAjB;AACZ,QAAI,CAACkM,KAAL,EAAYA,KAAK,GAAGuC,SAAS,CAAC,KAAKb,uBAAL,CAA6B5N,IAA7B,CAAD,CAAjB;AACZ,QAAI,CAACkM,KAAL,EAAYA,KAAK,GAAGuC,SAAS,CAACC,OAAlB;AACZ,WAAOxC,KAAK,IAAI,EAAhB;AACD;;AACD/B,EAAAA,kBAAkB,CAACnK,IAAD,EAAO2O,YAAP,EAAqB;AACrC,UAAMC,aAAa,GAAG,KAAK5E,gBAAL,CAAsB2E,YAAY,IAAI,KAAK/N,OAAL,CAAaqJ,WAA7B,IAA4C,EAAlE,EAAsEjK,IAAtE,CAAtB;AACA,UAAMsM,KAAK,GAAG,EAAd;;AACA,UAAMuC,OAAO,GAAG9P,CAAC,IAAI;AACnB,UAAI,CAACA,CAAL,EAAQ;;AACR,UAAI,KAAKmP,eAAL,CAAqBnP,CAArB,CAAJ,EAA6B;AAC3BuN,QAAAA,KAAK,CAAC7P,IAAN,CAAWsC,CAAX;AACD,OAFD,MAEO;AACL,aAAKgC,MAAL,CAAYT,IAAZ,CAAkB,uDAAsDvB,CAAE,EAA1E;AACD;AACF,KAPD;;AAQA,QAAIlF,QAAQ,CAACmG,IAAD,CAAR,KAAmBA,IAAI,CAAC/E,OAAL,CAAa,GAAb,IAAoB,CAAC,CAArB,IAA0B+E,IAAI,CAAC/E,OAAL,CAAa,GAAb,IAAoB,CAAC,CAAlE,CAAJ,EAA0E;AACxE,UAAI,KAAK2F,OAAL,CAAauN,IAAb,KAAsB,cAA1B,EAA0CU,OAAO,CAAC,KAAKlB,kBAAL,CAAwB3N,IAAxB,CAAD,CAAP;AAC1C,UAAI,KAAKY,OAAL,CAAauN,IAAb,KAAsB,cAAtB,IAAwC,KAAKvN,OAAL,CAAauN,IAAb,KAAsB,aAAlE,EAAiFU,OAAO,CAAC,KAAKnB,qBAAL,CAA2B1N,IAA3B,CAAD,CAAP;AACjF,UAAI,KAAKY,OAAL,CAAauN,IAAb,KAAsB,aAA1B,EAAyCU,OAAO,CAAC,KAAKjB,uBAAL,CAA6B5N,IAA7B,CAAD,CAAP;AAC1C,KAJD,MAIO,IAAInG,QAAQ,CAACmG,IAAD,CAAZ,EAAoB;AACzB6O,MAAAA,OAAO,CAAC,KAAKlB,kBAAL,CAAwB3N,IAAxB,CAAD,CAAP;AACD;;AACD4O,IAAAA,aAAa,CAAChU,OAAd,CAAsBkU,EAAE,IAAI;AAC1B,UAAIxC,KAAK,CAACrR,OAAN,CAAc6T,EAAd,IAAoB,CAAxB,EAA2BD,OAAO,CAAC,KAAKlB,kBAAL,CAAwBmB,EAAxB,CAAD,CAAP;AAC5B,KAFD;AAGA,WAAOxC,KAAP;AACD;;AAvGgB;;AA0GnB,MAAMyC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,CADc;AAEpBC,EAAAA,GAAG,EAAE,CAFe;AAGpBC,EAAAA,GAAG,EAAE,CAHe;AAIpBC,EAAAA,GAAG,EAAE,CAJe;AAKpBC,EAAAA,IAAI,EAAE,CALc;AAMpBC,EAAAA,KAAK,EAAE;AANa,CAAtB;AAQA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,MAAM,EAAEnH,KAAK,IAAIA,KAAK,KAAK,CAAV,GAAc,KAAd,GAAsB,OADvB;AAEhBoH,EAAAA,eAAe,EAAE,OAAO;AACtBC,IAAAA,gBAAgB,EAAE,CAAC,KAAD,EAAQ,OAAR;AADI,GAAP;AAFD,CAAlB;;AAMA,MAAMC,cAAN,CAAqB;AACnBhS,EAAAA,WAAW,CAACqM,aAAD,EAAgB;AACzB,QAAInJ,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,SAAKuK,aAAL,GAAqBA,aAArB;AACA,SAAKnJ,OAAL,GAAeA,OAAf;AACA,SAAKG,MAAL,GAAckB,UAAU,CAACH,MAAX,CAAkB,gBAAlB,CAAd;AACA,SAAK6N,gBAAL,GAAwB,EAAxB;AACD;;AACDC,EAAAA,OAAO,CAACjM,GAAD,EAAM7J,GAAN,EAAW;AAChB,SAAK+V,KAAL,CAAWlM,GAAX,IAAkB7J,GAAlB;AACD;;AACDgW,EAAAA,UAAU,GAAG;AACX,SAAKH,gBAAL,GAAwB,EAAxB;AACD;;AACDI,EAAAA,OAAO,CAAC/P,IAAD,EAAO;AACZ,QAAIY,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,UAAMwQ,WAAW,GAAGjQ,cAAc,CAACC,IAAI,KAAK,KAAT,GAAiB,IAAjB,GAAwBA,IAAzB,CAAlC;AACA,UAAME,IAAI,GAAGU,OAAO,CAAC8H,OAAR,GAAkB,SAAlB,GAA8B,UAA3C;AACA,UAAMuH,QAAQ,GAAG3L,IAAI,CAACE,SAAL,CAAe;AAC9BwL,MAAAA,WAD8B;AAE9B9P,MAAAA;AAF8B,KAAf,CAAjB;;AAIA,QAAI+P,QAAQ,IAAI,KAAKN,gBAArB,EAAuC;AACrC,aAAO,KAAKA,gBAAL,CAAsBM,QAAtB,CAAP;AACD;;AACD,QAAIC,IAAJ;;AACA,QAAI;AACFA,MAAAA,IAAI,GAAG,IAAIpC,IAAI,CAACqC,WAAT,CAAqBH,WAArB,EAAkC;AACvC9P,QAAAA;AADuC,OAAlC,CAAP;AAGD,KAJD,CAIE,OAAOkQ,GAAP,EAAY;AACZ,UAAI,CAACtC,IAAL,EAAW;AACT,aAAK/M,MAAL,CAAYR,KAAZ,CAAkB,+CAAlB;AACA,eAAO+O,SAAP;AACD;;AACD,UAAI,CAACtP,IAAI,CAAC2G,KAAL,CAAW,KAAX,CAAL,EAAwB,OAAO2I,SAAP;AACxB,YAAMe,OAAO,GAAG,KAAKtG,aAAL,CAAmB6D,uBAAnB,CAA2C5N,IAA3C,CAAhB;AACAkQ,MAAAA,IAAI,GAAG,KAAKH,OAAL,CAAaM,OAAb,EAAsBzP,OAAtB,CAAP;AACD;;AACD,SAAK+O,gBAAL,CAAsBM,QAAtB,IAAkCC,IAAlC;AACA,WAAOA,IAAP;AACD;;AACDI,EAAAA,WAAW,CAACtQ,IAAD,EAAO;AAChB,QAAIY,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,QAAI0Q,IAAI,GAAG,KAAKH,OAAL,CAAa/P,IAAb,EAAmBY,OAAnB,CAAX;AACA,QAAI,CAACsP,IAAL,EAAWA,IAAI,GAAG,KAAKH,OAAL,CAAa,KAAb,EAAoBnP,OAApB,CAAP;AACX,WAAOsP,IAAI,EAAEV,eAAN,GAAwBC,gBAAxB,CAAyC/T,MAAzC,GAAkD,CAAzD;AACD;;AACD6U,EAAAA,mBAAmB,CAACvQ,IAAD,EAAOhF,GAAP,EAAY;AAC7B,QAAI4F,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,WAAO,KAAKqL,WAAL,CAAiB7K,IAAjB,EAAuBY,OAAvB,EAAgC3B,GAAhC,CAAoC6L,MAAM,IAAK,GAAE9P,GAAI,GAAE8P,MAAO,EAA9D,CAAP;AACD;;AACDD,EAAAA,WAAW,CAAC7K,IAAD,EAAO;AAChB,QAAIY,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,QAAI0Q,IAAI,GAAG,KAAKH,OAAL,CAAa/P,IAAb,EAAmBY,OAAnB,CAAX;AACA,QAAI,CAACsP,IAAL,EAAWA,IAAI,GAAG,KAAKH,OAAL,CAAa,KAAb,EAAoBnP,OAApB,CAAP;AACX,QAAI,CAACsP,IAAL,EAAW,OAAO,EAAP;AACX,WAAOA,IAAI,CAACV,eAAL,GAAuBC,gBAAvB,CAAwCe,IAAxC,CAA6C,CAACC,eAAD,EAAkBC,eAAlB,KAAsC3B,aAAa,CAAC0B,eAAD,CAAb,GAAiC1B,aAAa,CAAC2B,eAAD,CAAjI,EAAoJzR,GAApJ,CAAwJ0R,cAAc,IAAK,GAAE,KAAK/P,OAAL,CAAagQ,OAAQ,GAAEhQ,OAAO,CAAC8H,OAAR,GAAmB,UAAS,KAAK9H,OAAL,CAAagQ,OAAQ,EAAjD,GAAqD,EAAG,GAAED,cAAe,EAA7Q,CAAP;AACD;;AACDnI,EAAAA,SAAS,CAACxI,IAAD,EAAOoI,KAAP,EAAc;AACrB,QAAIxH,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,UAAM0Q,IAAI,GAAG,KAAKH,OAAL,CAAa/P,IAAb,EAAmBY,OAAnB,CAAb;;AACA,QAAIsP,IAAJ,EAAU;AACR,aAAQ,GAAE,KAAKtP,OAAL,CAAagQ,OAAQ,GAAEhQ,OAAO,CAAC8H,OAAR,GAAmB,UAAS,KAAK9H,OAAL,CAAagQ,OAAQ,EAAjD,GAAqD,EAAG,GAAEV,IAAI,CAACX,MAAL,CAAYnH,KAAZ,CAAmB,EAA9G;AACD;;AACD,SAAKrH,MAAL,CAAYT,IAAZ,CAAkB,6BAA4BN,IAAK,EAAnD;AACA,WAAO,KAAKwI,SAAL,CAAe,KAAf,EAAsBJ,KAAtB,EAA6BxH,OAA7B,CAAP;AACD;;AAnEkB;;AAsErB,MAAMiQ,oBAAoB,GAAG,UAAUjU,IAAV,EAAgBC,WAAhB,EAA6B7B,GAA7B,EAAkC;AAC7D,MAAI4D,YAAY,GAAGY,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,GAAvF;AACA,MAAI6D,mBAAmB,GAAG7D,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAA9F;AACA,MAAInE,IAAI,GAAGsB,mBAAmB,CAACC,IAAD,EAAOC,WAAP,EAAoB7B,GAApB,CAA9B;;AACA,MAAI,CAACK,IAAD,IAASgI,mBAAT,IAAgCxJ,QAAQ,CAACmB,GAAD,CAA5C,EAAmD;AACjDK,IAAAA,IAAI,GAAGkE,QAAQ,CAAC3C,IAAD,EAAO5B,GAAP,EAAY4D,YAAZ,CAAf;AACA,QAAIvD,IAAI,KAAKa,SAAb,EAAwBb,IAAI,GAAGkE,QAAQ,CAAC1C,WAAD,EAAc7B,GAAd,EAAmB4D,YAAnB,CAAf;AACzB;;AACD,SAAOvD,IAAP;AACD,CATD;;AAUA,MAAMyV,SAAS,GAAGC,GAAG,IAAIA,GAAG,CAAC7V,OAAJ,CAAY,KAAZ,EAAmB,MAAnB,CAAzB;;AACA,MAAM8V,YAAN,CAAmB;AACjBtT,EAAAA,WAAW,GAAG;AACZ,QAAIkD,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,SAAKuB,MAAL,GAAckB,UAAU,CAACH,MAAX,CAAkB,cAAlB,CAAd;AACA,SAAKlB,OAAL,GAAeA,OAAf;;AACA,SAAKqQ,MAAL,GAAcrQ,OAAO,EAAEuF,aAAT,EAAwB8K,MAAxB,KAAmCnU,KAAK,IAAIA,KAA5C,CAAd;;AACA,SAAK+D,IAAL,CAAUD,OAAV;AACD;;AACDC,EAAAA,IAAI,GAAG;AACL,QAAID,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,QAAI,CAACoB,OAAO,CAACuF,aAAb,EAA4BvF,OAAO,CAACuF,aAAR,GAAwB;AAClD+K,MAAAA,WAAW,EAAE;AADqC,KAAxB;AAG5B,UAAM;AACJ1T,MAAAA,MAAM,EAAE2T,QADJ;AAEJD,MAAAA,WAFI;AAGJE,MAAAA,mBAHI;AAIJtQ,MAAAA,MAJI;AAKJuQ,MAAAA,aALI;AAMJvG,MAAAA,MANI;AAOJwG,MAAAA,aAPI;AAQJC,MAAAA,eARI;AASJC,MAAAA,cATI;AAUJC,MAAAA,cAVI;AAWJC,MAAAA,aAXI;AAYJC,MAAAA,oBAZI;AAaJC,MAAAA,aAbI;AAcJC,MAAAA,oBAdI;AAeJC,MAAAA,uBAfI;AAgBJC,MAAAA,WAhBI;AAiBJC,MAAAA;AAjBI,QAkBFpR,OAAO,CAACuF,aAlBZ;AAmBA,SAAK3I,MAAL,GAAc2T,QAAQ,KAAKjV,SAAb,GAAyBiV,QAAzB,GAAoC3T,MAAlD;AACA,SAAK0T,WAAL,GAAmBA,WAAW,KAAKhV,SAAhB,GAA4BgV,WAA5B,GAA0C,IAA7D;AACA,SAAKE,mBAAL,GAA2BA,mBAAmB,KAAKlV,SAAxB,GAAoCkV,mBAApC,GAA0D,KAArF;AACA,SAAKtQ,MAAL,GAAcA,MAAM,GAAGzD,WAAW,CAACyD,MAAD,CAAd,GAAyBuQ,aAAa,IAAI,IAA9D;AACA,SAAKvG,MAAL,GAAcA,MAAM,GAAGzN,WAAW,CAACyN,MAAD,CAAd,GAAyBwG,aAAa,IAAI,IAA9D;AACA,SAAKC,eAAL,GAAuBA,eAAe,IAAI,GAA1C;AACA,SAAKE,cAAL,GAAsBD,cAAc,GAAG,EAAH,GAAQC,cAAc,IAAI,GAA9D;AACA,SAAKD,cAAL,GAAsB,KAAKC,cAAL,GAAsB,EAAtB,GAA2BD,cAAc,IAAI,EAAnE;AACA,SAAKE,aAAL,GAAqBA,aAAa,GAAGrU,WAAW,CAACqU,aAAD,CAAd,GAAgCC,oBAAoB,IAAItU,WAAW,CAAC,KAAD,CAArG;AACA,SAAKuU,aAAL,GAAqBA,aAAa,GAAGvU,WAAW,CAACuU,aAAD,CAAd,GAAgCC,oBAAoB,IAAIxU,WAAW,CAAC,GAAD,CAArG;AACA,SAAKyU,uBAAL,GAA+BA,uBAAuB,IAAI,GAA1D;AACA,SAAKC,WAAL,GAAmBA,WAAW,IAAI,IAAlC;AACA,SAAKC,YAAL,GAAoBA,YAAY,KAAK9V,SAAjB,GAA6B8V,YAA7B,GAA4C,KAAhE;AACA,SAAKC,WAAL;AACD;;AACDrG,EAAAA,KAAK,GAAG;AACN,QAAI,KAAKhL,OAAT,EAAkB,KAAKC,IAAL,CAAU,KAAKD,OAAf;AACnB;;AACDqR,EAAAA,WAAW,GAAG;AACZ,UAAMC,gBAAgB,GAAG,CAACC,cAAD,EAAiBnU,OAAjB,KAA6B;AACpD,UAAImU,cAAc,EAAElV,MAAhB,KAA2Be,OAA/B,EAAwC;AACtCmU,QAAAA,cAAc,CAACC,SAAf,GAA2B,CAA3B;AACA,eAAOD,cAAP;AACD;;AACD,aAAO,IAAI/T,MAAJ,CAAWJ,OAAX,EAAoB,GAApB,CAAP;AACD,KAND;;AAOA,SAAKqU,MAAL,GAAcH,gBAAgB,CAAC,KAAKG,MAAN,EAAe,GAAE,KAAKvR,MAAO,QAAO,KAAKgK,MAAO,EAAhD,CAA9B;AACA,SAAKwH,cAAL,GAAsBJ,gBAAgB,CAAC,KAAKI,cAAN,EAAuB,GAAE,KAAKxR,MAAO,GAAE,KAAK2Q,cAAe,QAAO,KAAKD,cAAe,GAAE,KAAK1G,MAAO,EAApG,CAAtC;AACA,SAAKjE,aAAL,GAAqBqL,gBAAgB,CAAC,KAAKrL,aAAN,EAAsB,GAAE,KAAK6K,aAAc,QAAO,KAAKE,aAAc,EAArE,CAArC;AACD;;AACDrG,EAAAA,WAAW,CAACjO,GAAD,EAAMV,IAAN,EAAY+G,GAAZ,EAAiB/C,OAAjB,EAA0B;AACnC,QAAI+F,KAAJ;AACA,QAAI7J,KAAJ;AACA,QAAIyV,QAAJ;AACA,UAAM1V,WAAW,GAAG,KAAK+D,OAAL,IAAgB,KAAKA,OAAL,CAAauF,aAA7B,IAA8C,KAAKvF,OAAL,CAAauF,aAAb,CAA2B+E,gBAAzE,IAA6F,EAAjH;;AACA,UAAMsH,YAAY,GAAGxX,GAAG,IAAI;AAC1B,UAAIA,GAAG,CAACC,OAAJ,CAAY,KAAKsW,eAAjB,IAAoC,CAAxC,EAA2C;AACzC,cAAMlW,IAAI,GAAGwV,oBAAoB,CAACjU,IAAD,EAAOC,WAAP,EAAoB7B,GAApB,EAAyB,KAAK4F,OAAL,CAAahC,YAAtC,EAAoD,KAAKgC,OAAL,CAAayC,mBAAjE,CAAjC;AACA,eAAO,KAAK2O,YAAL,GAAoB,KAAKf,MAAL,CAAY5V,IAAZ,EAAkBa,SAAlB,EAA6ByH,GAA7B,EAAkC,EAC3D,GAAG/C,OADwD;AAE3D,aAAGhE,IAFwD;AAG3D6V,UAAAA,gBAAgB,EAAEzX;AAHyC,SAAlC,CAApB,GAIFK,IAJL;AAKD;;AACD,YAAMe,CAAC,GAAGpB,GAAG,CAACQ,KAAJ,CAAU,KAAK+V,eAAf,CAAV;AACA,YAAMxV,CAAC,GAAGK,CAAC,CAACkC,KAAF,GAAUoU,IAAV,EAAV;AACA,YAAMC,CAAC,GAAGvW,CAAC,CAAC8C,IAAF,CAAO,KAAKqS,eAAZ,EAA6BmB,IAA7B,EAAV;AACA,aAAO,KAAKzB,MAAL,CAAYJ,oBAAoB,CAACjU,IAAD,EAAOC,WAAP,EAAoBd,CAApB,EAAuB,KAAK6E,OAAL,CAAahC,YAApC,EAAkD,KAAKgC,OAAL,CAAayC,mBAA/D,CAAhC,EAAqHsP,CAArH,EAAwHhP,GAAxH,EAA6H,EAClI,GAAG/C,OAD+H;AAElI,WAAGhE,IAF+H;AAGlI6V,QAAAA,gBAAgB,EAAE1W;AAHgH,OAA7H,CAAP;AAKD,KAjBD;;AAkBA,SAAKkW,WAAL;AACA,UAAMW,2BAA2B,GAAGhS,OAAO,EAAEgS,2BAAT,IAAwC,KAAKhS,OAAL,CAAagS,2BAAzF;AACA,UAAMxH,eAAe,GAAGxK,OAAO,EAAEuF,aAAT,EAAwBiF,eAAxB,KAA4ClP,SAA5C,GAAwD0E,OAAO,CAACuF,aAAR,CAAsBiF,eAA9E,GAAgG,KAAKxK,OAAL,CAAauF,aAAb,CAA2BiF,eAAnJ;AACA,UAAMyH,KAAK,GAAG,CAAC;AACbC,MAAAA,KAAK,EAAE,KAAKR,cADC;AAEbS,MAAAA,SAAS,EAAEhC,GAAG,IAAID,SAAS,CAACC,GAAD;AAFd,KAAD,EAGX;AACD+B,MAAAA,KAAK,EAAE,KAAKT,MADX;AAEDU,MAAAA,SAAS,EAAEhC,GAAG,IAAI,KAAKG,WAAL,GAAmBJ,SAAS,CAAC,KAAKtT,MAAL,CAAYuT,GAAZ,CAAD,CAA5B,GAAiDD,SAAS,CAACC,GAAD;AAF3E,KAHW,CAAd;AAOA8B,IAAAA,KAAK,CAACjY,OAAN,CAAcoY,IAAI,IAAI;AACpBT,MAAAA,QAAQ,GAAG,CAAX;;AACA,aAAO5L,KAAK,GAAGqM,IAAI,CAACF,KAAL,CAAWG,IAAX,CAAgB3V,GAAhB,CAAf,EAAqC;AACnC,cAAM4V,UAAU,GAAGvM,KAAK,CAAC,CAAD,CAAL,CAAS+L,IAAT,EAAnB;AACA5V,QAAAA,KAAK,GAAG0V,YAAY,CAACU,UAAD,CAApB;;AACA,YAAIpW,KAAK,KAAKZ,SAAd,EAAyB;AACvB,cAAI,OAAO0W,2BAAP,KAAuC,UAA3C,EAAuD;AACrD,kBAAMO,IAAI,GAAGP,2BAA2B,CAACtV,GAAD,EAAMqJ,KAAN,EAAa/F,OAAb,CAAxC;AACA9D,YAAAA,KAAK,GAAGjD,QAAQ,CAACsZ,IAAD,CAAR,GAAiBA,IAAjB,GAAwB,EAAhC;AACD,WAHD,MAGO,IAAIvS,OAAO,IAAIjF,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC8E,OAArC,EAA8CsS,UAA9C,CAAf,EAA0E;AAC/EpW,YAAAA,KAAK,GAAG,EAAR;AACD,WAFM,MAEA,IAAIsO,eAAJ,EAAqB;AAC1BtO,YAAAA,KAAK,GAAG6J,KAAK,CAAC,CAAD,CAAb;AACA;AACD,WAHM,MAGA;AACL,iBAAK5F,MAAL,CAAYT,IAAZ,CAAkB,8BAA6B4S,UAAW,sBAAqB5V,GAAI,EAAnF;AACAR,YAAAA,KAAK,GAAG,EAAR;AACD;AACF,SAbD,MAaO,IAAI,CAACjD,QAAQ,CAACiD,KAAD,CAAT,IAAoB,CAAC,KAAKsU,mBAA9B,EAAmD;AACxDtU,UAAAA,KAAK,GAAGxC,UAAU,CAACwC,KAAD,CAAlB;AACD;;AACD,cAAMiW,SAAS,GAAGC,IAAI,CAACD,SAAL,CAAejW,KAAf,CAAlB;AACAQ,QAAAA,GAAG,GAAGA,GAAG,CAACpC,OAAJ,CAAYyL,KAAK,CAAC,CAAD,CAAjB,EAAsBoM,SAAtB,CAAN;;AACA,YAAI3H,eAAJ,EAAqB;AACnB4H,UAAAA,IAAI,CAACF,KAAL,CAAWV,SAAX,IAAwBtV,KAAK,CAACpB,MAA9B;AACAsX,UAAAA,IAAI,CAACF,KAAL,CAAWV,SAAX,IAAwBzL,KAAK,CAAC,CAAD,CAAL,CAASjL,MAAjC;AACD,SAHD,MAGO;AACLsX,UAAAA,IAAI,CAACF,KAAL,CAAWV,SAAX,GAAuB,CAAvB;AACD;;AACDG,QAAAA,QAAQ;;AACR,YAAIA,QAAQ,IAAI,KAAKR,WAArB,EAAkC;AAChC;AACD;AACF;AACF,KAlCD;AAmCA,WAAOzU,GAAP;AACD;;AACDoO,EAAAA,IAAI,CAACpO,GAAD,EAAMwR,EAAN,EAAU;AACZ,QAAIlO,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,QAAImH,KAAJ;AACA,QAAI7J,KAAJ;AACA,QAAIsW,aAAJ;;AACA,UAAMC,gBAAgB,GAAG,CAACrY,GAAD,EAAMsY,gBAAN,KAA2B;AAClD,YAAMC,GAAG,GAAG,KAAKzB,uBAAjB;AACA,UAAI9W,GAAG,CAACC,OAAJ,CAAYsY,GAAZ,IAAmB,CAAvB,EAA0B,OAAOvY,GAAP;AAC1B,YAAM+D,CAAC,GAAG/D,GAAG,CAACQ,KAAJ,CAAU,IAAI4C,MAAJ,CAAY,GAAEmV,GAAI,OAAlB,CAAV,CAAV;AACA,UAAIC,aAAa,GAAI,IAAGzU,CAAC,CAAC,CAAD,CAAI,EAA7B;AACA/D,MAAAA,GAAG,GAAG+D,CAAC,CAAC,CAAD,CAAP;AACAyU,MAAAA,aAAa,GAAG,KAAKjI,WAAL,CAAiBiI,aAAjB,EAAgCJ,aAAhC,CAAhB;AACA,YAAMK,mBAAmB,GAAGD,aAAa,CAAC7M,KAAd,CAAoB,IAApB,CAA5B;AACA,YAAM+M,mBAAmB,GAAGF,aAAa,CAAC7M,KAAd,CAAoB,IAApB,CAA5B;;AACA,UAAI,CAAC8M,mBAAmB,EAAE/X,MAArB,IAA+B,CAAhC,IAAqC,CAArC,KAA2C,CAA3C,IAAgD,CAACgY,mBAAjD,IAAwEA,mBAAmB,CAAChY,MAApB,GAA6B,CAA7B,KAAmC,CAA/G,EAAkH;AAChH8X,QAAAA,aAAa,GAAGA,aAAa,CAACtY,OAAd,CAAsB,IAAtB,EAA4B,GAA5B,CAAhB;AACD;;AACD,UAAI;AACFkY,QAAAA,aAAa,GAAG9O,IAAI,CAACC,KAAL,CAAWiP,aAAX,CAAhB;AACA,YAAIF,gBAAJ,EAAsBF,aAAa,GAAG,EACpC,GAAGE,gBADiC;AAEpC,aAAGF;AAFiC,SAAhB;AAIvB,OAND,CAME,OAAOjX,CAAP,EAAU;AACV,aAAK4E,MAAL,CAAYT,IAAZ,CAAkB,oDAAmDtF,GAAI,EAAzE,EAA4EmB,CAA5E;AACA,eAAQ,GAAEnB,GAAI,GAAEuY,GAAI,GAAEC,aAAc,EAApC;AACD;;AACD,UAAIJ,aAAa,CAACxK,YAAd,IAA8BwK,aAAa,CAACxK,YAAd,CAA2B3N,OAA3B,CAAmC,KAAK6F,MAAxC,IAAkD,CAAC,CAArF,EAAwF,OAAOsS,aAAa,CAACxK,YAArB;AACxF,aAAO5N,GAAP;AACD,KAxBD;;AAyBA,WAAO2L,KAAK,GAAG,KAAKE,aAAL,CAAmBoM,IAAnB,CAAwB3V,GAAxB,CAAf,EAA6C;AAC3C,UAAIqW,UAAU,GAAG,EAAjB;AACAP,MAAAA,aAAa,GAAG,EACd,GAAGxS;AADW,OAAhB;AAGAwS,MAAAA,aAAa,GAAGA,aAAa,CAAClY,OAAd,IAAyB,CAACrB,QAAQ,CAACuZ,aAAa,CAAClY,OAAf,CAAlC,GAA4DkY,aAAa,CAAClY,OAA1E,GAAoFkY,aAApG;AACAA,MAAAA,aAAa,CAACrH,kBAAd,GAAmC,KAAnC;AACA,aAAOqH,aAAa,CAACxK,YAArB;AACA,UAAIgL,QAAQ,GAAG,KAAf;;AACA,UAAIjN,KAAK,CAAC,CAAD,CAAL,CAAS1L,OAAT,CAAiB,KAAKsW,eAAtB,MAA2C,CAAC,CAA5C,IAAiD,CAAC,OAAOnS,IAAP,CAAYuH,KAAK,CAAC,CAAD,CAAjB,CAAtD,EAA6E;AAC3E,cAAM3H,CAAC,GAAG2H,KAAK,CAAC,CAAD,CAAL,CAASnL,KAAT,CAAe,KAAK+V,eAApB,EAAqCtS,GAArC,CAAyC4U,IAAI,IAAIA,IAAI,CAACnB,IAAL,EAAjD,CAAV;AACA/L,QAAAA,KAAK,CAAC,CAAD,CAAL,GAAW3H,CAAC,CAACV,KAAF,EAAX;AACAqV,QAAAA,UAAU,GAAG3U,CAAb;AACA4U,QAAAA,QAAQ,GAAG,IAAX;AACD;;AACD9W,MAAAA,KAAK,GAAGgS,EAAE,CAACuE,gBAAgB,CAACvX,IAAjB,CAAsB,IAAtB,EAA4B6K,KAAK,CAAC,CAAD,CAAL,CAAS+L,IAAT,EAA5B,EAA6CU,aAA7C,CAAD,EAA8DA,aAA9D,CAAV;AACA,UAAItW,KAAK,IAAI6J,KAAK,CAAC,CAAD,CAAL,KAAarJ,GAAtB,IAA6B,CAACzD,QAAQ,CAACiD,KAAD,CAA1C,EAAmD,OAAOA,KAAP;AACnD,UAAI,CAACjD,QAAQ,CAACiD,KAAD,CAAb,EAAsBA,KAAK,GAAGxC,UAAU,CAACwC,KAAD,CAAlB;;AACtB,UAAI,CAACA,KAAL,EAAY;AACV,aAAKiE,MAAL,CAAYT,IAAZ,CAAkB,qBAAoBqG,KAAK,CAAC,CAAD,CAAI,gBAAerJ,GAAI,EAAlE;AACAR,QAAAA,KAAK,GAAG,EAAR;AACD;;AACD,UAAI8W,QAAJ,EAAc;AACZ9W,QAAAA,KAAK,GAAG6W,UAAU,CAACG,MAAX,CAAkB,CAAC7O,CAAD,EAAI0N,CAAJ,KAAU,KAAK1B,MAAL,CAAYhM,CAAZ,EAAe0N,CAAf,EAAkB/R,OAAO,CAAC+C,GAA1B,EAA+B,EACjE,GAAG/C,OAD8D;AAEjE6R,UAAAA,gBAAgB,EAAE9L,KAAK,CAAC,CAAD,CAAL,CAAS+L,IAAT;AAF+C,SAA/B,CAA5B,EAGJ5V,KAAK,CAAC4V,IAAN,EAHI,CAAR;AAID;;AACDpV,MAAAA,GAAG,GAAGA,GAAG,CAACpC,OAAJ,CAAYyL,KAAK,CAAC,CAAD,CAAjB,EAAsB7J,KAAtB,CAAN;AACA,WAAKuV,MAAL,CAAYD,SAAZ,GAAwB,CAAxB;AACD;;AACD,WAAO9U,GAAP;AACD;;AAlMgB;;AAqMnB,MAAMyW,cAAc,GAAGC,SAAS,IAAI;AAClC,MAAIC,UAAU,GAAGD,SAAS,CAAC3M,WAAV,GAAwBqL,IAAxB,EAAjB;AACA,QAAMwB,aAAa,GAAG,EAAtB;;AACA,MAAIF,SAAS,CAAC/Y,OAAV,CAAkB,GAAlB,IAAyB,CAAC,CAA9B,EAAiC;AAC/B,UAAMmB,CAAC,GAAG4X,SAAS,CAACxY,KAAV,CAAgB,GAAhB,CAAV;AACAyY,IAAAA,UAAU,GAAG7X,CAAC,CAAC,CAAD,CAAD,CAAKiL,WAAL,GAAmBqL,IAAnB,EAAb;AACA,UAAMyB,MAAM,GAAG/X,CAAC,CAAC,CAAD,CAAD,CAAKkD,SAAL,CAAe,CAAf,EAAkBlD,CAAC,CAAC,CAAD,CAAD,CAAKV,MAAL,GAAc,CAAhC,CAAf;;AACA,QAAIuY,UAAU,KAAK,UAAf,IAA6BE,MAAM,CAAClZ,OAAP,CAAe,GAAf,IAAsB,CAAvD,EAA0D;AACxD,UAAI,CAACiZ,aAAa,CAACE,QAAnB,EAA6BF,aAAa,CAACE,QAAd,GAAyBD,MAAM,CAACzB,IAAP,EAAzB;AAC9B,KAFD,MAEO,IAAIuB,UAAU,KAAK,cAAf,IAAiCE,MAAM,CAAClZ,OAAP,CAAe,GAAf,IAAsB,CAA3D,EAA8D;AACnE,UAAI,CAACiZ,aAAa,CAACG,KAAnB,EAA0BH,aAAa,CAACG,KAAd,GAAsBF,MAAM,CAACzB,IAAP,EAAtB;AAC3B,KAFM,MAEA;AACL,YAAM4B,IAAI,GAAGH,MAAM,CAAC3Y,KAAP,CAAa,GAAb,CAAb;AACA8Y,MAAAA,IAAI,CAAC1Z,OAAL,CAAa2Z,GAAG,IAAI;AAClB,YAAIA,GAAJ,EAAS;AACP,gBAAM,CAACvZ,GAAD,EAAM,GAAGwZ,IAAT,IAAiBD,GAAG,CAAC/Y,KAAJ,CAAU,GAAV,CAAvB;AACA,gBAAMuV,GAAG,GAAGyD,IAAI,CAACtV,IAAL,CAAU,GAAV,EAAewT,IAAf,GAAsBxX,OAAtB,CAA8B,UAA9B,EAA0C,EAA1C,CAAZ;AACA,gBAAMuZ,UAAU,GAAGzZ,GAAG,CAAC0X,IAAJ,EAAnB;AACA,cAAI,CAACwB,aAAa,CAACO,UAAD,CAAlB,EAAgCP,aAAa,CAACO,UAAD,CAAb,GAA4B1D,GAA5B;AAChC,cAAIA,GAAG,KAAK,OAAZ,EAAqBmD,aAAa,CAACO,UAAD,CAAb,GAA4B,KAA5B;AACrB,cAAI1D,GAAG,KAAK,MAAZ,EAAoBmD,aAAa,CAACO,UAAD,CAAb,GAA4B,IAA5B;AACpB,cAAI,CAACC,KAAK,CAAC3D,GAAD,CAAV,EAAiBmD,aAAa,CAACO,UAAD,CAAb,GAA4BE,QAAQ,CAAC5D,GAAD,EAAM,EAAN,CAApC;AAClB;AACF,OAVD;AAWD;AACF;;AACD,SAAO;AACLkD,IAAAA,UADK;AAELC,IAAAA;AAFK,GAAP;AAID,CA9BD;;AA+BA,MAAMU,qBAAqB,GAAGC,EAAE,IAAI;AAClC,QAAMC,KAAK,GAAG,EAAd;AACA,SAAO,CAAC/D,GAAD,EAAMpN,GAAN,EAAW/C,OAAX,KAAuB;AAC5B,QAAImU,WAAW,GAAGnU,OAAlB;;AACA,QAAIA,OAAO,IAAIA,OAAO,CAAC6R,gBAAnB,IAAuC7R,OAAO,CAACoU,YAA/C,IAA+DpU,OAAO,CAACoU,YAAR,CAAqBpU,OAAO,CAAC6R,gBAA7B,CAA/D,IAAiH7R,OAAO,CAACA,OAAO,CAAC6R,gBAAT,CAA5H,EAAwJ;AACtJsC,MAAAA,WAAW,GAAG,EACZ,GAAGA,WADS;AAEZ,SAACnU,OAAO,CAAC6R,gBAAT,GAA4BvW;AAFhB,OAAd;AAID;;AACD,UAAMlB,GAAG,GAAG2I,GAAG,GAAGW,IAAI,CAACE,SAAL,CAAeuQ,WAAf,CAAlB;AACA,QAAIE,SAAS,GAAGH,KAAK,CAAC9Z,GAAD,CAArB;;AACA,QAAI,CAACia,SAAL,EAAgB;AACdA,MAAAA,SAAS,GAAGJ,EAAE,CAAC9U,cAAc,CAAC4D,GAAD,CAAf,EAAsB/C,OAAtB,CAAd;AACAkU,MAAAA,KAAK,CAAC9Z,GAAD,CAAL,GAAaia,SAAb;AACD;;AACD,WAAOA,SAAS,CAAClE,GAAD,CAAhB;AACD,GAfD;AAgBD,CAlBD;;AAmBA,MAAMmE,SAAN,CAAgB;AACdxX,EAAAA,WAAW,GAAG;AACZ,QAAIkD,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,SAAKuB,MAAL,GAAckB,UAAU,CAACH,MAAX,CAAkB,WAAlB,CAAd;AACA,SAAKlB,OAAL,GAAeA,OAAf;AACA,SAAKuU,OAAL,GAAe;AACbC,MAAAA,MAAM,EAAER,qBAAqB,CAAC,CAACjR,GAAD,EAAM4Q,GAAN,KAAc;AAC1C,cAAMU,SAAS,GAAG,IAAInH,IAAI,CAACuH,YAAT,CAAsB1R,GAAtB,EAA2B,EAC3C,GAAG4Q;AADwC,SAA3B,CAAlB;AAGA,eAAOxD,GAAG,IAAIkE,SAAS,CAAChE,MAAV,CAAiBF,GAAjB,CAAd;AACD,OAL4B,CADhB;AAObqD,MAAAA,QAAQ,EAAEQ,qBAAqB,CAAC,CAACjR,GAAD,EAAM4Q,GAAN,KAAc;AAC5C,cAAMU,SAAS,GAAG,IAAInH,IAAI,CAACuH,YAAT,CAAsB1R,GAAtB,EAA2B,EAC3C,GAAG4Q,GADwC;AAE3Ce,UAAAA,KAAK,EAAE;AAFoC,SAA3B,CAAlB;AAIA,eAAOvE,GAAG,IAAIkE,SAAS,CAAChE,MAAV,CAAiBF,GAAjB,CAAd;AACD,OAN8B,CAPlB;AAcbwE,MAAAA,QAAQ,EAAEX,qBAAqB,CAAC,CAACjR,GAAD,EAAM4Q,GAAN,KAAc;AAC5C,cAAMU,SAAS,GAAG,IAAInH,IAAI,CAAC0H,cAAT,CAAwB7R,GAAxB,EAA6B,EAC7C,GAAG4Q;AAD0C,SAA7B,CAAlB;AAGA,eAAOxD,GAAG,IAAIkE,SAAS,CAAChE,MAAV,CAAiBF,GAAjB,CAAd;AACD,OAL8B,CAdlB;AAoBb0E,MAAAA,YAAY,EAAEb,qBAAqB,CAAC,CAACjR,GAAD,EAAM4Q,GAAN,KAAc;AAChD,cAAMU,SAAS,GAAG,IAAInH,IAAI,CAAC4H,kBAAT,CAA4B/R,GAA5B,EAAiC,EACjD,GAAG4Q;AAD8C,SAAjC,CAAlB;AAGA,eAAOxD,GAAG,IAAIkE,SAAS,CAAChE,MAAV,CAAiBF,GAAjB,EAAsBwD,GAAG,CAACF,KAAJ,IAAa,KAAnC,CAAd;AACD,OALkC,CApBtB;AA0BbsB,MAAAA,IAAI,EAAEf,qBAAqB,CAAC,CAACjR,GAAD,EAAM4Q,GAAN,KAAc;AACxC,cAAMU,SAAS,GAAG,IAAInH,IAAI,CAAC8H,UAAT,CAAoBjS,GAApB,EAAyB,EACzC,GAAG4Q;AADsC,SAAzB,CAAlB;AAGA,eAAOxD,GAAG,IAAIkE,SAAS,CAAChE,MAAV,CAAiBF,GAAjB,CAAd;AACD,OAL0B;AA1Bd,KAAf;AAiCA,SAAKlQ,IAAL,CAAUD,OAAV;AACD;;AACDC,EAAAA,IAAI,CAACkF,QAAD,EAAW;AACb,QAAInF,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE;AAChF2G,MAAAA,aAAa,EAAE;AADiE,KAAlF;AAGA,SAAKoL,eAAL,GAAuB3Q,OAAO,CAACuF,aAAR,CAAsBoL,eAAtB,IAAyC,GAAhE;AACD;;AACDsE,EAAAA,GAAG,CAACtQ,IAAD,EAAOuJ,EAAP,EAAW;AACZ,SAAKqG,OAAL,CAAa5P,IAAI,CAAC8B,WAAL,GAAmBqL,IAAnB,EAAb,IAA0C5D,EAA1C;AACD;;AACDgH,EAAAA,SAAS,CAACvQ,IAAD,EAAOuJ,EAAP,EAAW;AAClB,SAAKqG,OAAL,CAAa5P,IAAI,CAAC8B,WAAL,GAAmBqL,IAAnB,EAAb,IAA0CkC,qBAAqB,CAAC9F,EAAD,CAA/D;AACD;;AACDmC,EAAAA,MAAM,CAACnU,KAAD,EAAQmU,MAAR,EAAgBtN,GAAhB,EAAqB;AACzB,QAAI/C,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,UAAM2V,OAAO,GAAGlE,MAAM,CAACzV,KAAP,CAAa,KAAK+V,eAAlB,CAAhB;;AACA,QAAI4D,OAAO,CAACzZ,MAAR,GAAiB,CAAjB,IAAsByZ,OAAO,CAAC,CAAD,CAAP,CAAWla,OAAX,CAAmB,GAAnB,IAA0B,CAAhD,IAAqDka,OAAO,CAAC,CAAD,CAAP,CAAWla,OAAX,CAAmB,GAAnB,IAA0B,CAA/E,IAAoFka,OAAO,CAACnQ,IAAR,CAAa2N,CAAC,IAAIA,CAAC,CAAC1X,OAAF,CAAU,GAAV,IAAiB,CAAC,CAApC,CAAxF,EAAgI;AAC9H,YAAMmX,SAAS,GAAG+C,OAAO,CAACY,SAAR,CAAkBpD,CAAC,IAAIA,CAAC,CAAC1X,OAAF,CAAU,GAAV,IAAiB,CAAC,CAAzC,CAAlB;AACAka,MAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,CAACA,OAAO,CAAC,CAAD,CAAR,EAAa,GAAGA,OAAO,CAAC1R,MAAR,CAAe,CAAf,EAAkB2O,SAAlB,CAAhB,EAA8ClT,IAA9C,CAAmD,KAAKqS,eAAxD,CAAb;AACD;;AACD,UAAM1N,MAAM,GAAGsR,OAAO,CAACrB,MAAR,CAAe,CAACkC,GAAD,EAAMrD,CAAN,KAAY;AACxC,YAAM;AACJsB,QAAAA,UADI;AAEJC,QAAAA;AAFI,UAGFH,cAAc,CAACpB,CAAD,CAHlB;;AAIA,UAAI,KAAKwC,OAAL,CAAalB,UAAb,CAAJ,EAA8B;AAC5B,YAAIgC,SAAS,GAAGD,GAAhB;;AACA,YAAI;AACF,gBAAME,UAAU,GAAGtV,OAAO,EAAEoU,YAAT,GAAwBpU,OAAO,CAAC6R,gBAAhC,KAAqD,EAAxE;AACA,gBAAMpI,CAAC,GAAG6L,UAAU,CAACC,MAAX,IAAqBD,UAAU,CAACvS,GAAhC,IAAuC/C,OAAO,CAACuV,MAA/C,IAAyDvV,OAAO,CAAC+C,GAAjE,IAAwEA,GAAlF;AACAsS,UAAAA,SAAS,GAAG,KAAKd,OAAL,CAAalB,UAAb,EAAyB+B,GAAzB,EAA8B3L,CAA9B,EAAiC,EAC3C,GAAG6J,aADwC;AAE3C,eAAGtT,OAFwC;AAG3C,eAAGsV;AAHwC,WAAjC,CAAZ;AAKD,SARD,CAQE,OAAO3V,KAAP,EAAc;AACd,eAAKQ,MAAL,CAAYT,IAAZ,CAAiBC,KAAjB;AACD;;AACD,eAAO0V,SAAP;AACD,OAdD,MAcO;AACL,aAAKlV,MAAL,CAAYT,IAAZ,CAAkB,oCAAmC2T,UAAW,EAAhE;AACD;;AACD,aAAO+B,GAAP;AACD,KAvBc,EAuBZlZ,KAvBY,CAAf;AAwBA,WAAO+G,MAAP;AACD;;AApFa;;AAuFhB,MAAMuS,aAAa,GAAG,CAACC,CAAD,EAAI9Q,IAAJ,KAAa;AACjC,MAAI8Q,CAAC,CAACC,OAAF,CAAU/Q,IAAV,MAAoBrJ,SAAxB,EAAmC;AACjC,WAAOma,CAAC,CAACC,OAAF,CAAU/Q,IAAV,CAAP;AACA8Q,IAAAA,CAAC,CAACE,YAAF;AACD;AACF,CALD;;AAMA,MAAMC,SAAN,SAAwBtU,YAAxB,CAAqC;AACnCxE,EAAAA,WAAW,CAAC+Y,OAAD,EAAUC,KAAV,EAAiB3Q,QAAjB,EAA2B;AACpC,QAAInF,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA;AACA,SAAKiX,OAAL,GAAeA,OAAf;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAK3Q,QAAL,GAAgBA,QAAhB;AACA,SAAKgE,aAAL,GAAqBhE,QAAQ,CAACgE,aAA9B;AACA,SAAKnJ,OAAL,GAAeA,OAAf;AACA,SAAKG,MAAL,GAAckB,UAAU,CAACH,MAAX,CAAkB,kBAAlB,CAAd;AACA,SAAK6U,YAAL,GAAoB,EAApB;AACA,SAAKC,gBAAL,GAAwBhW,OAAO,CAACgW,gBAAR,IAA4B,EAApD;AACA,SAAKC,YAAL,GAAoB,CAApB;AACA,SAAKC,UAAL,GAAkBlW,OAAO,CAACkW,UAAR,IAAsB,CAAtB,GAA0BlW,OAAO,CAACkW,UAAlC,GAA+C,CAAjE;AACA,SAAKC,YAAL,GAAoBnW,OAAO,CAACmW,YAAR,IAAwB,CAAxB,GAA4BnW,OAAO,CAACmW,YAApC,GAAmD,GAAvE;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKR,OAAL,EAAc5V,IAAd,GAAqBkF,QAArB,EAA+BnF,OAAO,CAAC6V,OAAvC,EAAgD7V,OAAhD;AACD;;AACDsW,EAAAA,SAAS,CAACC,SAAD,EAAY7Q,UAAZ,EAAwB1F,OAAxB,EAAiCwW,QAAjC,EAA2C;AAClD,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMf,OAAO,GAAG,EAAhB;AACA,UAAMgB,eAAe,GAAG,EAAxB;AACA,UAAMC,gBAAgB,GAAG,EAAzB;AACAJ,IAAAA,SAAS,CAACvc,OAAV,CAAkB+I,GAAG,IAAI;AACvB,UAAI6T,gBAAgB,GAAG,IAAvB;AACAlR,MAAAA,UAAU,CAAC1L,OAAX,CAAmBuI,EAAE,IAAI;AACvB,cAAMoC,IAAI,GAAI,GAAE5B,GAAI,IAAGR,EAAG,EAA1B;;AACA,YAAI,CAACvC,OAAO,CAAC6W,MAAT,IAAmB,KAAKf,KAAL,CAAWhS,iBAAX,CAA6Bf,GAA7B,EAAkCR,EAAlC,CAAvB,EAA8D;AAC5D,eAAK6T,KAAL,CAAWzR,IAAX,IAAmB,CAAnB;AACD,SAFD,MAEO,IAAI,KAAKyR,KAAL,CAAWzR,IAAX,IAAmB,CAAvB,EAA0B,CAA1B,KAAiC,IAAI,KAAKyR,KAAL,CAAWzR,IAAX,MAAqB,CAAzB,EAA4B;AAClE,cAAI+Q,OAAO,CAAC/Q,IAAD,CAAP,KAAkBrJ,SAAtB,EAAiCoa,OAAO,CAAC/Q,IAAD,CAAP,GAAgB,IAAhB;AAClC,SAFuC,MAEjC;AACL,eAAKyR,KAAL,CAAWzR,IAAX,IAAmB,CAAnB;AACAiS,UAAAA,gBAAgB,GAAG,KAAnB;AACA,cAAIlB,OAAO,CAAC/Q,IAAD,CAAP,KAAkBrJ,SAAtB,EAAiCoa,OAAO,CAAC/Q,IAAD,CAAP,GAAgB,IAAhB;AACjC,cAAI8R,MAAM,CAAC9R,IAAD,CAAN,KAAiBrJ,SAArB,EAAgCmb,MAAM,CAAC9R,IAAD,CAAN,GAAe,IAAf;AAChC,cAAIgS,gBAAgB,CAACpU,EAAD,CAAhB,KAAyBjH,SAA7B,EAAwCqb,gBAAgB,CAACpU,EAAD,CAAhB,GAAuB,IAAvB;AACzC;AACF,OAbD;AAcA,UAAI,CAACqU,gBAAL,EAAuBF,eAAe,CAAC3T,GAAD,CAAf,GAAuB,IAAvB;AACxB,KAjBD;;AAkBA,QAAIhI,MAAM,CAACoJ,IAAP,CAAYsS,MAAZ,EAAoB3b,MAApB,IAA8BC,MAAM,CAACoJ,IAAP,CAAYuR,OAAZ,EAAqB5a,MAAvD,EAA+D;AAC7D,WAAKub,KAAL,CAAWxa,IAAX,CAAgB;AACd6Z,QAAAA,OADc;AAEdC,QAAAA,YAAY,EAAE5a,MAAM,CAACoJ,IAAP,CAAYuR,OAAZ,EAAqB5a,MAFrB;AAGdgc,QAAAA,MAAM,EAAE,EAHM;AAIdC,QAAAA,MAAM,EAAE,EAJM;AAKdP,QAAAA;AALc,OAAhB;AAOD;;AACD,WAAO;AACLC,MAAAA,MAAM,EAAE1b,MAAM,CAACoJ,IAAP,CAAYsS,MAAZ,CADH;AAELf,MAAAA,OAAO,EAAE3a,MAAM,CAACoJ,IAAP,CAAYuR,OAAZ,CAFJ;AAGLgB,MAAAA,eAAe,EAAE3b,MAAM,CAACoJ,IAAP,CAAYuS,eAAZ,CAHZ;AAILC,MAAAA,gBAAgB,EAAE5b,MAAM,CAACoJ,IAAP,CAAYwS,gBAAZ;AAJb,KAAP;AAMD;;AACDG,EAAAA,MAAM,CAACnS,IAAD,EAAO6K,GAAP,EAAYxT,IAAZ,EAAkB;AACtB,UAAMlC,CAAC,GAAG6K,IAAI,CAAC/J,KAAL,CAAW,GAAX,CAAV;AACA,UAAMmI,GAAG,GAAGjJ,CAAC,CAAC,CAAD,CAAb;AACA,UAAMyI,EAAE,GAAGzI,CAAC,CAAC,CAAD,CAAZ;AACA,QAAI0V,GAAJ,EAAS,KAAK1N,IAAL,CAAU,eAAV,EAA2BiB,GAA3B,EAAgCR,EAAhC,EAAoCiN,GAApC;;AACT,QAAI,CAACA,GAAD,IAAQxT,IAAZ,EAAkB;AAChB,WAAK8Z,KAAL,CAAWxS,iBAAX,CAA6BP,GAA7B,EAAkCR,EAAlC,EAAsCvG,IAAtC,EAA4CV,SAA5C,EAAuDA,SAAvD,EAAkE;AAChEkI,QAAAA,QAAQ,EAAE;AADsD,OAAlE;AAGD;;AACD,SAAK4S,KAAL,CAAWzR,IAAX,IAAmB6K,GAAG,GAAG,CAAC,CAAJ,GAAQ,CAA9B;AACA,QAAIA,GAAG,IAAIxT,IAAX,EAAiB,KAAKoa,KAAL,CAAWzR,IAAX,IAAmB,CAAnB;AACjB,UAAMmS,MAAM,GAAG,EAAf;AACA,SAAKT,KAAL,CAAWrc,OAAX,CAAmByb,CAAC,IAAI;AACtB9Z,MAAAA,QAAQ,CAAC8Z,CAAC,CAACqB,MAAH,EAAW,CAAC/T,GAAD,CAAX,EAAkBR,EAAlB,CAAR;AACAiT,MAAAA,aAAa,CAACC,CAAD,EAAI9Q,IAAJ,CAAb;AACA,UAAI6K,GAAJ,EAASiG,CAAC,CAACsB,MAAF,CAASlb,IAAT,CAAc2T,GAAd;;AACT,UAAIiG,CAAC,CAACE,YAAF,KAAmB,CAAnB,IAAwB,CAACF,CAAC,CAACuB,IAA/B,EAAqC;AACnCjc,QAAAA,MAAM,CAACoJ,IAAP,CAAYsR,CAAC,CAACqB,MAAd,EAAsB9c,OAAtB,CAA8ByP,CAAC,IAAI;AACjC,cAAI,CAACqN,MAAM,CAACrN,CAAD,CAAX,EAAgBqN,MAAM,CAACrN,CAAD,CAAN,GAAY,EAAZ;AAChB,gBAAMwN,UAAU,GAAGxB,CAAC,CAACqB,MAAF,CAASrN,CAAT,CAAnB;;AACA,cAAIwN,UAAU,CAACnc,MAAf,EAAuB;AACrBmc,YAAAA,UAAU,CAACjd,OAAX,CAAmBkK,CAAC,IAAI;AACtB,kBAAI4S,MAAM,CAACrN,CAAD,CAAN,CAAUvF,CAAV,MAAiB5I,SAArB,EAAgCwb,MAAM,CAACrN,CAAD,CAAN,CAAUvF,CAAV,IAAe,IAAf;AACjC,aAFD;AAGD;AACF,SARD;AASAuR,QAAAA,CAAC,CAACuB,IAAF,GAAS,IAAT;;AACA,YAAIvB,CAAC,CAACsB,MAAF,CAASjc,MAAb,EAAqB;AACnB2a,UAAAA,CAAC,CAACe,QAAF,CAAWf,CAAC,CAACsB,MAAb;AACD,SAFD,MAEO;AACLtB,UAAAA,CAAC,CAACe,QAAF;AACD;AACF;AACF,KArBD;AAsBA,SAAK1U,IAAL,CAAU,QAAV,EAAoBgV,MAApB;AACA,SAAKT,KAAL,GAAa,KAAKA,KAAL,CAAWnY,MAAX,CAAkBuX,CAAC,IAAI,CAACA,CAAC,CAACuB,IAA1B,CAAb;AACD;;AACDE,EAAAA,IAAI,CAACnU,GAAD,EAAMR,EAAN,EAAU4U,MAAV,EAAkB;AACpB,QAAIC,KAAK,GAAGxY,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAAhF;AACA,QAAIyY,IAAI,GAAGzY,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAKuX,YAApF;AACA,QAAIK,QAAQ,GAAG5X,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,GAAuB8D,SAAS,CAAC,CAAD,CAAhC,GAAsCtD,SAArD;AACA,QAAI,CAACyH,GAAG,CAACjI,MAAT,EAAiB,OAAO0b,QAAQ,CAAC,IAAD,EAAO,EAAP,CAAf;;AACjB,QAAI,KAAKP,YAAL,IAAqB,KAAKD,gBAA9B,EAAgD;AAC9C,WAAKD,YAAL,CAAkBla,IAAlB,CAAuB;AACrBkH,QAAAA,GADqB;AAErBR,QAAAA,EAFqB;AAGrB4U,QAAAA,MAHqB;AAIrBC,QAAAA,KAJqB;AAKrBC,QAAAA,IALqB;AAMrBb,QAAAA;AANqB,OAAvB;AAQA;AACD;;AACD,SAAKP,YAAL;;AACA,UAAMqB,QAAQ,GAAG,CAAC9H,GAAD,EAAMxT,IAAN,KAAe;AAC9B,WAAKia,YAAL;;AACA,UAAI,KAAKF,YAAL,CAAkBjb,MAAlB,GAA2B,CAA/B,EAAkC;AAChC,cAAMkE,IAAI,GAAG,KAAK+W,YAAL,CAAkBrY,KAAlB,EAAb;AACA,aAAKwZ,IAAL,CAAUlY,IAAI,CAAC+D,GAAf,EAAoB/D,IAAI,CAACuD,EAAzB,EAA6BvD,IAAI,CAACmY,MAAlC,EAA0CnY,IAAI,CAACoY,KAA/C,EAAsDpY,IAAI,CAACqY,IAA3D,EAAiErY,IAAI,CAACwX,QAAtE;AACD;;AACD,UAAIhH,GAAG,IAAIxT,IAAP,IAAeob,KAAK,GAAG,KAAKlB,UAAhC,EAA4C;AAC1CqB,QAAAA,UAAU,CAAC,MAAM;AACf,eAAKL,IAAL,CAAUhc,IAAV,CAAe,IAAf,EAAqB6H,GAArB,EAA0BR,EAA1B,EAA8B4U,MAA9B,EAAsCC,KAAK,GAAG,CAA9C,EAAiDC,IAAI,GAAG,CAAxD,EAA2Db,QAA3D;AACD,SAFS,EAEPa,IAFO,CAAV;AAGA;AACD;;AACDb,MAAAA,QAAQ,CAAChH,GAAD,EAAMxT,IAAN,CAAR;AACD,KAbD;;AAcA,UAAMkS,EAAE,GAAG,KAAK2H,OAAL,CAAasB,MAAb,EAAqBK,IAArB,CAA0B,KAAK3B,OAA/B,CAAX;;AACA,QAAI3H,EAAE,CAACpT,MAAH,KAAc,CAAlB,EAAqB;AACnB,UAAI;AACF,cAAMsD,CAAC,GAAG8P,EAAE,CAACnL,GAAD,EAAMR,EAAN,CAAZ;;AACA,YAAInE,CAAC,IAAI,OAAOA,CAAC,CAACqZ,IAAT,KAAkB,UAA3B,EAAuC;AACrCrZ,UAAAA,CAAC,CAACqZ,IAAF,CAAOzb,IAAI,IAAIsb,QAAQ,CAAC,IAAD,EAAOtb,IAAP,CAAvB,EAAqC0b,KAArC,CAA2CJ,QAA3C;AACD,SAFD,MAEO;AACLA,UAAAA,QAAQ,CAAC,IAAD,EAAOlZ,CAAP,CAAR;AACD;AACF,OAPD,CAOE,OAAOoR,GAAP,EAAY;AACZ8H,QAAAA,QAAQ,CAAC9H,GAAD,CAAR;AACD;;AACD;AACD;;AACD,WAAOtB,EAAE,CAACnL,GAAD,EAAMR,EAAN,EAAU+U,QAAV,CAAT;AACD;;AACDK,EAAAA,cAAc,CAACpB,SAAD,EAAY7Q,UAAZ,EAAwB;AACpC,QAAI1F,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,QAAI4X,QAAQ,GAAG5X,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,GAAuB8D,SAAS,CAAC,CAAD,CAAhC,GAAsCtD,SAArD;;AACA,QAAI,CAAC,KAAKua,OAAV,EAAmB;AACjB,WAAK1V,MAAL,CAAYT,IAAZ,CAAiB,gEAAjB;AACA,aAAO8W,QAAQ,IAAIA,QAAQ,EAA3B;AACD;;AACD,QAAIvd,QAAQ,CAACsd,SAAD,CAAZ,EAAyBA,SAAS,GAAG,KAAKpN,aAAL,CAAmBI,kBAAnB,CAAsCgN,SAAtC,CAAZ;AACzB,QAAItd,QAAQ,CAACyM,UAAD,CAAZ,EAA0BA,UAAU,GAAG,CAACA,UAAD,CAAb;AAC1B,UAAM+Q,MAAM,GAAG,KAAKH,SAAL,CAAeC,SAAf,EAA0B7Q,UAA1B,EAAsC1F,OAAtC,EAA+CwW,QAA/C,CAAf;;AACA,QAAI,CAACC,MAAM,CAACA,MAAP,CAAc3b,MAAnB,EAA2B;AACzB,UAAI,CAAC2b,MAAM,CAACf,OAAP,CAAe5a,MAApB,EAA4B0b,QAAQ;AACpC,aAAO,IAAP;AACD;;AACDC,IAAAA,MAAM,CAACA,MAAP,CAAczc,OAAd,CAAsB2K,IAAI,IAAI;AAC5B,WAAKiT,OAAL,CAAajT,IAAb;AACD,KAFD;AAGD;;AACD4I,EAAAA,IAAI,CAACgJ,SAAD,EAAY7Q,UAAZ,EAAwB8Q,QAAxB,EAAkC;AACpC,SAAKmB,cAAL,CAAoBpB,SAApB,EAA+B7Q,UAA/B,EAA2C,EAA3C,EAA+C8Q,QAA/C;AACD;;AACDK,EAAAA,MAAM,CAACN,SAAD,EAAY7Q,UAAZ,EAAwB8Q,QAAxB,EAAkC;AACtC,SAAKmB,cAAL,CAAoBpB,SAApB,EAA+B7Q,UAA/B,EAA2C;AACzCmR,MAAAA,MAAM,EAAE;AADiC,KAA3C,EAEGL,QAFH;AAGD;;AACDoB,EAAAA,OAAO,CAACjT,IAAD,EAAO;AACZ,QAAIzE,MAAM,GAAGtB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAjF;AACA,UAAM9E,CAAC,GAAG6K,IAAI,CAAC/J,KAAL,CAAW,GAAX,CAAV;AACA,UAAMmI,GAAG,GAAGjJ,CAAC,CAAC,CAAD,CAAb;AACA,UAAMyI,EAAE,GAAGzI,CAAC,CAAC,CAAD,CAAZ;AACA,SAAKod,IAAL,CAAUnU,GAAV,EAAeR,EAAf,EAAmB,MAAnB,EAA2BjH,SAA3B,EAAsCA,SAAtC,EAAiD,CAACkU,GAAD,EAAMxT,IAAN,KAAe;AAC9D,UAAIwT,GAAJ,EAAS,KAAKrP,MAAL,CAAYT,IAAZ,CAAkB,GAAEQ,MAAO,qBAAoBqC,EAAG,iBAAgBQ,GAAI,SAAtE,EAAgFyM,GAAhF;AACT,UAAI,CAACA,GAAD,IAAQxT,IAAZ,EAAkB,KAAKmE,MAAL,CAAYZ,GAAZ,CAAiB,GAAEW,MAAO,oBAAmBqC,EAAG,iBAAgBQ,GAAI,EAApE,EAAuE/G,IAAvE;AAClB,WAAK8a,MAAL,CAAYnS,IAAZ,EAAkB6K,GAAlB,EAAuBxT,IAAvB;AACD,KAJD;AAKD;;AACD8N,EAAAA,WAAW,CAACyM,SAAD,EAAYhQ,SAAZ,EAAuBnM,GAAvB,EAA4Byd,aAA5B,EAA2CC,QAA3C,EAAqD;AAC9D,QAAI9X,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,QAAImZ,GAAG,GAAGnZ,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,MAAM,CAAE,CAAtF;;AACA,QAAI,KAAKuG,QAAL,EAAewG,KAAf,EAAsBC,kBAAtB,IAA4C,CAAC,KAAKzG,QAAL,EAAewG,KAAf,EAAsBC,kBAAtB,CAAyCrF,SAAzC,CAAjD,EAAsG;AACpG,WAAKpG,MAAL,CAAYT,IAAZ,CAAkB,qBAAoBtF,GAAI,uBAAsBmM,SAAU,sBAA1E,EAAiG,0NAAjG;AACA;AACD;;AACD,QAAInM,GAAG,KAAKkB,SAAR,IAAqBlB,GAAG,KAAK,IAA7B,IAAqCA,GAAG,KAAK,EAAjD,EAAqD;;AACrD,QAAI,KAAKyb,OAAL,EAAc3U,MAAlB,EAA0B;AACxB,YAAMwS,IAAI,GAAG,EACX,GAAG1T,OADQ;AAEX8X,QAAAA;AAFW,OAAb;AAIA,YAAM5J,EAAE,GAAG,KAAK2H,OAAL,CAAa3U,MAAb,CAAoBsW,IAApB,CAAyB,KAAK3B,OAA9B,CAAX;;AACA,UAAI3H,EAAE,CAACpT,MAAH,GAAY,CAAhB,EAAmB;AACjB,YAAI;AACF,cAAIsD,CAAJ;;AACA,cAAI8P,EAAE,CAACpT,MAAH,KAAc,CAAlB,EAAqB;AACnBsD,YAAAA,CAAC,GAAG8P,EAAE,CAACqI,SAAD,EAAYhQ,SAAZ,EAAuBnM,GAAvB,EAA4Byd,aAA5B,EAA2CnE,IAA3C,CAAN;AACD,WAFD,MAEO;AACLtV,YAAAA,CAAC,GAAG8P,EAAE,CAACqI,SAAD,EAAYhQ,SAAZ,EAAuBnM,GAAvB,EAA4Byd,aAA5B,CAAN;AACD;;AACD,cAAIzZ,CAAC,IAAI,OAAOA,CAAC,CAACqZ,IAAT,KAAkB,UAA3B,EAAuC;AACrCrZ,YAAAA,CAAC,CAACqZ,IAAF,CAAOzb,IAAI,IAAI+b,GAAG,CAAC,IAAD,EAAO/b,IAAP,CAAlB,EAAgC0b,KAAhC,CAAsCK,GAAtC;AACD,WAFD,MAEO;AACLA,YAAAA,GAAG,CAAC,IAAD,EAAO3Z,CAAP,CAAH;AACD;AACF,SAZD,CAYE,OAAOoR,GAAP,EAAY;AACZuI,UAAAA,GAAG,CAACvI,GAAD,CAAH;AACD;AACF,OAhBD,MAgBO;AACLtB,QAAAA,EAAE,CAACqI,SAAD,EAAYhQ,SAAZ,EAAuBnM,GAAvB,EAA4Byd,aAA5B,EAA2CE,GAA3C,EAAgDrE,IAAhD,CAAF;AACD;AACF;;AACD,QAAI,CAAC6C,SAAD,IAAc,CAACA,SAAS,CAAC,CAAD,CAA5B,EAAiC;AACjC,SAAKT,KAAL,CAAW5S,WAAX,CAAuBqT,SAAS,CAAC,CAAD,CAAhC,EAAqChQ,SAArC,EAAgDnM,GAAhD,EAAqDyd,aAArD;AACD;;AAxNkC;;AA2NrC,MAAMva,GAAG,GAAG,OAAO;AACjB8C,EAAAA,KAAK,EAAE,KADU;AAEjB4X,EAAAA,SAAS,EAAE,IAFM;AAGjBzV,EAAAA,EAAE,EAAE,CAAC,aAAD,CAHa;AAIjBC,EAAAA,SAAS,EAAE,CAAC,aAAD,CAJM;AAKjB6G,EAAAA,WAAW,EAAE,CAAC,KAAD,CALI;AAMjBmC,EAAAA,UAAU,EAAE,KANK;AAOjBqB,EAAAA,aAAa,EAAE,KAPE;AAQjBW,EAAAA,wBAAwB,EAAE,KART;AASjBD,EAAAA,IAAI,EAAE,KATW;AAUjB0K,EAAAA,OAAO,EAAE,KAVQ;AAWjBC,EAAAA,oBAAoB,EAAE,IAXL;AAYjBla,EAAAA,YAAY,EAAE,GAZG;AAajBD,EAAAA,WAAW,EAAE,GAbI;AAcjBkK,EAAAA,eAAe,EAAE,GAdA;AAejBkE,EAAAA,gBAAgB,EAAE,GAfD;AAgBjBgM,EAAAA,uBAAuB,EAAE,KAhBR;AAiBjBrO,EAAAA,WAAW,EAAE,KAjBI;AAkBjBf,EAAAA,aAAa,EAAE,KAlBE;AAmBjBO,EAAAA,aAAa,EAAE,UAnBE;AAoBjBS,EAAAA,kBAAkB,EAAE,IApBH;AAqBjBH,EAAAA,iBAAiB,EAAE,KArBF;AAsBjBoI,EAAAA,2BAA2B,EAAE,KAtBZ;AAuBjB/G,EAAAA,WAAW,EAAE,KAvBI;AAwBjBG,EAAAA,uBAAuB,EAAE,KAxBR;AAyBjBkB,EAAAA,UAAU,EAAE,KAzBK;AA0BjBC,EAAAA,iBAAiB,EAAE,IA1BF;AA2BjBlE,EAAAA,aAAa,EAAE,KA3BE;AA4BjBlB,EAAAA,UAAU,EAAE,KA5BK;AA6BjBmB,EAAAA,qBAAqB,EAAE,KA7BN;AA8BjB8B,EAAAA,sBAAsB,EAAE,KA9BP;AA+BjBD,EAAAA,2BAA2B,EAAE,KA/BZ;AAgCjB3D,EAAAA,uBAAuB,EAAE,KAhCR;AAiCjBH,EAAAA,gCAAgC,EAAE7G,IAAI,IAAI;AACxC,QAAI4Y,GAAG,GAAG,EAAV;AACA,QAAI,OAAO5Y,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAvB,EAAiC4Y,GAAG,GAAG5Y,IAAI,CAAC,CAAD,CAAV;AACjC,QAAIvG,QAAQ,CAACuG,IAAI,CAAC,CAAD,CAAL,CAAZ,EAAuB4Y,GAAG,CAACpQ,YAAJ,GAAmBxI,IAAI,CAAC,CAAD,CAAvB;AACvB,QAAIvG,QAAQ,CAACuG,IAAI,CAAC,CAAD,CAAL,CAAZ,EAAuB4Y,GAAG,CAACC,YAAJ,GAAmB7Y,IAAI,CAAC,CAAD,CAAvB;;AACvB,QAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAnB,IAA+B,OAAOA,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAtD,EAAgE;AAC9D,YAAMQ,OAAO,GAAGR,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAA/B;AACAzE,MAAAA,MAAM,CAACoJ,IAAP,CAAYnE,OAAZ,EAAqBhG,OAArB,CAA6BI,GAAG,IAAI;AAClCge,QAAAA,GAAG,CAAChe,GAAD,CAAH,GAAW4F,OAAO,CAAC5F,GAAD,CAAlB;AACD,OAFD;AAGD;;AACD,WAAOge,GAAP;AACD,GA7CgB;AA8CjB7S,EAAAA,aAAa,EAAE;AACb+K,IAAAA,WAAW,EAAE,IADA;AAEbD,IAAAA,MAAM,EAAEnU,KAAK,IAAIA,KAFJ;AAGbgE,IAAAA,MAAM,EAAE,IAHK;AAIbgK,IAAAA,MAAM,EAAE,IAJK;AAKbyG,IAAAA,eAAe,EAAE,GALJ;AAMbE,IAAAA,cAAc,EAAE,GANH;AAObC,IAAAA,aAAa,EAAE,KAPF;AAQbE,IAAAA,aAAa,EAAE,GARF;AASbE,IAAAA,uBAAuB,EAAE,GATZ;AAUbC,IAAAA,WAAW,EAAE,IAVA;AAWb3G,IAAAA,eAAe,EAAE;AAXJ;AA9CE,CAAP,CAAZ;;AA4DA,MAAM8N,gBAAgB,GAAGtY,OAAO,IAAI;AAClC,MAAI/G,QAAQ,CAAC+G,OAAO,CAACuC,EAAT,CAAZ,EAA0BvC,OAAO,CAACuC,EAAR,GAAa,CAACvC,OAAO,CAACuC,EAAT,CAAb;AAC1B,MAAItJ,QAAQ,CAAC+G,OAAO,CAACqJ,WAAT,CAAZ,EAAmCrJ,OAAO,CAACqJ,WAAR,GAAsB,CAACrJ,OAAO,CAACqJ,WAAT,CAAtB;AACnC,MAAIpQ,QAAQ,CAAC+G,OAAO,CAACwL,UAAT,CAAZ,EAAkCxL,OAAO,CAACwL,UAAR,GAAqB,CAACxL,OAAO,CAACwL,UAAT,CAArB;;AAClC,MAAIxL,OAAO,CAAC6M,aAAR,EAAuBxS,OAAvB,GAAiC,QAAjC,IAA6C,CAAjD,EAAoD;AAClD2F,IAAAA,OAAO,CAAC6M,aAAR,GAAwB7M,OAAO,CAAC6M,aAAR,CAAsBjR,MAAtB,CAA6B,CAAC,QAAD,CAA7B,CAAxB;AACD;;AACD,MAAI,OAAOoE,OAAO,CAACuY,aAAf,KAAiC,SAArC,EAAgDvY,OAAO,CAACgY,SAAR,GAAoBhY,OAAO,CAACuY,aAA5B;AAChD,SAAOvY,OAAP;AACD,CATD;;AAWA,MAAMwY,IAAI,GAAG,MAAM,CAAE,CAArB;;AACA,MAAMC,mBAAmB,GAAGC,IAAI,IAAI;AAClC,QAAMC,IAAI,GAAG5d,MAAM,CAAC6d,mBAAP,CAA2B7d,MAAM,CAAC8d,cAAP,CAAsBH,IAAtB,CAA3B,CAAb;AACAC,EAAAA,IAAI,CAAC3e,OAAL,CAAaob,GAAG,IAAI;AAClB,QAAI,OAAOsD,IAAI,CAACtD,GAAD,CAAX,KAAqB,UAAzB,EAAqC;AACnCsD,MAAAA,IAAI,CAACtD,GAAD,CAAJ,GAAYsD,IAAI,CAACtD,GAAD,CAAJ,CAAUoC,IAAV,CAAekB,IAAf,CAAZ;AACD;AACF,GAJD;AAKD,CAPD;;AAQA,MAAMI,IAAN,SAAmBxX,YAAnB,CAAgC;AAC9BxE,EAAAA,WAAW,GAAG;AACZ,QAAIkD,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,QAAI4X,QAAQ,GAAG5X,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,GAAuB8D,SAAS,CAAC,CAAD,CAAhC,GAAsCtD,SAArD;AACA;AACA,SAAK0E,OAAL,GAAesY,gBAAgB,CAACtY,OAAD,CAA/B;AACA,SAAKmF,QAAL,GAAgB,EAAhB;AACA,SAAKhF,MAAL,GAAckB,UAAd;AACA,SAAK0X,OAAL,GAAe;AACbC,MAAAA,QAAQ,EAAE;AADG,KAAf;AAGAP,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;;AACA,QAAIjC,QAAQ,IAAI,CAAC,KAAKyC,aAAlB,IAAmC,CAACjZ,OAAO,CAACkZ,OAAhD,EAAyD;AACvD,UAAI,CAAC,KAAKlZ,OAAL,CAAagY,SAAlB,EAA6B;AAC3B,aAAK/X,IAAL,CAAUD,OAAV,EAAmBwW,QAAnB;AACA,eAAO,IAAP;AACD;;AACDe,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKtX,IAAL,CAAUD,OAAV,EAAmBwW,QAAnB;AACD,OAFS,EAEP,CAFO,CAAV;AAGD;AACF;;AACDvW,EAAAA,IAAI,GAAG;AACL,QAAIoK,KAAK,GAAG,IAAZ;;AACA,QAAIrK,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,QAAI4X,QAAQ,GAAG5X,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,GAAuB8D,SAAS,CAAC,CAAD,CAAhC,GAAsCtD,SAArD;AACA,SAAK6d,cAAL,GAAsB,IAAtB;;AACA,QAAI,OAAOnZ,OAAP,KAAmB,UAAvB,EAAmC;AACjCwW,MAAAA,QAAQ,GAAGxW,OAAX;AACAA,MAAAA,OAAO,GAAG,EAAV;AACD;;AACD,QAAIA,OAAO,CAACwC,SAAR,IAAqB,IAArB,IAA6BxC,OAAO,CAACuC,EAAzC,EAA6C;AAC3C,UAAItJ,QAAQ,CAAC+G,OAAO,CAACuC,EAAT,CAAZ,EAA0B;AACxBvC,QAAAA,OAAO,CAACwC,SAAR,GAAoBxC,OAAO,CAACuC,EAA5B;AACD,OAFD,MAEO,IAAIvC,OAAO,CAACuC,EAAR,CAAWlI,OAAX,CAAmB,aAAnB,IAAoC,CAAxC,EAA2C;AAChD2F,QAAAA,OAAO,CAACwC,SAAR,GAAoBxC,OAAO,CAACuC,EAAR,CAAW,CAAX,CAApB;AACD;AACF;;AACD,UAAM6W,OAAO,GAAG9b,GAAG,EAAnB;AACA,SAAK0C,OAAL,GAAe,EACb,GAAGoZ,OADU;AAEb,SAAG,KAAKpZ,OAFK;AAGb,SAAGsY,gBAAgB,CAACtY,OAAD;AAHN,KAAf;AAKA,SAAKA,OAAL,CAAauF,aAAb,GAA6B,EAC3B,GAAG6T,OAAO,CAAC7T,aADgB;AAE3B,SAAG,KAAKvF,OAAL,CAAauF;AAFW,KAA7B;;AAIA,QAAIvF,OAAO,CAAChC,YAAR,KAAyB1C,SAA7B,EAAwC;AACtC,WAAK0E,OAAL,CAAa6F,uBAAb,GAAuC7F,OAAO,CAAChC,YAA/C;AACD;;AACD,QAAIgC,OAAO,CAACjC,WAAR,KAAwBzC,SAA5B,EAAuC;AACrC,WAAK0E,OAAL,CAAa8F,sBAAb,GAAsC9F,OAAO,CAACjC,WAA9C;AACD;;AACD,UAAMsb,mBAAmB,GAAGC,aAAa,IAAI;AAC3C,UAAI,CAACA,aAAL,EAAoB,OAAO,IAAP;AACpB,UAAI,OAAOA,aAAP,KAAyB,UAA7B,EAAyC,OAAO,IAAIA,aAAJ,EAAP;AACzC,aAAOA,aAAP;AACD,KAJD;;AAKA,QAAI,CAAC,KAAKtZ,OAAL,CAAakZ,OAAlB,EAA2B;AACzB,UAAI,KAAKH,OAAL,CAAa5Y,MAAjB,EAAyB;AACvBkB,QAAAA,UAAU,CAACpB,IAAX,CAAgBoZ,mBAAmB,CAAC,KAAKN,OAAL,CAAa5Y,MAAd,CAAnC,EAA0D,KAAKH,OAA/D;AACD,OAFD,MAEO;AACLqB,QAAAA,UAAU,CAACpB,IAAX,CAAgB,IAAhB,EAAsB,KAAKD,OAA3B;AACD;;AACD,UAAIqU,SAAJ;;AACA,UAAI,KAAK0E,OAAL,CAAa1E,SAAjB,EAA4B;AAC1BA,QAAAA,SAAS,GAAG,KAAK0E,OAAL,CAAa1E,SAAzB;AACD,OAFD,MAEO;AACLA,QAAAA,SAAS,GAAGC,SAAZ;AACD;;AACD,YAAMiF,EAAE,GAAG,IAAI3M,YAAJ,CAAiB,KAAK5M,OAAtB,CAAX;AACA,WAAK8V,KAAL,GAAa,IAAIxT,aAAJ,CAAkB,KAAKtC,OAAL,CAAaqD,SAA/B,EAA0C,KAAKrD,OAA/C,CAAb;AACA,YAAMlG,CAAC,GAAG,KAAKqL,QAAf;AACArL,MAAAA,CAAC,CAACqG,MAAF,GAAWkB,UAAX;AACAvH,MAAAA,CAAC,CAAC0S,aAAF,GAAkB,KAAKsJ,KAAvB;AACAhc,MAAAA,CAAC,CAACqP,aAAF,GAAkBoQ,EAAlB;AACAzf,MAAAA,CAAC,CAAC6N,cAAF,GAAmB,IAAImH,cAAJ,CAAmByK,EAAnB,EAAuB;AACxCvJ,QAAAA,OAAO,EAAE,KAAKhQ,OAAL,CAAaiI,eADkB;AAExCiQ,QAAAA,oBAAoB,EAAE,KAAKlY,OAAL,CAAakY;AAFK,OAAvB,CAAnB;;AAIA,UAAI7D,SAAS,KAAK,CAAC,KAAKrU,OAAL,CAAauF,aAAb,CAA2B8K,MAA5B,IAAsC,KAAKrQ,OAAL,CAAauF,aAAb,CAA2B8K,MAA3B,KAAsC+I,OAAO,CAAC7T,aAAR,CAAsB8K,MAAvG,CAAb,EAA6H;AAC3HvW,QAAAA,CAAC,CAACua,SAAF,GAAcgF,mBAAmB,CAAChF,SAAD,CAAjC;AACAva,QAAAA,CAAC,CAACua,SAAF,CAAYpU,IAAZ,CAAiBnG,CAAjB,EAAoB,KAAKkG,OAAzB;AACA,aAAKA,OAAL,CAAauF,aAAb,CAA2B8K,MAA3B,GAAoCvW,CAAC,CAACua,SAAF,CAAYhE,MAAZ,CAAmBmH,IAAnB,CAAwB1d,CAAC,CAACua,SAA1B,CAApC;AACD;;AACDva,MAAAA,CAAC,CAACkM,YAAF,GAAiB,IAAIoK,YAAJ,CAAiB,KAAKpQ,OAAtB,CAAjB;AACAlG,MAAAA,CAAC,CAAC6R,KAAF,GAAU;AACRC,QAAAA,kBAAkB,EAAE,KAAKA,kBAAL,CAAwB4L,IAAxB,CAA6B,IAA7B;AADZ,OAAV;AAGA1d,MAAAA,CAAC,CAAC+P,gBAAF,GAAqB,IAAI+L,SAAJ,CAAcyD,mBAAmB,CAAC,KAAKN,OAAL,CAAalD,OAAd,CAAjC,EAAyD/b,CAAC,CAAC0S,aAA3D,EAA0E1S,CAA1E,EAA6E,KAAKkG,OAAlF,CAArB;AACAlG,MAAAA,CAAC,CAAC+P,gBAAF,CAAmBrI,EAAnB,CAAsB,GAAtB,EAA2B,UAAUG,KAAV,EAAiB;AAC1C,aAAK,IAAItB,IAAI,GAAGzB,SAAS,CAAC9D,MAArB,EAA6B0E,IAAI,GAAG,IAAIc,KAAJ,CAAUD,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAApC,EAAwEE,IAAI,GAAG,CAApF,EAAuFA,IAAI,GAAGF,IAA9F,EAAoGE,IAAI,EAAxG,EAA4G;AAC1Gf,UAAAA,IAAI,CAACe,IAAI,GAAG,CAAR,CAAJ,GAAiB3B,SAAS,CAAC2B,IAAD,CAA1B;AACD;;AACD8J,QAAAA,KAAK,CAACvI,IAAN,CAAWH,KAAX,EAAkB,GAAGnC,IAArB;AACD,OALD;;AAMA,UAAI,KAAKuZ,OAAL,CAAaS,gBAAjB,EAAmC;AACjC1f,QAAAA,CAAC,CAAC0f,gBAAF,GAAqBH,mBAAmB,CAAC,KAAKN,OAAL,CAAaS,gBAAd,CAAxC;AACA,YAAI1f,CAAC,CAAC0f,gBAAF,CAAmBvZ,IAAvB,EAA6BnG,CAAC,CAAC0f,gBAAF,CAAmBvZ,IAAnB,CAAwBnG,CAAxB,EAA2B,KAAKkG,OAAL,CAAayZ,SAAxC,EAAmD,KAAKzZ,OAAxD;AAC9B;;AACD,UAAI,KAAK+Y,OAAL,CAAa1R,UAAjB,EAA6B;AAC3BvN,QAAAA,CAAC,CAACuN,UAAF,GAAegS,mBAAmB,CAAC,KAAKN,OAAL,CAAa1R,UAAd,CAAlC;AACA,YAAIvN,CAAC,CAACuN,UAAF,CAAapH,IAAjB,EAAuBnG,CAAC,CAACuN,UAAF,CAAapH,IAAb,CAAkB,IAAlB;AACxB;;AACD,WAAK4E,UAAL,GAAkB,IAAIK,UAAJ,CAAe,KAAKC,QAApB,EAA8B,KAAKnF,OAAnC,CAAlB;AACA,WAAK6E,UAAL,CAAgBrD,EAAhB,CAAmB,GAAnB,EAAwB,UAAUG,KAAV,EAAiB;AACvC,aAAK,IAAIlB,KAAK,GAAG7B,SAAS,CAAC9D,MAAtB,EAA8B0E,IAAI,GAAG,IAAIc,KAAJ,CAAUG,KAAK,GAAG,CAAR,GAAYA,KAAK,GAAG,CAApB,GAAwB,CAAlC,CAArC,EAA2EC,KAAK,GAAG,CAAxF,EAA2FA,KAAK,GAAGD,KAAnG,EAA0GC,KAAK,EAA/G,EAAmH;AACjHlB,UAAAA,IAAI,CAACkB,KAAK,GAAG,CAAT,CAAJ,GAAkB9B,SAAS,CAAC8B,KAAD,CAA3B;AACD;;AACD2J,QAAAA,KAAK,CAACvI,IAAN,CAAWH,KAAX,EAAkB,GAAGnC,IAArB;AACD,OALD;AAMA,WAAKuZ,OAAL,CAAaC,QAAb,CAAsBhf,OAAtB,CAA8BC,CAAC,IAAI;AACjC,YAAIA,CAAC,CAACgG,IAAN,EAAYhG,CAAC,CAACgG,IAAF,CAAO,IAAP;AACb,OAFD;AAGD;;AACD,SAAKoQ,MAAL,GAAc,KAAKrQ,OAAL,CAAauF,aAAb,CAA2B8K,MAAzC;AACA,QAAI,CAACmG,QAAL,EAAeA,QAAQ,GAAGgC,IAAX;;AACf,QAAI,KAAKxY,OAAL,CAAaqJ,WAAb,IAA4B,CAAC,KAAKlE,QAAL,CAAcqU,gBAA3C,IAA+D,CAAC,KAAKxZ,OAAL,CAAa+C,GAAjF,EAAsF;AACpF,YAAM2I,KAAK,GAAG,KAAKvG,QAAL,CAAcgE,aAAd,CAA4BC,gBAA5B,CAA6C,KAAKpJ,OAAL,CAAaqJ,WAA1D,CAAd;AACA,UAAIqC,KAAK,CAAC5Q,MAAN,GAAe,CAAf,IAAoB4Q,KAAK,CAAC,CAAD,CAAL,KAAa,KAArC,EAA4C,KAAK1L,OAAL,CAAa+C,GAAb,GAAmB2I,KAAK,CAAC,CAAD,CAAxB;AAC7C;;AACD,QAAI,CAAC,KAAKvG,QAAL,CAAcqU,gBAAf,IAAmC,CAAC,KAAKxZ,OAAL,CAAa+C,GAArD,EAA0D;AACxD,WAAK5C,MAAL,CAAYT,IAAZ,CAAiB,yDAAjB;AACD;;AACD,UAAMga,QAAQ,GAAG,CAAC,aAAD,EAAgB,mBAAhB,EAAqC,mBAArC,EAA0D,mBAA1D,CAAjB;AACAA,IAAAA,QAAQ,CAAC1f,OAAT,CAAiBmd,MAAM,IAAI;AACzB,WAAKA,MAAL,IAAe,YAAY;AACzB,eAAO9M,KAAK,CAACyL,KAAN,CAAYqB,MAAZ,EAAoB,GAAGvY,SAAvB,CAAP;AACD,OAFD;AAGD,KAJD;AAKA,UAAM+a,eAAe,GAAG,CAAC,aAAD,EAAgB,cAAhB,EAAgC,mBAAhC,EAAqD,sBAArD,CAAxB;AACAA,IAAAA,eAAe,CAAC3f,OAAhB,CAAwBmd,MAAM,IAAI;AAChC,WAAKA,MAAL,IAAe,YAAY;AACzB9M,QAAAA,KAAK,CAACyL,KAAN,CAAYqB,MAAZ,EAAoB,GAAGvY,SAAvB;;AACA,eAAOyL,KAAP;AACD,OAHD;AAID,KALD;AAMA,UAAMuP,QAAQ,GAAGzgB,KAAK,EAAtB;;AACA,UAAMoU,IAAI,GAAG,MAAM;AACjB,YAAMsM,MAAM,GAAG,CAACrK,GAAD,EAAMzV,CAAN,KAAY;AACzB,aAAKof,cAAL,GAAsB,KAAtB;AACA,YAAI,KAAKF,aAAL,IAAsB,CAAC,KAAKa,oBAAhC,EAAsD,KAAK3Z,MAAL,CAAYT,IAAZ,CAAiB,uEAAjB;AACtD,aAAKuZ,aAAL,GAAqB,IAArB;AACA,YAAI,CAAC,KAAKjZ,OAAL,CAAakZ,OAAlB,EAA2B,KAAK/Y,MAAL,CAAYZ,GAAZ,CAAgB,aAAhB,EAA+B,KAAKS,OAApC;AAC3B,aAAK8B,IAAL,CAAU,aAAV,EAAyB,KAAK9B,OAA9B;AACA4Z,QAAAA,QAAQ,CAACpgB,OAAT,CAAiBO,CAAjB;AACAyc,QAAAA,QAAQ,CAAChH,GAAD,EAAMzV,CAAN,CAAR;AACD,OARD;;AASA,UAAI,KAAKwc,SAAL,IAAkB,CAAC,KAAK0C,aAA5B,EAA2C,OAAOY,MAAM,CAAC,IAAD,EAAO,KAAK9f,CAAL,CAAOyd,IAAP,CAAY,IAAZ,CAAP,CAAb;AAC3C,WAAKpS,cAAL,CAAoB,KAAKpF,OAAL,CAAa+C,GAAjC,EAAsC8W,MAAtC;AACD,KAZD;;AAaA,QAAI,KAAK7Z,OAAL,CAAaqD,SAAb,IAA0B,CAAC,KAAKrD,OAAL,CAAagY,SAA5C,EAAuD;AACrDzK,MAAAA,IAAI;AACL,KAFD,MAEO;AACLgK,MAAAA,UAAU,CAAChK,IAAD,EAAO,CAAP,CAAV;AACD;;AACD,WAAOqM,QAAP;AACD;;AACDG,EAAAA,aAAa,CAAC1U,QAAD,EAAW;AACtB,QAAImR,QAAQ,GAAG5X,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE4Z,IAAnF;AACA,QAAIwB,YAAY,GAAGxD,QAAnB;AACA,UAAM5P,OAAO,GAAG3N,QAAQ,CAACoM,QAAD,CAAR,GAAqBA,QAArB,GAAgC,KAAKA,QAArD;AACA,QAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC2U,YAAY,GAAG3U,QAAf;;AACpC,QAAI,CAAC,KAAKrF,OAAL,CAAaqD,SAAd,IAA2B,KAAKrD,OAAL,CAAamY,uBAA5C,EAAqE;AACnE,UAAIvR,OAAO,EAAEH,WAAT,OAA2B,QAA3B,KAAwC,CAAC,KAAKzG,OAAL,CAAaiY,OAAd,IAAyB,KAAKjY,OAAL,CAAaiY,OAAb,CAAqBnd,MAArB,KAAgC,CAAjG,CAAJ,EAAyG,OAAOkf,YAAY,EAAnB;AACzG,YAAMvD,MAAM,GAAG,EAAf;;AACA,YAAMwD,MAAM,GAAGlX,GAAG,IAAI;AACpB,YAAI,CAACA,GAAL,EAAU;AACV,YAAIA,GAAG,KAAK,QAAZ,EAAsB;AACtB,cAAMkG,IAAI,GAAG,KAAK9D,QAAL,CAAcgE,aAAd,CAA4BI,kBAA5B,CAA+CxG,GAA/C,CAAb;AACAkG,QAAAA,IAAI,CAACjP,OAAL,CAAayP,CAAC,IAAI;AAChB,cAAIA,CAAC,KAAK,QAAV,EAAoB;AACpB,cAAIgN,MAAM,CAACpc,OAAP,CAAeoP,CAAf,IAAoB,CAAxB,EAA2BgN,MAAM,CAAC5a,IAAP,CAAY4N,CAAZ;AAC5B,SAHD;AAID,OARD;;AASA,UAAI,CAAC7C,OAAL,EAAc;AACZ,cAAMiH,SAAS,GAAG,KAAK1I,QAAL,CAAcgE,aAAd,CAA4BC,gBAA5B,CAA6C,KAAKpJ,OAAL,CAAaqJ,WAA1D,CAAlB;AACAwE,QAAAA,SAAS,CAAC7T,OAAV,CAAkByP,CAAC,IAAIwQ,MAAM,CAACxQ,CAAD,CAA7B;AACD,OAHD,MAGO;AACLwQ,QAAAA,MAAM,CAACrT,OAAD,CAAN;AACD;;AACD,WAAK5G,OAAL,CAAaiY,OAAb,EAAsBje,OAAtB,GAAgCyP,CAAC,IAAIwQ,MAAM,CAACxQ,CAAD,CAA3C;AACA,WAAKtE,QAAL,CAAc0E,gBAAd,CAA+B0D,IAA/B,CAAoCkJ,MAApC,EAA4C,KAAKzW,OAAL,CAAauC,EAAzD,EAA6DhH,CAAC,IAAI;AAChE,YAAI,CAACA,CAAD,IAAM,CAAC,KAAK2e,gBAAZ,IAAgC,KAAK7U,QAAzC,EAAmD,KAAK8U,mBAAL,CAAyB,KAAK9U,QAA9B;AACnD2U,QAAAA,YAAY,CAACze,CAAD,CAAZ;AACD,OAHD;AAID,KAvBD,MAuBO;AACLye,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF;;AACDI,EAAAA,eAAe,CAACnR,IAAD,EAAO1G,EAAP,EAAWiU,QAAX,EAAqB;AAClC,UAAMoD,QAAQ,GAAGzgB,KAAK,EAAtB;;AACA,QAAI,OAAO8P,IAAP,KAAgB,UAApB,EAAgC;AAC9BuN,MAAAA,QAAQ,GAAGvN,IAAX;AACAA,MAAAA,IAAI,GAAG3N,SAAP;AACD;;AACD,QAAI,OAAOiH,EAAP,KAAc,UAAlB,EAA8B;AAC5BiU,MAAAA,QAAQ,GAAGjU,EAAX;AACAA,MAAAA,EAAE,GAAGjH,SAAL;AACD;;AACD,QAAI,CAAC2N,IAAL,EAAWA,IAAI,GAAG,KAAKsN,SAAZ;AACX,QAAI,CAAChU,EAAL,EAASA,EAAE,GAAG,KAAKvC,OAAL,CAAauC,EAAlB;AACT,QAAI,CAACiU,QAAL,EAAeA,QAAQ,GAAGgC,IAAX;AACf,SAAKrT,QAAL,CAAc0E,gBAAd,CAA+BgN,MAA/B,CAAsC5N,IAAtC,EAA4C1G,EAA5C,EAAgDiN,GAAG,IAAI;AACrDoK,MAAAA,QAAQ,CAACpgB,OAAT;AACAgd,MAAAA,QAAQ,CAAChH,GAAD,CAAR;AACD,KAHD;AAIA,WAAOoK,QAAP;AACD;;AACDS,EAAAA,GAAG,CAAC3V,MAAD,EAAS;AACV,QAAI,CAACA,MAAL,EAAa,MAAM,IAAI4V,KAAJ,CAAU,+FAAV,CAAN;AACb,QAAI,CAAC5V,MAAM,CAACpF,IAAZ,EAAkB,MAAM,IAAIgb,KAAJ,CAAU,0FAAV,CAAN;;AAClB,QAAI5V,MAAM,CAACpF,IAAP,KAAgB,SAApB,EAA+B;AAC7B,WAAKyZ,OAAL,CAAalD,OAAb,GAAuBnR,MAAvB;AACD;;AACD,QAAIA,MAAM,CAACpF,IAAP,KAAgB,QAAhB,IAA4BoF,MAAM,CAACnF,GAAP,IAAcmF,MAAM,CAAChF,IAArB,IAA6BgF,MAAM,CAAC/E,KAApE,EAA2E;AACzE,WAAKoZ,OAAL,CAAa5Y,MAAb,GAAsBuE,MAAtB;AACD;;AACD,QAAIA,MAAM,CAACpF,IAAP,KAAgB,kBAApB,EAAwC;AACtC,WAAKyZ,OAAL,CAAaS,gBAAb,GAAgC9U,MAAhC;AACD;;AACD,QAAIA,MAAM,CAACpF,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAKyZ,OAAL,CAAa1R,UAAb,GAA0B3C,MAA1B;AACD;;AACD,QAAIA,MAAM,CAACpF,IAAP,KAAgB,eAApB,EAAqC;AACnCiF,MAAAA,aAAa,CAACE,gBAAd,CAA+BC,MAA/B;AACD;;AACD,QAAIA,MAAM,CAACpF,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAKyZ,OAAL,CAAa1E,SAAb,GAAyB3P,MAAzB;AACD;;AACD,QAAIA,MAAM,CAACpF,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAKyZ,OAAL,CAAaC,QAAb,CAAsBnd,IAAtB,CAA2B6I,MAA3B;AACD;;AACD,WAAO,IAAP;AACD;;AACDyV,EAAAA,mBAAmB,CAAC1Q,CAAD,EAAI;AACrB,QAAI,CAACA,CAAD,IAAM,CAAC,KAAK8M,SAAhB,EAA2B;AAC3B,QAAI,CAAC,QAAD,EAAW,KAAX,EAAkBlc,OAAlB,CAA0BoP,CAA1B,IAA+B,CAAC,CAApC,EAAuC;;AACvC,SAAK,IAAI8Q,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG,KAAKhE,SAAL,CAAezb,MAArC,EAA6Cyf,EAAE,EAA/C,EAAmD;AACjD,YAAMC,SAAS,GAAG,KAAKjE,SAAL,CAAegE,EAAf,CAAlB;AACA,UAAI,CAAC,QAAD,EAAW,KAAX,EAAkBlgB,OAAlB,CAA0BmgB,SAA1B,IAAuC,CAAC,CAA5C,EAA+C;;AAC/C,UAAI,KAAK1E,KAAL,CAAW7R,2BAAX,CAAuCuW,SAAvC,CAAJ,EAAuD;AACrD,aAAKN,gBAAL,GAAwBM,SAAxB;AACA;AACD;AACF;AACF;;AACDpV,EAAAA,cAAc,CAACrC,GAAD,EAAMyT,QAAN,EAAgB;AAC5B,QAAIiE,MAAM,GAAG,IAAb;;AACA,SAAKC,oBAAL,GAA4B3X,GAA5B;AACA,UAAM6W,QAAQ,GAAGzgB,KAAK,EAAtB;AACA,SAAK2I,IAAL,CAAU,kBAAV,EAA8BiB,GAA9B;;AACA,UAAM4X,WAAW,GAAGlR,CAAC,IAAI;AACvB,WAAKpE,QAAL,GAAgBoE,CAAhB;AACA,WAAK8M,SAAL,GAAiB,KAAKpR,QAAL,CAAcgE,aAAd,CAA4BI,kBAA5B,CAA+CE,CAA/C,CAAjB;AACA,WAAKyQ,gBAAL,GAAwB5e,SAAxB;AACA,WAAK6e,mBAAL,CAAyB1Q,CAAzB;AACD,KALD;;AAMA,UAAMuN,IAAI,GAAG,CAACxH,GAAD,EAAM/F,CAAN,KAAY;AACvB,UAAIA,CAAJ,EAAO;AACLkR,QAAAA,WAAW,CAAClR,CAAD,CAAX;AACA,aAAK5E,UAAL,CAAgBO,cAAhB,CAA+BqE,CAA/B;AACA,aAAKiR,oBAAL,GAA4Bpf,SAA5B;AACA,aAAKwG,IAAL,CAAU,iBAAV,EAA6B2H,CAA7B;AACA,aAAKtJ,MAAL,CAAYZ,GAAZ,CAAgB,iBAAhB,EAAmCkK,CAAnC;AACD,OAND,MAMO;AACL,aAAKiR,oBAAL,GAA4Bpf,SAA5B;AACD;;AACDse,MAAAA,QAAQ,CAACpgB,OAAT,CAAiB,YAAY;AAC3B,eAAOihB,MAAM,CAAC1gB,CAAP,CAAS,GAAG6E,SAAZ,CAAP;AACD,OAFD;AAGA,UAAI4X,QAAJ,EAAcA,QAAQ,CAAChH,GAAD,EAAM,YAAY;AACtC,eAAOiL,MAAM,CAAC1gB,CAAP,CAAS,GAAG6E,SAAZ,CAAP;AACD,OAFqB,CAAR;AAGf,KAhBD;;AAiBA,UAAMgc,MAAM,GAAG3R,IAAI,IAAI;AACrB,UAAI,CAAClG,GAAD,IAAQ,CAACkG,IAAT,IAAiB,KAAK9D,QAAL,CAAcqU,gBAAnC,EAAqDvQ,IAAI,GAAG,EAAP;AACrD,YAAMQ,CAAC,GAAGxQ,QAAQ,CAACgQ,IAAD,CAAR,GAAiBA,IAAjB,GAAwB,KAAK9D,QAAL,CAAcgE,aAAd,CAA4BsE,qBAA5B,CAAkDxE,IAAlD,CAAlC;;AACA,UAAIQ,CAAJ,EAAO;AACL,YAAI,CAAC,KAAKpE,QAAV,EAAoB;AAClBsV,UAAAA,WAAW,CAAClR,CAAD,CAAX;AACD;;AACD,YAAI,CAAC,KAAK5E,UAAL,CAAgBQ,QAArB,EAA+B,KAAKR,UAAL,CAAgBO,cAAhB,CAA+BqE,CAA/B;AAC/B,aAAKtE,QAAL,CAAcqU,gBAAd,EAAgCqB,iBAAhC,GAAoDpR,CAApD;AACD;;AACD,WAAKsQ,aAAL,CAAmBtQ,CAAnB,EAAsB+F,GAAG,IAAI;AAC3BwH,QAAAA,IAAI,CAACxH,GAAD,EAAM/F,CAAN,CAAJ;AACD,OAFD;AAGD,KAbD;;AAcA,QAAI,CAAC1G,GAAD,IAAQ,KAAKoC,QAAL,CAAcqU,gBAAtB,IAA0C,CAAC,KAAKrU,QAAL,CAAcqU,gBAAd,CAA+BsB,KAA9E,EAAqF;AACnFF,MAAAA,MAAM,CAAC,KAAKzV,QAAL,CAAcqU,gBAAd,CAA+BuB,MAA/B,EAAD,CAAN;AACD,KAFD,MAEO,IAAI,CAAChY,GAAD,IAAQ,KAAKoC,QAAL,CAAcqU,gBAAtB,IAA0C,KAAKrU,QAAL,CAAcqU,gBAAd,CAA+BsB,KAA7E,EAAoF;AACzF,UAAI,KAAK3V,QAAL,CAAcqU,gBAAd,CAA+BuB,MAA/B,CAAsCjgB,MAAtC,KAAiD,CAArD,EAAwD;AACtD,aAAKqK,QAAL,CAAcqU,gBAAd,CAA+BuB,MAA/B,GAAwCtD,IAAxC,CAA6CmD,MAA7C;AACD,OAFD,MAEO;AACL,aAAKzV,QAAL,CAAcqU,gBAAd,CAA+BuB,MAA/B,CAAsCH,MAAtC;AACD;AACF,KANM,MAMA;AACLA,MAAAA,MAAM,CAAC7X,GAAD,CAAN;AACD;;AACD,WAAO6W,QAAP;AACD;;AACDoB,EAAAA,SAAS,CAACjY,GAAD,EAAMR,EAAN,EAAU0Y,SAAV,EAAqB;AAC5B,QAAIC,MAAM,GAAG,IAAb;;AACA,UAAMC,MAAM,GAAG,UAAU/gB,GAAV,EAAesZ,IAAf,EAAqB;AAClC,UAAI1T,OAAJ;;AACA,UAAI,OAAO0T,IAAP,KAAgB,QAApB,EAA8B;AAC5B,aAAK,IAAI/S,KAAK,GAAG/B,SAAS,CAAC9D,MAAtB,EAA8B8Y,IAAI,GAAG,IAAItT,KAAJ,CAAUK,KAAK,GAAG,CAAR,GAAYA,KAAK,GAAG,CAApB,GAAwB,CAAlC,CAArC,EAA2EC,KAAK,GAAG,CAAxF,EAA2FA,KAAK,GAAGD,KAAnG,EAA0GC,KAAK,EAA/G,EAAmH;AACjHgT,UAAAA,IAAI,CAAChT,KAAK,GAAG,CAAT,CAAJ,GAAkBhC,SAAS,CAACgC,KAAD,CAA3B;AACD;;AACDZ,QAAAA,OAAO,GAAGkb,MAAM,CAAClb,OAAP,CAAeqG,gCAAf,CAAgD,CAACjM,GAAD,EAAMsZ,IAAN,EAAY9X,MAAZ,CAAmBgY,IAAnB,CAAhD,CAAV;AACD,OALD,MAKO;AACL5T,QAAAA,OAAO,GAAG,EACR,GAAG0T;AADK,SAAV;AAGD;;AACD1T,MAAAA,OAAO,CAAC+C,GAAR,GAAc/C,OAAO,CAAC+C,GAAR,IAAeoY,MAAM,CAACpY,GAApC;AACA/C,MAAAA,OAAO,CAACiJ,IAAR,GAAejJ,OAAO,CAACiJ,IAAR,IAAgBkS,MAAM,CAAClS,IAAtC;AACAjJ,MAAAA,OAAO,CAACuC,EAAR,GAAavC,OAAO,CAACuC,EAAR,IAAc4Y,MAAM,CAAC5Y,EAAlC;AACA,UAAIvC,OAAO,CAACib,SAAR,KAAsB,EAA1B,EAA8Bjb,OAAO,CAACib,SAAR,GAAoBjb,OAAO,CAACib,SAAR,IAAqBA,SAArB,IAAkCE,MAAM,CAACF,SAA7D;AAC9B,YAAMjd,YAAY,GAAGkd,MAAM,CAAClb,OAAP,CAAehC,YAAf,IAA+B,GAApD;AACA,UAAIod,SAAJ;;AACA,UAAIpb,OAAO,CAACib,SAAR,IAAqB3a,KAAK,CAAC0C,OAAN,CAAc5I,GAAd,CAAzB,EAA6C;AAC3CghB,QAAAA,SAAS,GAAGhhB,GAAG,CAACiE,GAAJ,CAAQlD,CAAC,IAAK,GAAE6E,OAAO,CAACib,SAAU,GAAEjd,YAAa,GAAE7C,CAAE,EAArD,CAAZ;AACD,OAFD,MAEO;AACLigB,QAAAA,SAAS,GAAGpb,OAAO,CAACib,SAAR,GAAqB,GAAEjb,OAAO,CAACib,SAAU,GAAEjd,YAAa,GAAE5D,GAAI,EAA9D,GAAkEA,GAA9E;AACD;;AACD,aAAO8gB,MAAM,CAACnhB,CAAP,CAASqhB,SAAT,EAAoBpb,OAApB,CAAP;AACD,KAxBD;;AAyBA,QAAI/G,QAAQ,CAAC8J,GAAD,CAAZ,EAAmB;AACjBoY,MAAAA,MAAM,CAACpY,GAAP,GAAaA,GAAb;AACD,KAFD,MAEO;AACLoY,MAAAA,MAAM,CAAClS,IAAP,GAAclG,GAAd;AACD;;AACDoY,IAAAA,MAAM,CAAC5Y,EAAP,GAAYA,EAAZ;AACA4Y,IAAAA,MAAM,CAACF,SAAP,GAAmBA,SAAnB;AACA,WAAOE,MAAP;AACD;;AACDphB,EAAAA,CAAC,GAAG;AACF,SAAK,IAAI+G,KAAK,GAAGlC,SAAS,CAAC9D,MAAtB,EAA8B0E,IAAI,GAAG,IAAIc,KAAJ,CAAUQ,KAAV,CAArC,EAAuDC,KAAK,GAAG,CAApE,EAAuEA,KAAK,GAAGD,KAA/E,EAAsFC,KAAK,EAA3F,EAA+F;AAC7FvB,MAAAA,IAAI,CAACuB,KAAD,CAAJ,GAAcnC,SAAS,CAACmC,KAAD,CAAvB;AACD;;AACD,WAAO,KAAK8D,UAAL,EAAiBsB,SAAjB,CAA2B,GAAG3G,IAA9B,CAAP;AACD;;AACD8F,EAAAA,MAAM,GAAG;AACP,SAAK,IAAI+V,KAAK,GAAGzc,SAAS,CAAC9D,MAAtB,EAA8B0E,IAAI,GAAG,IAAIc,KAAJ,CAAU+a,KAAV,CAArC,EAAuDC,KAAK,GAAG,CAApE,EAAuEA,KAAK,GAAGD,KAA/E,EAAsFC,KAAK,EAA3F,EAA+F;AAC7F9b,MAAAA,IAAI,CAAC8b,KAAD,CAAJ,GAAc1c,SAAS,CAAC0c,KAAD,CAAvB;AACD;;AACD,WAAO,KAAKzW,UAAL,EAAiBS,MAAjB,CAAwB,GAAG9F,IAA3B,CAAP;AACD;;AACD+b,EAAAA,mBAAmB,CAAChZ,EAAD,EAAK;AACtB,SAAKvC,OAAL,CAAawC,SAAb,GAAyBD,EAAzB;AACD;;AACDqJ,EAAAA,kBAAkB,CAACrJ,EAAD,EAAK;AACrB,QAAIvC,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;;AACA,QAAI,CAAC,KAAKqa,aAAV,EAAyB;AACvB,WAAK9Y,MAAL,CAAYT,IAAZ,CAAiB,iDAAjB,EAAoE,KAAK6W,SAAzE;AACA,aAAO,KAAP;AACD;;AACD,QAAI,CAAC,KAAKA,SAAN,IAAmB,CAAC,KAAKA,SAAL,CAAezb,MAAvC,EAA+C;AAC7C,WAAKqF,MAAL,CAAYT,IAAZ,CAAiB,4DAAjB,EAA+E,KAAK6W,SAApF;AACA,aAAO,KAAP;AACD;;AACD,UAAMxT,GAAG,GAAG/C,OAAO,CAAC+C,GAAR,IAAe,KAAKmX,gBAApB,IAAwC,KAAK3D,SAAL,CAAe,CAAf,CAApD;AACA,UAAMlN,WAAW,GAAG,KAAKrJ,OAAL,GAAe,KAAKA,OAAL,CAAaqJ,WAA5B,GAA0C,KAA9D;AACA,UAAMmS,OAAO,GAAG,KAAKjF,SAAL,CAAe,KAAKA,SAAL,CAAezb,MAAf,GAAwB,CAAvC,CAAhB;AACA,QAAIiI,GAAG,CAAC0D,WAAJ,OAAsB,QAA1B,EAAoC,OAAO,IAAP;;AACpC,UAAMgV,cAAc,GAAG,CAAChS,CAAD,EAAIvF,CAAJ,KAAU;AAC/B,YAAMwX,SAAS,GAAG,KAAKvW,QAAL,CAAc0E,gBAAd,CAA+BuM,KAA/B,CAAsC,GAAE3M,CAAE,IAAGvF,CAAE,EAA/C,CAAlB;AACA,aAAOwX,SAAS,KAAK,CAAC,CAAf,IAAoBA,SAAS,KAAK,CAAlC,IAAuCA,SAAS,KAAK,CAA5D;AACD,KAHD;;AAIA,QAAI1b,OAAO,CAAC2b,QAAZ,EAAsB;AACpB,YAAMC,SAAS,GAAG5b,OAAO,CAAC2b,QAAR,CAAiB,IAAjB,EAAuBF,cAAvB,CAAlB;AACA,UAAIG,SAAS,KAAKtgB,SAAlB,EAA6B,OAAOsgB,SAAP;AAC9B;;AACD,QAAI,KAAK9X,iBAAL,CAAuBf,GAAvB,EAA4BR,EAA5B,CAAJ,EAAqC,OAAO,IAAP;AACrC,QAAI,CAAC,KAAK4C,QAAL,CAAc0E,gBAAd,CAA+BgM,OAAhC,IAA2C,KAAK7V,OAAL,CAAaqD,SAAb,IAA0B,CAAC,KAAKrD,OAAL,CAAamY,uBAAvF,EAAgH,OAAO,IAAP;AAChH,QAAIsD,cAAc,CAAC1Y,GAAD,EAAMR,EAAN,CAAd,KAA4B,CAAC8G,WAAD,IAAgBoS,cAAc,CAACD,OAAD,EAAUjZ,EAAV,CAA1D,CAAJ,EAA8E,OAAO,IAAP;AAC9E,WAAO,KAAP;AACD;;AACDsZ,EAAAA,cAAc,CAACtZ,EAAD,EAAKiU,QAAL,EAAe;AAC3B,UAAMoD,QAAQ,GAAGzgB,KAAK,EAAtB;;AACA,QAAI,CAAC,KAAK6G,OAAL,CAAauC,EAAlB,EAAsB;AACpB,UAAIiU,QAAJ,EAAcA,QAAQ;AACtB,aAAOjd,OAAO,CAACC,OAAR,EAAP;AACD;;AACD,QAAIP,QAAQ,CAACsJ,EAAD,CAAZ,EAAkBA,EAAE,GAAG,CAACA,EAAD,CAAL;AAClBA,IAAAA,EAAE,CAACvI,OAAH,CAAWkK,CAAC,IAAI;AACd,UAAI,KAAKlE,OAAL,CAAauC,EAAb,CAAgBlI,OAAhB,CAAwB6J,CAAxB,IAA6B,CAAjC,EAAoC,KAAKlE,OAAL,CAAauC,EAAb,CAAgB1G,IAAhB,CAAqBqI,CAArB;AACrC,KAFD;AAGA,SAAK6V,aAAL,CAAmBvK,GAAG,IAAI;AACxBoK,MAAAA,QAAQ,CAACpgB,OAAT;AACA,UAAIgd,QAAJ,EAAcA,QAAQ,CAAChH,GAAD,CAAR;AACf,KAHD;AAIA,WAAOoK,QAAP;AACD;;AACDkC,EAAAA,aAAa,CAAC7S,IAAD,EAAOuN,QAAP,EAAiB;AAC5B,UAAMoD,QAAQ,GAAGzgB,KAAK,EAAtB;AACA,QAAIF,QAAQ,CAACgQ,IAAD,CAAZ,EAAoBA,IAAI,GAAG,CAACA,IAAD,CAAP;AACpB,UAAM8S,SAAS,GAAG,KAAK/b,OAAL,CAAaiY,OAAb,IAAwB,EAA1C;AACA,UAAM+D,OAAO,GAAG/S,IAAI,CAAC/K,MAAL,CAAY6E,GAAG,IAAIgZ,SAAS,CAAC1hB,OAAV,CAAkB0I,GAAlB,IAAyB,CAAzB,IAA8B,KAAKoC,QAAL,CAAcgE,aAAd,CAA4BmE,eAA5B,CAA4CvK,GAA5C,CAAjD,CAAhB;;AACA,QAAI,CAACiZ,OAAO,CAAClhB,MAAb,EAAqB;AACnB,UAAI0b,QAAJ,EAAcA,QAAQ;AACtB,aAAOjd,OAAO,CAACC,OAAR,EAAP;AACD;;AACD,SAAKwG,OAAL,CAAaiY,OAAb,GAAuB8D,SAAS,CAACngB,MAAV,CAAiBogB,OAAjB,CAAvB;AACA,SAAKjC,aAAL,CAAmBvK,GAAG,IAAI;AACxBoK,MAAAA,QAAQ,CAACpgB,OAAT;AACA,UAAIgd,QAAJ,EAAcA,QAAQ,CAAChH,GAAD,CAAR;AACf,KAHD;AAIA,WAAOoK,QAAP;AACD;;AACDqC,EAAAA,GAAG,CAAClZ,GAAD,EAAM;AACP,QAAI,CAACA,GAAL,EAAUA,GAAG,GAAG,KAAKmX,gBAAL,KAA0B,KAAK3D,SAAL,EAAgBzb,MAAhB,GAAyB,CAAzB,GAA6B,KAAKyb,SAAL,CAAe,CAAf,CAA7B,GAAiD,KAAKlR,QAAhF,CAAN;AACV,QAAI,CAACtC,GAAL,EAAU,OAAO,KAAP;AACV,UAAMmZ,OAAO,GAAG,CAAC,IAAD,EAAO,KAAP,EAAc,KAAd,EAAqB,KAArB,EAA4B,KAA5B,EAAmC,KAAnC,EAA0C,KAA1C,EAAiD,KAAjD,EAAwD,KAAxD,EAA+D,KAA/D,EAAsE,KAAtE,EAA6E,KAA7E,EAAoF,KAApF,EAA2F,KAA3F,EAAkG,KAAlG,EAAyG,KAAzG,EAAgH,KAAhH,EAAuH,KAAvH,EAA8H,KAA9H,EAAqI,KAArI,EAA4I,KAA5I,EAAmJ,KAAnJ,EAA0J,KAA1J,EAAiK,KAAjK,EAAwK,KAAxK,EAA+K,KAA/K,EAAsL,KAAtL,EAA6L,KAA7L,EAAoM,KAApM,EAA2M,KAA3M,EAAkN,KAAlN,EAAyN,KAAzN,EAAgO,KAAhO,EAAuO,KAAvO,EAA8O,KAA9O,EAAqP,KAArP,EAA4P,IAA5P,EAAkQ,IAAlQ,EAAwQ,IAAxQ,EAA8Q,KAA9Q,EAAqR,KAArR,EAA4R,KAA5R,EAAmS,KAAnS,EAA0S,KAA1S,EAAiT,IAAjT,EAAuT,IAAvT,EAA6T,KAA7T,EAAoU,KAApU,EAA2U,KAA3U,EAAkV,IAAlV,EAAwV,IAAxV,EAA8V,KAA9V,EAAqW,KAArW,EAA4W,KAA5W,EAAmX,IAAnX,EAAyX,KAAzX,EAAgY,KAAhY,EAAuY,KAAvY,EAA8Y,KAA9Y,EAAqZ,IAArZ,EAA2Z,KAA3Z,EAAka,KAAla,CAAhB;AACA,UAAM/S,aAAa,GAAG,KAAKhE,QAAL,EAAegE,aAAf,IAAgC,IAAIyD,YAAJ,CAAiBtP,GAAG,EAApB,CAAtD;AACA,WAAO4e,OAAO,CAAC7hB,OAAR,CAAgB8O,aAAa,CAAC6D,uBAAd,CAAsCjK,GAAtC,CAAhB,IAA8D,CAAC,CAA/D,IAAoEA,GAAG,CAAC0D,WAAJ,GAAkBpM,OAAlB,CAA0B,OAA1B,IAAqC,CAAzG,GAA6G,KAA7G,GAAqH,KAA5H;AACD;;AACoB,SAAd8hB,cAAc,GAAG;AACtB,QAAInc,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,QAAI4X,QAAQ,GAAG5X,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,GAAuB8D,SAAS,CAAC,CAAD,CAAhC,GAAsCtD,SAArD;AACA,WAAO,IAAIwd,IAAJ,CAAS9Y,OAAT,EAAkBwW,QAAlB,CAAP;AACD;;AACD4F,EAAAA,aAAa,GAAG;AACd,QAAIpc,OAAO,GAAGpB,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,QAAI4X,QAAQ,GAAG5X,SAAS,CAAC9D,MAAV,GAAmB,CAAnB,IAAwB8D,SAAS,CAAC,CAAD,CAAT,KAAiBtD,SAAzC,GAAqDsD,SAAS,CAAC,CAAD,CAA9D,GAAoE4Z,IAAnF;AACA,UAAM6D,iBAAiB,GAAGrc,OAAO,CAACqc,iBAAlC;AACA,QAAIA,iBAAJ,EAAuB,OAAOrc,OAAO,CAACqc,iBAAf;AACvB,UAAMC,aAAa,GAAG,EACpB,GAAG,KAAKtc,OADY;AAEpB,SAAGA,OAFiB;AAGpB,SAAG;AACDkZ,QAAAA,OAAO,EAAE;AADR;AAHiB,KAAtB;AAOA,UAAM9X,KAAK,GAAG,IAAI0X,IAAJ,CAASwD,aAAT,CAAd;;AACA,QAAItc,OAAO,CAACI,KAAR,KAAkB9E,SAAlB,IAA+B0E,OAAO,CAACE,MAAR,KAAmB5E,SAAtD,EAAiE;AAC/D8F,MAAAA,KAAK,CAACjB,MAAN,GAAeiB,KAAK,CAACjB,MAAN,CAAaiB,KAAb,CAAmBpB,OAAnB,CAAf;AACD;;AACD,UAAMuc,aAAa,GAAG,CAAC,OAAD,EAAU,UAAV,EAAsB,UAAtB,CAAtB;AACAA,IAAAA,aAAa,CAACviB,OAAd,CAAsBC,CAAC,IAAI;AACzBmH,MAAAA,KAAK,CAACnH,CAAD,CAAL,GAAW,KAAKA,CAAL,CAAX;AACD,KAFD;AAGAmH,IAAAA,KAAK,CAAC+D,QAAN,GAAiB,EACf,GAAG,KAAKA;AADO,KAAjB;AAGA/D,IAAAA,KAAK,CAAC+D,QAAN,CAAewG,KAAf,GAAuB;AACrBC,MAAAA,kBAAkB,EAAExK,KAAK,CAACwK,kBAAN,CAAyB4L,IAAzB,CAA8BpW,KAA9B;AADC,KAAvB;;AAGA,QAAIib,iBAAJ,EAAuB;AACrB,YAAMG,UAAU,GAAGzhB,MAAM,CAACoJ,IAAP,CAAY,KAAK2R,KAAL,CAAW9Z,IAAvB,EAA6BkX,MAA7B,CAAoC,CAACuJ,IAAD,EAAOhT,CAAP,KAAa;AAClEgT,QAAAA,IAAI,CAAChT,CAAD,CAAJ,GAAU,EACR,GAAG,KAAKqM,KAAL,CAAW9Z,IAAX,CAAgByN,CAAhB;AADK,SAAV;AAGA,eAAO1O,MAAM,CAACoJ,IAAP,CAAYsY,IAAI,CAAChT,CAAD,CAAhB,EAAqByJ,MAArB,CAA4B,CAACwJ,GAAD,EAAMxY,CAAN,KAAY;AAC7CwY,UAAAA,GAAG,CAACxY,CAAD,CAAH,GAAS,EACP,GAAGuY,IAAI,CAAChT,CAAD,CAAJ,CAAQvF,CAAR;AADI,WAAT;AAGA,iBAAOwY,GAAP;AACD,SALM,EAKJ,EALI,CAAP;AAMD,OAVkB,EAUhB,EAVgB,CAAnB;AAWAtb,MAAAA,KAAK,CAAC0U,KAAN,GAAc,IAAIxT,aAAJ,CAAkBka,UAAlB,EAA8BF,aAA9B,CAAd;AACAlb,MAAAA,KAAK,CAAC+D,QAAN,CAAeqH,aAAf,GAA+BpL,KAAK,CAAC0U,KAArC;AACD;;AACD1U,IAAAA,KAAK,CAACyD,UAAN,GAAmB,IAAIK,UAAJ,CAAe9D,KAAK,CAAC+D,QAArB,EAA+BmX,aAA/B,CAAnB;AACAlb,IAAAA,KAAK,CAACyD,UAAN,CAAiBrD,EAAjB,CAAoB,GAApB,EAAyB,UAAUG,KAAV,EAAiB;AACxC,WAAK,IAAIgb,KAAK,GAAG/d,SAAS,CAAC9D,MAAtB,EAA8B0E,IAAI,GAAG,IAAIc,KAAJ,CAAUqc,KAAK,GAAG,CAAR,GAAYA,KAAK,GAAG,CAApB,GAAwB,CAAlC,CAArC,EAA2EC,KAAK,GAAG,CAAxF,EAA2FA,KAAK,GAAGD,KAAnG,EAA0GC,KAAK,EAA/G,EAAmH;AACjHpd,QAAAA,IAAI,CAACod,KAAK,GAAG,CAAT,CAAJ,GAAkBhe,SAAS,CAACge,KAAD,CAA3B;AACD;;AACDxb,MAAAA,KAAK,CAACU,IAAN,CAAWH,KAAX,EAAkB,GAAGnC,IAArB;AACD,KALD;AAMA4B,IAAAA,KAAK,CAACnB,IAAN,CAAWqc,aAAX,EAA0B9F,QAA1B;AACApV,IAAAA,KAAK,CAACyD,UAAN,CAAiB7E,OAAjB,GAA2Bsc,aAA3B;AACAlb,IAAAA,KAAK,CAACyD,UAAN,CAAiBgF,gBAAjB,CAAkC1E,QAAlC,CAA2CwG,KAA3C,GAAmD;AACjDC,MAAAA,kBAAkB,EAAExK,KAAK,CAACwK,kBAAN,CAAyB4L,IAAzB,CAA8BpW,KAA9B;AAD6B,KAAnD;AAGA,WAAOA,KAAP;AACD;;AACDkD,EAAAA,MAAM,GAAG;AACP,WAAO;AACLtE,MAAAA,OAAO,EAAE,KAAKA,OADT;AAEL8V,MAAAA,KAAK,EAAE,KAAKA,KAFP;AAGLzQ,MAAAA,QAAQ,EAAE,KAAKA,QAHV;AAILkR,MAAAA,SAAS,EAAE,KAAKA,SAJX;AAKL2D,MAAAA,gBAAgB,EAAE,KAAKA;AALlB,KAAP;AAOD;;AAxe6B;;AA0ehC,MAAM2C,QAAQ,GAAG/D,IAAI,CAACqD,cAAL,EAAjB;AACAU,QAAQ,CAACV,cAAT,GAA0BrD,IAAI,CAACqD,cAA/B;AAEA,MAAMA,cAAc,GAAGU,QAAQ,CAACV,cAAhC;AACA,MAAMF,GAAG,GAAGY,QAAQ,CAACZ,GAArB;AACA,MAAMhc,IAAI,GAAG4c,QAAQ,CAAC5c,IAAtB;AACA,MAAM8Z,aAAa,GAAG8C,QAAQ,CAAC9C,aAA/B;AACA,MAAMK,eAAe,GAAGyC,QAAQ,CAACzC,eAAjC;AACA,MAAMC,GAAG,GAAGwC,QAAQ,CAACxC,GAArB;AACA,MAAMjV,cAAc,GAAGyX,QAAQ,CAACzX,cAAhC;AACA,MAAM4V,SAAS,GAAG6B,QAAQ,CAAC7B,SAA3B;AACA,MAAMjhB,CAAC,GAAG8iB,QAAQ,CAAC9iB,CAAnB;AACA,MAAMuL,MAAM,GAAGuX,QAAQ,CAACvX,MAAxB;AACA,MAAMiW,mBAAmB,GAAGsB,QAAQ,CAACtB,mBAArC;AACA,MAAM3P,kBAAkB,GAAGiR,QAAQ,CAACjR,kBAApC;AACA,MAAMiQ,cAAc,GAAGgB,QAAQ,CAAChB,cAAhC;AACA,MAAMC,aAAa,GAAGe,QAAQ,CAACf,aAA/B;AAEA,SAAS1W,cAAT,EAAyB+W,cAAzB,EAAyCU,QAAQ,IAAI/O,OAArD,EAA8DmO,GAA9D,EAAmE3W,MAAnE,EAA2E0V,SAA3E,EAAsFpP,kBAAtF,EAA0G3L,IAA1G,EAAgH6b,aAAhH,EAA+HD,cAA/H,EAA+I9B,aAA/I,EAA8JK,eAA9J,EAA+KmB,mBAA/K,EAAoMxhB,CAApM,EAAuMsgB,GAAvM","sourcesContent":["const isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = function (obj, path) {\n  let keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n  if (obj[path]) {\n    if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n    return obj[path];\n  }\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code?.replace('_', '-');\n\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    console?.[type]?.apply?.(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return this.forward(args, 'log', '', true);\n  }\n  warn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return this.forward(args, 'warn', '', true);\n  }\n  error() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    return this.forward(args, 'error', '');\n  }\n  deprecate() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(_ref => {\n        let [observer, numTimesAdded] = _ref;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(_ref2 => {\n        let [observer, numTimesAdded] = _ref2;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      silent: false\n    };\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n      silent: false\n    };\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n      silent: false,\n      skipCopy: false\n    };\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n    });\n    return value;\n  }\n};\n\nconst checkedLoadedFor = {};\nconst shouldHandleAsObject = res => !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\nclass Translator extends EventEmitter {\n  constructor(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    if (key == null) {\n      return false;\n    }\n    const resolved = this.resolve(key, options);\n    return resolved?.res !== undefined;\n  }\n  extractFromKey(key, options) {\n    let nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let namespaces = options.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, options, lastKey) {\n    if (typeof options !== 'object' && this.options.overloadTranslationOptionHandler) {\n      options = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof options === 'object') options = {\n      ...options\n    };\n    if (!options) options = {};\n    if (keys == null) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], options);\n    const namespace = namespaces[namespaces.length - 1];\n    const lng = options.lng || this.language;\n    const appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng?.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        const nsSeparator = options.nsSeparator || this.options.nsSeparator;\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(options)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(options)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, options);\n    let res = resolved?.res;\n    const resUsedKey = resolved?.usedKey || key;\n    const resExactUsedKey = resolved?.exactUsedKey || key;\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const needsPluralHandling = options.count !== undefined && !isString(options.count);\n    const hasDefaultValue = Translator.hasDefaultValue(options);\n    const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : '';\n    const defaultValueSuffixOrdinalFallback = options.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, {\n      ordinal: false\n    }) : '';\n    const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;\n    const defaultValue = needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] || options[`defaultValue${defaultValueSuffix}`] || options[`defaultValue${defaultValueSuffixOrdinalFallback}`] || options.defaultValue;\n    let resForObjHndl = res;\n    if (handleAsObjectInI18nFormat && !res && hasDefaultValue) {\n      resForObjHndl = defaultValue;\n    }\n    const handleAsObject = shouldHandleAsObject(resForObjHndl);\n    const resType = Object.prototype.toString.apply(resForObjHndl);\n    if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {\n      if (!options.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, {\n          ...options,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(options);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(resForObjHndl);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in resForObjHndl) {\n          if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            if (hasDefaultValue && !res) {\n              copy[m] = this.translate(deepKey, {\n                ...options,\n                defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            } else {\n              copy[m] = this.translate(deepKey, {\n                ...options,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            }\n            if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, options, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...options,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n        } else {\n          lngs.push(options.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);\n          } else if (this.backendConnector?.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, options);\n              if (needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, options[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, options, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = `${namespace}:${key}`;\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}:${key}` : key, usedDefault ? res : undefined);\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(options);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, options, resolved, lastKey) {\n    var _this = this;\n    if (this.i18nFormat?.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...options\n      }, options.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!options.skipInterpolation) {\n      if (options.interpolation) this.interpolator.init({\n        ...options,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...options.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = options.replace && !isString(options.replace) ? options.replace : options;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, options.lng || this.language || resolved.usedLng, options);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) options.nest = false;\n      }\n      if (!options.lng && resolved && resolved.res) options.lng = this.language || resolved.usedLng;\n      if (options.nest !== false) res = this.interpolator.nest(res, function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (lastKey?.[0] === args[0] && !options.context) {\n          _this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return _this.translate(...args, key);\n      }, options);\n      if (options.interpolation) this.interpolator.reset();\n    }\n    const postProcess = options.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res != null && postProcessorNames?.length && options.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(options)\n        },\n        ...options\n      } : options, this);\n    }\n    return res;\n  }\n  resolve(keys) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, options);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = options.count !== undefined && !isString(options.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;\n      const needsContextHandling = options.context !== undefined && (isString(options.context) || typeof options.context === 'number') && options.context !== '';\n      const codes = options.lngs ? options.lngs : this.languageUtils.toResolveHierarchy(options.lng || this.language, options.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat?.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, options.count, options);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              finalKeys.push(key + pluralSuffix);\n              if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator}${options.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                finalKeys.push(contextKey + pluralSuffix);\n                if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, options);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      let formattedCode;\n      try {\n        formattedCode = Intl.getCanonicalLocales(code)[0];\n      } catch (e) {}\n      if (formattedCode && this.options.lowerCaseLng) {\n        formattedCode = formattedCode.toLowerCase();\n      }\n      if (formattedCode) return formattedCode;\n      if (this.options.lowerCaseLng) {\n        return code.toLowerCase();\n      }\n      return code;\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst dummyRule = {\n  select: count => count === 1 ? 'one' : 'other',\n  resolvedOptions: () => ({\n    pluralCategories: ['one', 'other']\n  })\n};\nclass PluralResolver {\n  constructor(languageUtils) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n    const type = options.ordinal ? 'ordinal' : 'cardinal';\n    const cacheKey = JSON.stringify({\n      cleanedCode,\n      type\n    });\n    if (cacheKey in this.pluralRulesCache) {\n      return this.pluralRulesCache[cacheKey];\n    }\n    let rule;\n    try {\n      rule = new Intl.PluralRules(cleanedCode, {\n        type\n      });\n    } catch (err) {\n      if (!Intl) {\n        this.logger.error('No Intl support, please use an Intl polyfill!');\n        return dummyRule;\n      }\n      if (!code.match(/-|_/)) return dummyRule;\n      const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n      rule = this.getRule(lngPart, options);\n    }\n    this.pluralRulesCache[cacheKey] = rule;\n    return rule;\n  }\n  needsPlural(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    return rule?.resolvedOptions().pluralCategories.length > 1;\n  }\n  getPluralFormsOfKey(code, key) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    if (!rule) return [];\n    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n  }\n  getSuffix(code, count) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const rule = this.getRule(code, options);\n    if (rule) {\n      return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return this.getSuffix('dev', count, options);\n  }\n}\n\nconst deepFindWithDefaults = function (data, defaultData, key) {\n  let keySeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n  let ignoreJSONStructure = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options?.interpolation?.format || (value => value);\n    this.init(options);\n  }\n  init() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp?.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      let doReduce = false;\n      if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n        const r = match[1].split(this.formatSeparator).map(elem => elem.trim());\n        match[1] = r.shift();\n        formatters = r;\n        doReduce = true;\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (doReduce) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (val, lng, options) => {\n    let optForCache = options;\n    if (options && options.interpolationkey && options.formatParams && options.formatParams[options.interpolationkey] && options[options.interpolationkey]) {\n      optForCache = {\n        ...optForCache,\n        [options.interpolationkey]: undefined\n      };\n    }\n    const key = lng + JSON.stringify(optForCache);\n    let formatter = cache[key];\n    if (!formatter) {\n      formatter = fn(getCleanedCode(lng), options);\n      cache[key] = formatter;\n    }\n    return formatter(val);\n  };\n};\nclass Formatter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.formats = {\n      number: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n    this.init(options);\n  }\n  init(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    this.backend?.init?.(services, options.backend, options);\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName) {\n    let tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;\n    let callback = arguments.length > 5 ? arguments[5] : undefined;\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let callback = arguments.length > 3 ? arguments[3] : undefined;\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name) {\n    let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    let clb = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : () => {};\n    if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend?.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nconst get = () => ({\n  debug: false,\n  initAsync: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  }\n});\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n  return options;\n};\n\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initAsync) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init() {\n    var _this = this;\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (options.defaultNS == null && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    this.options.interpolation = {\n      ...defOpts.interpolation,\n      ...this.options.interpolation\n    };\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', function (event) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        _this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', function (event) {\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n        _this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = function () {\n        return _this.store[fcName](...arguments);\n      };\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = function () {\n        _this.store[fcName](...arguments);\n        return _this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initAsync) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      this.options.preload?.forEach?.(l => append(l));\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n  }\n  changeLanguage(lng, callback) {\n    var _this2 = this;\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        setLngProps(l);\n        this.translator.changeLanguage(l);\n        this.isLanguageChangingTo = undefined;\n        this.emit('languageChanged', l);\n        this.logger.log('languageChanged', l);\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve(function () {\n        return _this2.t(...arguments);\n      });\n      if (callback) callback(err, function () {\n        return _this2.t(...arguments);\n      });\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const l = isString(lngs) ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        this.services.languageDetector?.cacheUserLanguage?.(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    var _this3 = this;\n    const fixedT = function (key, opts) {\n      let options;\n      if (typeof opts !== 'object') {\n        for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n          rest[_key3 - 2] = arguments[_key3];\n        }\n        options = _this3.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        options = {\n          ...opts\n        };\n      }\n      options.lng = options.lng || fixedT.lng;\n      options.lngs = options.lngs || fixedT.lngs;\n      options.ns = options.ns || fixedT.ns;\n      if (options.keyPrefix !== '') options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = _this3.options.keySeparator || '.';\n      let resultKey;\n      if (options.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => `${options.keyPrefix}${keySeparator}${k}`);\n      } else {\n        resultKey = options.keyPrefix ? `${options.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return _this3.t(resultKey, options);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return this.translator?.translate(...args);\n  }\n  exists() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    return this.translator?.exists(...args);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    return new I18n(options, callback);\n  }\n  cloneInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n        prev[l] = {\n          ...this.store.data[l]\n        };\n        return Object.keys(prev[l]).reduce((acc, n) => {\n          acc[n] = {\n            ...prev[l][n]\n          };\n          return acc;\n        }, {});\n      }, {});\n      clone.store = new ResourceStore(clonedData, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', function (event) {\n      for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n        args[_key6 - 1] = arguments[_key6];\n      }\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n"]},"metadata":{},"sourceType":"module"}