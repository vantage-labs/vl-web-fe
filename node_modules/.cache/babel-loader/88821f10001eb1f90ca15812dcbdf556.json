{"ast":null,"code":"// packages/react/aspect-ratio/src/AspectRatio.tsx\nimport * as React from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NAME = \"AspectRatio\";\nvar AspectRatio = React.forwardRef((props, forwardedRef) => {\n  const {\n    ratio = 1 / 1,\n    style,\n    ...aspectRatioProps\n  } = props;\n  return /* @__PURE__ */jsx(\"div\", {\n    style: {\n      // ensures inner element is contained\n      position: \"relative\",\n      // ensures padding bottom trick maths works\n      width: \"100%\",\n      paddingBottom: `${100 / ratio}%`\n    },\n    \"data-radix-aspect-ratio-wrapper\": \"\",\n    children: /* @__PURE__ */jsx(Primitive.div, { ...aspectRatioProps,\n      ref: forwardedRef,\n      style: { ...style,\n        // ensures children expand in ratio\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    })\n  });\n});\nAspectRatio.displayName = NAME;\nvar Root = AspectRatio;\nexport { AspectRatio, Root };","map":{"version":3,"mappings":";AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AA4BQ;AAtBR,IAAMC,OAAO,aAAb;AAQA,IAAMC,cAAoBH,iBACxB,CAACI,KAAD,EAAQC,YAAR,KAAyB;AACvB,QAAM;AAAEC,YAAQ,IAAI,CAAd;AAAiBC,SAAjB;AAAwB,OAAGC;AAA3B,MAAgDJ,KAAtD;AACA,SACE,mBAAC,KAAD,EAAC;AACCG,WAAO;AAAA;AAELE,gBAAU,UAFL;AAEK;AAEVC,aAAO,MAJF;AAKLC,qBAAe,GAAG,MAAML,KAAK;AALxB,KADR;AAQC,uCAAgC,EARjC;AAUCM,iCAACX,UAAUY,GAAX,EAAC,EACE,GAAGL,gBADL;AAECM,WAAKT,YAFN;AAGCE,aAAO,EACL,GAAGA,KADE;AACF;AAEHE,kBAAU,UAHL;AAILM,aAAK,CAJA;AAKLC,eAAO,CALF;AAMLC,gBAAQ,CANH;AAOLC,cAAM;AAPD;AAHR,KAAD;AAVD,GAAD,CADF;AA0BF,CA7BwB,CAA1B;AAgCAf,YAAYgB,WAAZ,GAA0BjB,IAA1B;AAIA,IAAMkB,OAAOjB,WAAb","names":["React","Primitive","NAME","AspectRatio","props","forwardedRef","ratio","style","aspectRatioProps","position","width","paddingBottom","children","div","ref","top","right","bottom","left","displayName","Root"],"sources":["/home/bahari/vl-web-fe/node_modules/@radix-ui/react-aspect-ratio/src/AspectRatio.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * AspectRatio\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'AspectRatio';\n\ntype AspectRatioElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface AspectRatioProps extends PrimitiveDivProps {\n  ratio?: number;\n}\n\nconst AspectRatio = React.forwardRef<AspectRatioElement, AspectRatioProps>(\n  (props, forwardedRef) => {\n    const { ratio = 1 / 1, style, ...aspectRatioProps } = props;\n    return (\n      <div\n        style={{\n          // ensures inner element is contained\n          position: 'relative',\n          // ensures padding bottom trick maths works\n          width: '100%',\n          paddingBottom: `${100 / ratio}%`,\n        }}\n        data-radix-aspect-ratio-wrapper=\"\"\n      >\n        <Primitive.div\n          {...aspectRatioProps}\n          ref={forwardedRef}\n          style={{\n            ...style,\n            // ensures children expand in ratio\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n          }}\n        />\n      </div>\n    );\n  }\n);\n\nAspectRatio.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = AspectRatio;\n\nexport {\n  AspectRatio,\n  //\n  Root,\n};\nexport type { AspectRatioProps };\n"]},"metadata":{},"sourceType":"module"}