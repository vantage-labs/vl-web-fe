{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar global = require('../internals/global');\n\nvar path = require('../internals/path');\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar isForced = require('../internals/is-forced');\n\nvar hasOwn = require('../internals/has-own-property');\n\nvar inheritIfRequired = require('../internals/inherit-if-required');\n\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\n\nvar isSymbol = require('../internals/is-symbol');\n\nvar toPrimitive = require('../internals/to-primitive');\n\nvar fails = require('../internals/fails');\n\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\n\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\n\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar thisNumberValue = require('../internals/this-number-value');\n\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar PureNumberNamespace = path[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\nvar TypeError = global.TypeError;\nvar stringSlice = uncurryThis(''.slice);\nvar charCodeAt = uncurryThis(''.charCodeAt); // `ToNumeric` abstract operation\n// https://tc39.es/ecma262/#sec-tonumeric\n\nvar toNumeric = function toNumeric(value) {\n  var primValue = toPrimitive(value, 'number');\n  return typeof primValue == 'bigint' ? primValue : toNumber(primValue);\n}; // `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\n\n\nvar toNumber = function toNumber(argument) {\n  var it = toPrimitive(argument, 'number');\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (isSymbol(it)) throw new TypeError('Cannot convert a Symbol value to a number');\n\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = charCodeAt(it, 0);\n\n    if (first === 43 || first === 45) {\n      third = charCodeAt(it, 2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (charCodeAt(it, 1)) {\n        // fast equal of /^0b[01]+$/i\n        case 66:\n        case 98:\n          radix = 2;\n          maxCode = 49;\n          break;\n        // fast equal of /^0o[0-7]+$/i\n\n        case 79:\n        case 111:\n          radix = 8;\n          maxCode = 55;\n          break;\n\n        default:\n          return +it;\n      }\n\n      digits = stringSlice(it, 2);\n      length = digits.length;\n\n      for (index = 0; index < length; index++) {\n        code = charCodeAt(digits, index); // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n\n        if (code < 48 || code > maxCode) return NaN;\n      }\n\n      return parseInt(digits, radix);\n    }\n  }\n\n  return +it;\n};\n\nvar FORCED = isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'));\n\nvar calledWithNew = function calledWithNew(dummy) {\n  // includes check on 1..constructor(foo) case\n  return isPrototypeOf(NumberPrototype, dummy) && fails(function () {\n    thisNumberValue(dummy);\n  });\n}; // `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\n\n\nvar NumberWrapper = function Number(value) {\n  var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));\n  return calledWithNew(this) ? inheritIfRequired(Object(n), this, NumberWrapper) : n;\n};\n\nNumberWrapper.prototype = NumberPrototype;\nif (FORCED && !IS_PURE) NumberPrototype.constructor = NumberWrapper;\n$({\n  global: true,\n  constructor: true,\n  wrap: true,\n  forced: FORCED\n}, {\n  Number: NumberWrapper\n}); // Use `internal/copy-constructor-properties` helper in `core-js@4`\n\nvar copyConstructorProperties = function copyConstructorProperties(target, source) {\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(source) : ( // ES3:\n  'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' + // ES2015 (in case, if modules with ES2015 Number statics required before):\n  'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' + // ESNext\n  'fromString,range').split(','), j = 0, key; keys.length > j; j++) {\n    if (hasOwn(source, key = keys[j]) && !hasOwn(target, key)) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n\nif (IS_PURE && PureNumberNamespace) copyConstructorProperties(path[NUMBER], PureNumberNamespace);\nif (FORCED || IS_PURE) copyConstructorProperties(path[NUMBER], NativeNumber);","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/core-js/modules/es.number.constructor.js"],"names":["$","require","IS_PURE","DESCRIPTORS","global","path","uncurryThis","isForced","hasOwn","inheritIfRequired","isPrototypeOf","isSymbol","toPrimitive","fails","getOwnPropertyNames","f","getOwnPropertyDescriptor","defineProperty","thisNumberValue","trim","NUMBER","NativeNumber","PureNumberNamespace","NumberPrototype","prototype","TypeError","stringSlice","slice","charCodeAt","toNumeric","value","primValue","toNumber","argument","it","first","third","radix","maxCode","digits","length","index","code","NaN","parseInt","FORCED","calledWithNew","dummy","NumberWrapper","Number","n","arguments","Object","constructor","wrap","forced","copyConstructorProperties","target","source","keys","split","j","key"],"mappings":"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","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar path = require('../internals/path');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isForced = require('../internals/is-forced');\nvar hasOwn = require('../internals/has-own-property');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar isSymbol = require('../internals/is-symbol');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar thisNumberValue = require('../internals/this-number-value');\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar PureNumberNamespace = path[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\nvar TypeError = global.TypeError;\nvar stringSlice = uncurryThis(''.slice);\nvar charCodeAt = uncurryThis(''.charCodeAt);\n\n// `ToNumeric` abstract operation\n// https://tc39.es/ecma262/#sec-tonumeric\nvar toNumeric = function (value) {\n  var primValue = toPrimitive(value, 'number');\n  return typeof primValue == 'bigint' ? primValue : toNumber(primValue);\n};\n\n// `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, 'number');\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (isSymbol(it)) throw new TypeError('Cannot convert a Symbol value to a number');\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = charCodeAt(it, 0);\n    if (first === 43 || first === 45) {\n      third = charCodeAt(it, 2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (charCodeAt(it, 1)) {\n        // fast equal of /^0b[01]+$/i\n        case 66:\n        case 98:\n          radix = 2;\n          maxCode = 49;\n          break;\n        // fast equal of /^0o[0-7]+$/i\n        case 79:\n        case 111:\n          radix = 8;\n          maxCode = 55;\n          break;\n        default:\n          return +it;\n      }\n      digits = stringSlice(it, 2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = charCodeAt(digits, index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nvar FORCED = isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'));\n\nvar calledWithNew = function (dummy) {\n  // includes check on 1..constructor(foo) case\n  return isPrototypeOf(NumberPrototype, dummy) && fails(function () { thisNumberValue(dummy); });\n};\n\n// `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\nvar NumberWrapper = function Number(value) {\n  var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));\n  return calledWithNew(this) ? inheritIfRequired(Object(n), this, NumberWrapper) : n;\n};\n\nNumberWrapper.prototype = NumberPrototype;\nif (FORCED && !IS_PURE) NumberPrototype.constructor = NumberWrapper;\n\n$({ global: true, constructor: true, wrap: true, forced: FORCED }, {\n  Number: NumberWrapper\n});\n\n// Use `internal/copy-constructor-properties` helper in `core-js@4`\nvar copyConstructorProperties = function (target, source) {\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(source) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' +\n    // ESNext\n    'fromString,range'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (hasOwn(source, key = keys[j]) && !hasOwn(target, key)) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n\nif (IS_PURE && PureNumberNamespace) copyConstructorProperties(path[NUMBER], PureNumberNamespace);\nif (FORCED || IS_PURE) copyConstructorProperties(path[NUMBER], NativeNumber);\n"]},"metadata":{},"sourceType":"script"}