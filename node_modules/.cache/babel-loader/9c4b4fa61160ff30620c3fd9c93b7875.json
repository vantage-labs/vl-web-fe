{"ast":null,"code":"import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n  constructor() {\n    super(...arguments);\n    this.type = \"svg\";\n    this.isSVGTag = false;\n    this.measureInstanceViewportBox = createBox;\n  }\n\n  getBaseTargetFromProps(props, key) {\n    return props[key];\n  }\n\n  readValueFromInstance(instance, key) {\n    if (transformProps.has(key)) {\n      const defaultType = getDefaultValueType(key);\n      return defaultType ? defaultType.default || 0 : 0;\n    }\n\n    key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n    return instance.getAttribute(key);\n  }\n\n  scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n  }\n\n  build(renderState, latestValues, props) {\n    buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n  }\n\n  renderInstance(instance, renderState, styleProp, projection) {\n    renderSVG(instance, renderState, styleProp, projection);\n  }\n\n  mount(instance) {\n    this.isSVGTag = isSVGTag(instance.tagName);\n    super.mount(instance);\n  }\n\n}\n\nexport { SVGVisualElement };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs"],"names":["scrapeMotionValuesFromProps","DOMVisualElement","buildSVGAttrs","camelToDash","camelCaseAttributes","transformProps","renderSVG","getDefaultValueType","createBox","isSVGTag","SVGVisualElement","constructor","arguments","type","measureInstanceViewportBox","getBaseTargetFromProps","props","key","readValueFromInstance","instance","has","defaultType","default","getAttribute","prevProps","visualElement","build","renderState","latestValues","transformTemplate","renderInstance","styleProp","projection","mount","tagName"],"mappings":"AAAA,SAASA,2BAAT,QAA4C,kCAA5C;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,SAASC,mBAAT,QAAoC,8BAApC;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,SAASC,SAAT,QAA0B,sCAA1B;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAEA,MAAMC,gBAAN,SAA+BT,gBAA/B,CAAgD;AAC5CU,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA,SAAKC,IAAL,GAAY,KAAZ;AACA,SAAKJ,QAAL,GAAgB,KAAhB;AACA,SAAKK,0BAAL,GAAkCN,SAAlC;AACH;;AACDO,EAAAA,sBAAsB,CAACC,KAAD,EAAQC,GAAR,EAAa;AAC/B,WAAOD,KAAK,CAACC,GAAD,CAAZ;AACH;;AACDC,EAAAA,qBAAqB,CAACC,QAAD,EAAWF,GAAX,EAAgB;AACjC,QAAIZ,cAAc,CAACe,GAAf,CAAmBH,GAAnB,CAAJ,EAA6B;AACzB,YAAMI,WAAW,GAAGd,mBAAmB,CAACU,GAAD,CAAvC;AACA,aAAOI,WAAW,GAAGA,WAAW,CAACC,OAAZ,IAAuB,CAA1B,GAA8B,CAAhD;AACH;;AACDL,IAAAA,GAAG,GAAG,CAACb,mBAAmB,CAACgB,GAApB,CAAwBH,GAAxB,CAAD,GAAgCd,WAAW,CAACc,GAAD,CAA3C,GAAmDA,GAAzD;AACA,WAAOE,QAAQ,CAACI,YAAT,CAAsBN,GAAtB,CAAP;AACH;;AACDjB,EAAAA,2BAA2B,CAACgB,KAAD,EAAQQ,SAAR,EAAmBC,aAAnB,EAAkC;AACzD,WAAOzB,2BAA2B,CAACgB,KAAD,EAAQQ,SAAR,EAAmBC,aAAnB,CAAlC;AACH;;AACDC,EAAAA,KAAK,CAACC,WAAD,EAAcC,YAAd,EAA4BZ,KAA5B,EAAmC;AACpCd,IAAAA,aAAa,CAACyB,WAAD,EAAcC,YAAd,EAA4B,KAAKnB,QAAjC,EAA2CO,KAAK,CAACa,iBAAjD,CAAb;AACH;;AACDC,EAAAA,cAAc,CAACX,QAAD,EAAWQ,WAAX,EAAwBI,SAAxB,EAAmCC,UAAnC,EAA+C;AACzD1B,IAAAA,SAAS,CAACa,QAAD,EAAWQ,WAAX,EAAwBI,SAAxB,EAAmCC,UAAnC,CAAT;AACH;;AACDC,EAAAA,KAAK,CAACd,QAAD,EAAW;AACZ,SAAKV,QAAL,GAAgBA,QAAQ,CAACU,QAAQ,CAACe,OAAV,CAAxB;AACA,UAAMD,KAAN,CAAYd,QAAZ;AACH;;AA9B2C;;AAiChD,SAAST,gBAAT","sourcesContent":["import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n"]},"metadata":{},"sourceType":"module"}