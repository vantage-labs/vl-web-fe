{"ast":null,"code":"import _objectSpread from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { useState, useLayoutEffect } from 'react';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { VisualElement } from '../../render/VisualElement.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nvar createObject = function createObject() {\n  return {};\n};\n\nvar StateVisualElement = /*#__PURE__*/function (_VisualElement) {\n  _inherits(StateVisualElement, _VisualElement);\n\n  var _super = _createSuper(StateVisualElement);\n\n  function StateVisualElement() {\n    var _this;\n\n    _classCallCheck(this, StateVisualElement);\n\n    _this = _super.apply(this, arguments);\n    _this.measureInstanceViewportBox = createBox;\n    return _this;\n  }\n\n  _createClass(StateVisualElement, [{\n    key: \"build\",\n    value: function build() {}\n  }, {\n    key: \"resetTransform\",\n    value: function resetTransform() {}\n  }, {\n    key: \"restoreTransform\",\n    value: function restoreTransform() {}\n  }, {\n    key: \"removeValueFromRenderState\",\n    value: function removeValueFromRenderState() {}\n  }, {\n    key: \"renderInstance\",\n    value: function renderInstance() {}\n  }, {\n    key: \"scrapeMotionValuesFromProps\",\n    value: function scrapeMotionValuesFromProps() {\n      return createObject();\n    }\n  }, {\n    key: \"getBaseTargetFromProps\",\n    value: function getBaseTargetFromProps() {\n      return undefined;\n    }\n  }, {\n    key: \"readValueFromInstance\",\n    value: function readValueFromInstance(_state, key, options) {\n      return options.initialState[key] || 0;\n    }\n  }, {\n    key: \"sortInstanceNodePosition\",\n    value: function sortInstanceNodePosition() {\n      return 0;\n    }\n  }]);\n\n  return StateVisualElement;\n}(VisualElement);\n\nvar useVisualState = makeUseVisualState({\n  scrapeMotionValuesFromProps: createObject,\n  createRenderState: createObject\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n */\n\nfunction useAnimatedState(initialState) {\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      animationState = _useState2[0],\n      setAnimationState = _useState2[1];\n\n  var visualState = useVisualState({}, false);\n  var element = useConstant(function () {\n    return new StateVisualElement({\n      props: {\n        onUpdate: function onUpdate(v) {\n          setAnimationState(_objectSpread({}, v));\n        }\n      },\n      visualState: visualState,\n      presenceContext: null\n    }, {\n      initialState: initialState\n    });\n  });\n  useLayoutEffect(function () {\n    element.mount({});\n    return function () {\n      return element.unmount();\n    };\n  }, [element]);\n  var startAnimation = useConstant(function () {\n    return function (animationDefinition) {\n      return animateVisualElement(element, animationDefinition);\n    };\n  });\n  return [animationState, startAnimation];\n}\n\nexport { useAnimatedState };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/framer-motion/dist/es/animation/hooks/use-animated-state.mjs"],"names":["useState","useLayoutEffect","useConstant","makeUseVisualState","createBox","VisualElement","animateVisualElement","createObject","StateVisualElement","arguments","measureInstanceViewportBox","undefined","_state","key","options","initialState","useVisualState","scrapeMotionValuesFromProps","createRenderState","useAnimatedState","animationState","setAnimationState","visualState","element","props","onUpdate","v","presenceContext","mount","unmount","startAnimation","animationDefinition"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,eAAnB,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,kBAAT,QAAmC,yCAAnC;AACA,SAASC,SAAT,QAA0B,sCAA1B;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,oBAAT,QAAqC,kCAArC;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAO,EAAP;AAAA,CAArB;;IACMC,kB;;;;;AACF,gCAAc;AAAA;;AAAA;;AACV,+BAASC,SAAT;AACA,UAAKC,0BAAL,GAAkCN,SAAlC;AAFU;AAGb;;;;WACD,iBAAQ,CAAG;;;WACX,0BAAiB,CAAG;;;WACpB,4BAAmB,CAAG;;;WACtB,sCAA6B,CAAG;;;WAChC,0BAAiB,CAAG;;;WACpB,uCAA8B;AAC1B,aAAOG,YAAY,EAAnB;AACH;;;WACD,kCAAyB;AACrB,aAAOI,SAAP;AACH;;;WACD,+BAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,OAAnC,EAA4C;AACxC,aAAOA,OAAO,CAACC,YAAR,CAAqBF,GAArB,KAA6B,CAApC;AACH;;;WACD,oCAA2B;AACvB,aAAO,CAAP;AACH;;;;EArB4BR,a;;AAuBjC,IAAMW,cAAc,GAAGb,kBAAkB,CAAC;AACtCc,EAAAA,2BAA2B,EAAEV,YADS;AAEtCW,EAAAA,iBAAiB,EAAEX;AAFmB,CAAD,CAAzC;AAIA;AACA;AACA;AACA;;AACA,SAASY,gBAAT,CAA0BJ,YAA1B,EAAwC;AACpC,kBAA4Cf,QAAQ,CAACe,YAAD,CAApD;AAAA;AAAA,MAAOK,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,MAAMC,WAAW,GAAGN,cAAc,CAAC,EAAD,EAAK,KAAL,CAAlC;AACA,MAAMO,OAAO,GAAGrB,WAAW,CAAC,YAAM;AAC9B,WAAO,IAAIM,kBAAJ,CAAuB;AAC1BgB,MAAAA,KAAK,EAAE;AACHC,QAAAA,QAAQ,EAAE,kBAACC,CAAD,EAAO;AACbL,UAAAA,iBAAiB,mBAAMK,CAAN,EAAjB;AACH;AAHE,OADmB;AAM1BJ,MAAAA,WAAW,EAAXA,WAN0B;AAO1BK,MAAAA,eAAe,EAAE;AAPS,KAAvB,EAQJ;AAAEZ,MAAAA,YAAY,EAAZA;AAAF,KARI,CAAP;AASH,GAV0B,CAA3B;AAWAd,EAAAA,eAAe,CAAC,YAAM;AAClBsB,IAAAA,OAAO,CAACK,KAAR,CAAc,EAAd;AACA,WAAO;AAAA,aAAML,OAAO,CAACM,OAAR,EAAN;AAAA,KAAP;AACH,GAHc,EAGZ,CAACN,OAAD,CAHY,CAAf;AAIA,MAAMO,cAAc,GAAG5B,WAAW,CAAC;AAAA,WAAM,UAAC6B,mBAAD,EAAyB;AAC9D,aAAOzB,oBAAoB,CAACiB,OAAD,EAAUQ,mBAAV,CAA3B;AACH,KAFkC;AAAA,GAAD,CAAlC;AAGA,SAAO,CAACX,cAAD,EAAiBU,cAAjB,CAAP;AACH;;AAED,SAASX,gBAAT","sourcesContent":["import { useState, useLayoutEffect } from 'react';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { VisualElement } from '../../render/VisualElement.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nconst createObject = () => ({});\nclass StateVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.measureInstanceViewportBox = createBox;\n    }\n    build() { }\n    resetTransform() { }\n    restoreTransform() { }\n    removeValueFromRenderState() { }\n    renderInstance() { }\n    scrapeMotionValuesFromProps() {\n        return createObject();\n    }\n    getBaseTargetFromProps() {\n        return undefined;\n    }\n    readValueFromInstance(_state, key, options) {\n        return options.initialState[key] || 0;\n    }\n    sortInstanceNodePosition() {\n        return 0;\n    }\n}\nconst useVisualState = makeUseVisualState({\n    scrapeMotionValuesFromProps: createObject,\n    createRenderState: createObject,\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n */\nfunction useAnimatedState(initialState) {\n    const [animationState, setAnimationState] = useState(initialState);\n    const visualState = useVisualState({}, false);\n    const element = useConstant(() => {\n        return new StateVisualElement({\n            props: {\n                onUpdate: (v) => {\n                    setAnimationState({ ...v });\n                },\n            },\n            visualState,\n            presenceContext: null,\n        }, { initialState });\n    });\n    useLayoutEffect(() => {\n        element.mount({});\n        return () => element.unmount();\n    }, [element]);\n    const startAnimation = useConstant(() => (animationDefinition) => {\n        return animateVisualElement(element, animationDefinition);\n    });\n    return [animationState, startAnimation];\n}\n\nexport { useAnimatedState };\n"]},"metadata":{},"sourceType":"module"}