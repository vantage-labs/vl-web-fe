{"ast":null,"code":"import { resolveElements, getValueTransition } from 'motion-dom';\nimport { invariant, secondsToMilliseconds } from 'motion-utils';\nimport { NativeAnimation } from './NativeAnimation.mjs';\n\nfunction animateElements(elementOrSelector, keyframes, options, scope) {\n  const elements = resolveElements(elementOrSelector, scope);\n  const numElements = elements.length;\n  invariant(Boolean(numElements), \"No valid element provided.\");\n  const animations = [];\n\n  for (let i = 0; i < numElements; i++) {\n    const element = elements[i];\n    const elementTransition = { ...options\n    };\n    /**\n     * Resolve stagger function if provided.\n     */\n\n    if (typeof elementTransition.delay === \"function\") {\n      elementTransition.delay = elementTransition.delay(i, numElements);\n    }\n\n    for (const valueName in keyframes) {\n      const valueKeyframes = keyframes[valueName];\n      const valueOptions = { ...getValueTransition(elementTransition, valueName)\n      };\n      valueOptions.duration = valueOptions.duration ? secondsToMilliseconds(valueOptions.duration) : valueOptions.duration;\n      valueOptions.delay = secondsToMilliseconds(valueOptions.delay || 0);\n      animations.push(new NativeAnimation(element, valueName, valueKeyframes, valueOptions));\n    }\n  }\n\n  return animations;\n}\n\nexport { animateElements };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/framer-motion/dist/es/animation/animators/waapi/animate-elements.mjs"],"names":["resolveElements","getValueTransition","invariant","secondsToMilliseconds","NativeAnimation","animateElements","elementOrSelector","keyframes","options","scope","elements","numElements","length","Boolean","animations","i","element","elementTransition","delay","valueName","valueKeyframes","valueOptions","duration","push"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,kBAA1B,QAAoD,YAApD;AACA,SAASC,SAAT,EAAoBC,qBAApB,QAAiD,cAAjD;AACA,SAASC,eAAT,QAAgC,uBAAhC;;AAEA,SAASC,eAAT,CAAyBC,iBAAzB,EAA4CC,SAA5C,EAAuDC,OAAvD,EAAgEC,KAAhE,EAAuE;AACnE,QAAMC,QAAQ,GAAGV,eAAe,CAACM,iBAAD,EAAoBG,KAApB,CAAhC;AACA,QAAME,WAAW,GAAGD,QAAQ,CAACE,MAA7B;AACAV,EAAAA,SAAS,CAACW,OAAO,CAACF,WAAD,CAAR,EAAuB,4BAAvB,CAAT;AACA,QAAMG,UAAU,GAAG,EAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,WAApB,EAAiCI,CAAC,EAAlC,EAAsC;AAClC,UAAMC,OAAO,GAAGN,QAAQ,CAACK,CAAD,CAAxB;AACA,UAAME,iBAAiB,GAAG,EAAE,GAAGT;AAAL,KAA1B;AACA;AACR;AACA;;AACQ,QAAI,OAAOS,iBAAiB,CAACC,KAAzB,KAAmC,UAAvC,EAAmD;AAC/CD,MAAAA,iBAAiB,CAACC,KAAlB,GAA0BD,iBAAiB,CAACC,KAAlB,CAAwBH,CAAxB,EAA2BJ,WAA3B,CAA1B;AACH;;AACD,SAAK,MAAMQ,SAAX,IAAwBZ,SAAxB,EAAmC;AAC/B,YAAMa,cAAc,GAAGb,SAAS,CAACY,SAAD,CAAhC;AACA,YAAME,YAAY,GAAG,EACjB,GAAGpB,kBAAkB,CAACgB,iBAAD,EAAoBE,SAApB;AADJ,OAArB;AAGAE,MAAAA,YAAY,CAACC,QAAb,GAAwBD,YAAY,CAACC,QAAb,GAClBnB,qBAAqB,CAACkB,YAAY,CAACC,QAAd,CADH,GAElBD,YAAY,CAACC,QAFnB;AAGAD,MAAAA,YAAY,CAACH,KAAb,GAAqBf,qBAAqB,CAACkB,YAAY,CAACH,KAAb,IAAsB,CAAvB,CAA1C;AACAJ,MAAAA,UAAU,CAACS,IAAX,CAAgB,IAAInB,eAAJ,CAAoBY,OAApB,EAA6BG,SAA7B,EAAwCC,cAAxC,EAAwDC,YAAxD,CAAhB;AACH;AACJ;;AACD,SAAOP,UAAP;AACH;;AAED,SAAST,eAAT","sourcesContent":["import { resolveElements, getValueTransition } from 'motion-dom';\nimport { invariant, secondsToMilliseconds } from 'motion-utils';\nimport { NativeAnimation } from './NativeAnimation.mjs';\n\nfunction animateElements(elementOrSelector, keyframes, options, scope) {\n    const elements = resolveElements(elementOrSelector, scope);\n    const numElements = elements.length;\n    invariant(Boolean(numElements), \"No valid element provided.\");\n    const animations = [];\n    for (let i = 0; i < numElements; i++) {\n        const element = elements[i];\n        const elementTransition = { ...options };\n        /**\n         * Resolve stagger function if provided.\n         */\n        if (typeof elementTransition.delay === \"function\") {\n            elementTransition.delay = elementTransition.delay(i, numElements);\n        }\n        for (const valueName in keyframes) {\n            const valueKeyframes = keyframes[valueName];\n            const valueOptions = {\n                ...getValueTransition(elementTransition, valueName),\n            };\n            valueOptions.duration = valueOptions.duration\n                ? secondsToMilliseconds(valueOptions.duration)\n                : valueOptions.duration;\n            valueOptions.delay = secondsToMilliseconds(valueOptions.delay || 0);\n            animations.push(new NativeAnimation(element, valueName, valueKeyframes, valueOptions));\n        }\n    }\n    return animations;\n}\n\nexport { animateElements };\n"]},"metadata":{},"sourceType":"module"}