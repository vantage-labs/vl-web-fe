{"ast":null,"code":"// packages/react/accessible-icon/src/AccessibleIcon.tsx\nimport * as React from \"react\";\nimport * as VisuallyHiddenPrimitive from \"@radix-ui/react-visually-hidden\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar NAME = \"AccessibleIcon\";\n\nvar AccessibleIcon = _ref => {\n  let {\n    children,\n    label\n  } = _ref;\n  const child = React.Children.only(children);\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [React.cloneElement(child, {\n      // accessibility\n      \"aria-hidden\": \"true\",\n      focusable: \"false\" // See: https://allyjs.io/tutorials/focusing-in-svg.html#making-svg-elements-focusable\n\n    }), /* @__PURE__ */jsx(VisuallyHiddenPrimitive.Root, {\n      children: label\n    })]\n  });\n};\n\nAccessibleIcon.displayName = NAME;\nvar Root2 = AccessibleIcon;\nexport { AccessibleIcon, Root2 as Root };","map":{"version":3,"mappings":";AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,YAAYC,uBAAZ,MAAyC,iCAAzC;AAgBI,mBAMEC,GANF;AAdJ,IAAMC,OAAO,gBAAb;;AAWA,IAAMC,iBAAgD,QAAyB;AAAA,MAAxB;AAAEC,YAAF;AAAYC;AAAZ,GAAwB;AAC7E,QAAMC,QAAcP,eAASQ,IAAT,CAAcH,QAAd,CAApB;AACA,SACE;AACGA,eAAML,mBAAaO,KAAb,EAA2E;AAAA;AAEhF,qBAAe,MAFiE;AAGhFE,iBAAW,OAHqE,CAGrE;;AAHqE,KAA3E,CAAN,EAKD,mBAAyBR,4BAAzB,EAAC;AAA8BI;AAA9B,KAAD,CALC;AADH,IADF;AAUF,CAZA;;AAcAD,eAAeM,WAAf,GAA6BP,IAA7B;AAEA,IAAMQ,QAAOP,cAAb","names":["React","VisuallyHiddenPrimitive","jsx","NAME","AccessibleIcon","children","label","child","only","focusable","displayName","Root"],"sources":["/home/bahari/vl-web-fe/node_modules/@radix-ui/react-accessible-icon/src/AccessibleIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as VisuallyHiddenPrimitive from '@radix-ui/react-visually-hidden';\n\nconst NAME = 'AccessibleIcon';\n\ninterface AccessibleIconProps {\n  children?: React.ReactNode;\n  /**\n   * The accessible label for the icon. This label will be visually hidden but announced to screen\n   * reader users, similar to `alt` text for `img` tags.\n   */\n  label: string;\n}\n\nconst AccessibleIcon: React.FC<AccessibleIconProps> = ({ children, label }) => {\n  const child = React.Children.only(children);\n  return (\n    <>\n      {React.cloneElement(child as React.ReactElement<React.SVGAttributes<SVGElement>>, {\n        // accessibility\n        'aria-hidden': 'true',\n        focusable: 'false', // See: https://allyjs.io/tutorials/focusing-in-svg.html#making-svg-elements-focusable\n      })}\n      <VisuallyHiddenPrimitive.Root>{label}</VisuallyHiddenPrimitive.Root>\n    </>\n  );\n};\n\nAccessibleIcon.displayName = NAME;\n\nconst Root = AccessibleIcon;\n\nexport {\n  AccessibleIcon,\n  //\n  Root,\n};\nexport type { AccessibleIconProps };\n"]},"metadata":{},"sourceType":"module"}