{"ast":null,"code":"import _classCallCheck from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n  var props = node.props;\n\n  if (node.animationState && props.whileHover) {\n    node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n  }\n\n  var eventName = \"onHover\" + lifecycle;\n  var callback = props[eventName];\n\n  if (callback) {\n    frame.postRender(function () {\n      return callback(event, extractEventInfo(event));\n    });\n  }\n}\n\nvar HoverGesture = /*#__PURE__*/function (_Feature) {\n  _inherits(HoverGesture, _Feature);\n\n  var _super = _createSuper(HoverGesture);\n\n  function HoverGesture() {\n    _classCallCheck(this, HoverGesture);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HoverGesture, [{\n    key: \"mount\",\n    value: function mount() {\n      var _this = this;\n\n      var current = this.node.current;\n      if (!current) return;\n      this.unmount = hover(current, function (startEvent) {\n        handleHoverEvent(_this.node, startEvent, \"Start\");\n        return function (endEvent) {\n          return handleHoverEvent(_this.node, endEvent, \"End\");\n        };\n      });\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {}\n  }]);\n\n  return HoverGesture;\n}(Feature);\n\nexport { HoverGesture };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/framer-motion/dist/es/gestures/hover.mjs"],"names":["Feature","hover","extractEventInfo","frame","handleHoverEvent","node","event","lifecycle","props","animationState","whileHover","setActive","eventName","callback","postRender","HoverGesture","current","unmount","startEvent","endEvent"],"mappings":";;;;AAAA,SAASA,OAAT,QAAwB,gCAAxB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,KAAT,QAAsB,wBAAtB;;AAEA,SAASC,gBAAT,CAA0BC,IAA1B,EAAgCC,KAAhC,EAAuCC,SAAvC,EAAkD;AAC9C,MAAQC,KAAR,GAAkBH,IAAlB,CAAQG,KAAR;;AACA,MAAIH,IAAI,CAACI,cAAL,IAAuBD,KAAK,CAACE,UAAjC,EAA6C;AACzCL,IAAAA,IAAI,CAACI,cAAL,CAAoBE,SAApB,CAA8B,YAA9B,EAA4CJ,SAAS,KAAK,OAA1D;AACH;;AACD,MAAMK,SAAS,GAAI,YAAYL,SAA/B;AACA,MAAMM,QAAQ,GAAGL,KAAK,CAACI,SAAD,CAAtB;;AACA,MAAIC,QAAJ,EAAc;AACVV,IAAAA,KAAK,CAACW,UAAN,CAAiB;AAAA,aAAMD,QAAQ,CAACP,KAAD,EAAQJ,gBAAgB,CAACI,KAAD,CAAxB,CAAd;AAAA,KAAjB;AACH;AACJ;;IACKS,Y;;;;;;;;;;;;;WACF,iBAAQ;AAAA;;AACJ,UAAQC,OAAR,GAAoB,KAAKX,IAAzB,CAAQW,OAAR;AACA,UAAI,CAACA,OAAL,EACI;AACJ,WAAKC,OAAL,GAAehB,KAAK,CAACe,OAAD,EAAU,UAACE,UAAD,EAAgB;AAC1Cd,QAAAA,gBAAgB,CAAC,KAAI,CAACC,IAAN,EAAYa,UAAZ,EAAwB,OAAxB,CAAhB;AACA,eAAO,UAACC,QAAD;AAAA,iBAAcf,gBAAgB,CAAC,KAAI,CAACC,IAAN,EAAYc,QAAZ,EAAsB,KAAtB,CAA9B;AAAA,SAAP;AACH,OAHmB,CAApB;AAIH;;;WACD,mBAAU,CAAG;;;;EAVUnB,O;;AAa3B,SAASe,YAAT","sourcesContent":["import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n"]},"metadata":{},"sourceType":"module"}