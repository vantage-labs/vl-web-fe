{"ast":null,"code":"import { createElement, forwardRef as forwardRefReact } from 'react';\nimport { useTranslation } from './useTranslation.js';\nimport { getDisplayName } from './utils.js';\nexport const withTranslation = function (ns) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function Extend(WrappedComponent) {\n    function I18nextWithTranslation(_ref) {\n      let {\n        forwardedRef,\n        ...rest\n      } = _ref;\n      const [t, i18n, ready] = useTranslation(ns, { ...rest,\n        keyPrefix: options.keyPrefix\n      });\n      const passDownProps = { ...rest,\n        t,\n        i18n,\n        tReady: ready\n      };\n\n      if (options.withRef && forwardedRef) {\n        passDownProps.ref = forwardedRef;\n      } else if (!options.withRef && forwardedRef) {\n        passDownProps.forwardedRef = forwardedRef;\n      }\n\n      return createElement(WrappedComponent, passDownProps);\n    }\n\n    I18nextWithTranslation.displayName = `withI18nextTranslation(${getDisplayName(WrappedComponent)})`;\n    I18nextWithTranslation.WrappedComponent = WrappedComponent;\n\n    const forwardRef = (props, ref) => createElement(I18nextWithTranslation, Object.assign({}, props, {\n      forwardedRef: ref\n    }));\n\n    return options.withRef ? forwardRefReact(forwardRef) : I18nextWithTranslation;\n  };\n};","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/react-i18next/dist/es/withTranslation.js"],"names":["createElement","forwardRef","forwardRefReact","useTranslation","getDisplayName","withTranslation","ns","options","Extend","WrappedComponent","I18nextWithTranslation","forwardedRef","rest","t","i18n","ready","keyPrefix","passDownProps","tReady","withRef","ref","displayName","props","Object","assign"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,UAAU,IAAIC,eAAtC,QAA6D,OAA7D;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAO,MAAMC,eAAe,GAAG,UAACC,EAAD;AAAA,MAAKC,OAAL,uEAAe,EAAf;AAAA,SAAsB,SAASC,MAAT,CAAgBC,gBAAhB,EAAkC;AACrF,aAASC,sBAAT,OAGG;AAAA,UAH6B;AAC9BC,QAAAA,YAD8B;AAE9B,WAAGC;AAF2B,OAG7B;AACD,YAAM,CAACC,CAAD,EAAIC,IAAJ,EAAUC,KAAV,IAAmBZ,cAAc,CAACG,EAAD,EAAK,EAC1C,GAAGM,IADuC;AAE1CI,QAAAA,SAAS,EAAET,OAAO,CAACS;AAFuB,OAAL,CAAvC;AAIA,YAAMC,aAAa,GAAG,EACpB,GAAGL,IADiB;AAEpBC,QAAAA,CAFoB;AAGpBC,QAAAA,IAHoB;AAIpBI,QAAAA,MAAM,EAAEH;AAJY,OAAtB;;AAMA,UAAIR,OAAO,CAACY,OAAR,IAAmBR,YAAvB,EAAqC;AACnCM,QAAAA,aAAa,CAACG,GAAd,GAAoBT,YAApB;AACD,OAFD,MAEO,IAAI,CAACJ,OAAO,CAACY,OAAT,IAAoBR,YAAxB,EAAsC;AAC3CM,QAAAA,aAAa,CAACN,YAAd,GAA6BA,YAA7B;AACD;;AACD,aAAOX,aAAa,CAACS,gBAAD,EAAmBQ,aAAnB,CAApB;AACD;;AACDP,IAAAA,sBAAsB,CAACW,WAAvB,GAAsC,0BAAyBjB,cAAc,CAACK,gBAAD,CAAmB,GAAhG;AACAC,IAAAA,sBAAsB,CAACD,gBAAvB,GAA0CA,gBAA1C;;AACA,UAAMR,UAAU,GAAG,CAACqB,KAAD,EAAQF,GAAR,KAAgBpB,aAAa,CAACU,sBAAD,EAAyBa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,KAAlB,EAAyB;AAChGX,MAAAA,YAAY,EAAES;AADkF,KAAzB,CAAzB,CAAhD;;AAGA,WAAOb,OAAO,CAACY,OAAR,GAAkBjB,eAAe,CAACD,UAAD,CAAjC,GAAgDS,sBAAvD;AACD,GA5B8B;AAAA,CAAxB","sourcesContent":["import { createElement, forwardRef as forwardRefReact } from 'react';\nimport { useTranslation } from './useTranslation.js';\nimport { getDisplayName } from './utils.js';\nexport const withTranslation = (ns, options = {}) => function Extend(WrappedComponent) {\n  function I18nextWithTranslation({\n    forwardedRef,\n    ...rest\n  }) {\n    const [t, i18n, ready] = useTranslation(ns, {\n      ...rest,\n      keyPrefix: options.keyPrefix\n    });\n    const passDownProps = {\n      ...rest,\n      t,\n      i18n,\n      tReady: ready\n    };\n    if (options.withRef && forwardedRef) {\n      passDownProps.ref = forwardedRef;\n    } else if (!options.withRef && forwardedRef) {\n      passDownProps.forwardedRef = forwardedRef;\n    }\n    return createElement(WrappedComponent, passDownProps);\n  }\n  I18nextWithTranslation.displayName = `withI18nextTranslation(${getDisplayName(WrappedComponent)})`;\n  I18nextWithTranslation.WrappedComponent = WrappedComponent;\n  const forwardRef = (props, ref) => createElement(I18nextWithTranslation, Object.assign({}, props, {\n    forwardedRef: ref\n  }));\n  return options.withRef ? forwardRefReact(forwardRef) : I18nextWithTranslation;\n};"]},"metadata":{},"sourceType":"module"}