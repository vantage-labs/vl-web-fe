{"ast":null,"code":"import _objectSpread from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"axis\"];\nimport { supportsScrollTimeline } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { observeTimeline } from './observe.mjs';\nimport { scrollInfo } from './track.mjs';\n\nfunction scrollTimelineFallback(_ref) {\n  var source = _ref.source,\n      container = _ref.container,\n      _ref$axis = _ref.axis,\n      axis = _ref$axis === void 0 ? \"y\" : _ref$axis;\n  // Support legacy source argument. Deprecate later.\n  if (source) container = source; // ScrollTimeline records progress as a percentage CSSUnitValue\n\n  var currentTime = {\n    value: 0\n  };\n  var cancel = scrollInfo(function (info) {\n    currentTime.value = info[axis].progress * 100;\n  }, {\n    container: container,\n    axis: axis\n  });\n  return {\n    currentTime: currentTime,\n    cancel: cancel\n  };\n}\n\nvar timelineCache = new Map();\n\nfunction getTimeline() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      source = _ref2.source,\n      _ref2$container = _ref2.container,\n      container = _ref2$container === void 0 ? document.documentElement : _ref2$container,\n      _ref2$axis = _ref2.axis,\n      axis = _ref2$axis === void 0 ? \"y\" : _ref2$axis;\n\n  // Support legacy source argument. Deprecate later.\n  if (source) container = source;\n\n  if (!timelineCache.has(container)) {\n    timelineCache.set(container, {});\n  }\n\n  var elementCache = timelineCache.get(container);\n\n  if (!elementCache[axis]) {\n    elementCache[axis] = supportsScrollTimeline() ? new ScrollTimeline({\n      source: container,\n      axis: axis\n    }) : scrollTimelineFallback({\n      source: container,\n      axis: axis\n    });\n  }\n\n  return elementCache[axis];\n}\n/**\n * If the onScroll function has two arguments, it's expecting\n * more specific information about the scroll from scrollInfo.\n */\n\n\nfunction isOnScrollWithInfo(onScroll) {\n  return onScroll.length === 2;\n}\n/**\n * Currently, we only support element tracking with `scrollInfo`, though in\n * the future we can also offer ViewTimeline support.\n */\n\n\nfunction needsElementTracking(options) {\n  return options && (options.target || options.offset);\n}\n\nfunction scrollFunction(onScroll, options) {\n  if (isOnScrollWithInfo(onScroll) || needsElementTracking(options)) {\n    return scrollInfo(function (info) {\n      onScroll(info[options.axis].progress, info);\n    }, options);\n  } else {\n    return observeTimeline(onScroll, getTimeline(options));\n  }\n}\n\nfunction scrollAnimation(animation, options) {\n  animation.flatten();\n\n  if (needsElementTracking(options)) {\n    animation.pause();\n    return scrollInfo(function (info) {\n      animation.time = animation.duration * info[options.axis].progress;\n    }, options);\n  } else {\n    var timeline = getTimeline(options);\n\n    if (animation.attachTimeline) {\n      return animation.attachTimeline(timeline, function (valueAnimation) {\n        valueAnimation.pause();\n        return observeTimeline(function (progress) {\n          valueAnimation.time = valueAnimation.duration * progress;\n        }, timeline);\n      });\n    } else {\n      return noop;\n    }\n  }\n}\n\nfunction scroll(onScroll) {\n  var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref3$axis = _ref3.axis,\n      axis = _ref3$axis === void 0 ? \"y\" : _ref3$axis,\n      options = _objectWithoutProperties(_ref3, _excluded);\n\n  var optionsWithDefaults = _objectSpread({\n    axis: axis\n  }, options);\n\n  return typeof onScroll === \"function\" ? scrollFunction(onScroll, optionsWithDefaults) : scrollAnimation(onScroll, optionsWithDefaults);\n}\n\nexport { scroll };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/framer-motion/dist/es/render/dom/scroll/index.mjs"],"names":["supportsScrollTimeline","noop","observeTimeline","scrollInfo","scrollTimelineFallback","source","container","axis","currentTime","value","cancel","info","progress","timelineCache","Map","getTimeline","document","documentElement","has","set","elementCache","get","ScrollTimeline","isOnScrollWithInfo","onScroll","length","needsElementTracking","options","target","offset","scrollFunction","scrollAnimation","animation","flatten","pause","time","duration","timeline","attachTimeline","valueAnimation","scroll","optionsWithDefaults"],"mappings":"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","sourcesContent":["import { supportsScrollTimeline } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { observeTimeline } from './observe.mjs';\nimport { scrollInfo } from './track.mjs';\n\nfunction scrollTimelineFallback({ source, container, axis = \"y\", }) {\n    // Support legacy source argument. Deprecate later.\n    if (source)\n        container = source;\n    // ScrollTimeline records progress as a percentage CSSUnitValue\n    const currentTime = { value: 0 };\n    const cancel = scrollInfo((info) => {\n        currentTime.value = info[axis].progress * 100;\n    }, { container, axis });\n    return { currentTime, cancel };\n}\nconst timelineCache = new Map();\nfunction getTimeline({ source, container = document.documentElement, axis = \"y\", } = {}) {\n    // Support legacy source argument. Deprecate later.\n    if (source)\n        container = source;\n    if (!timelineCache.has(container)) {\n        timelineCache.set(container, {});\n    }\n    const elementCache = timelineCache.get(container);\n    if (!elementCache[axis]) {\n        elementCache[axis] = supportsScrollTimeline()\n            ? new ScrollTimeline({ source: container, axis })\n            : scrollTimelineFallback({ source: container, axis });\n    }\n    return elementCache[axis];\n}\n/**\n * If the onScroll function has two arguments, it's expecting\n * more specific information about the scroll from scrollInfo.\n */\nfunction isOnScrollWithInfo(onScroll) {\n    return onScroll.length === 2;\n}\n/**\n * Currently, we only support element tracking with `scrollInfo`, though in\n * the future we can also offer ViewTimeline support.\n */\nfunction needsElementTracking(options) {\n    return options && (options.target || options.offset);\n}\nfunction scrollFunction(onScroll, options) {\n    if (isOnScrollWithInfo(onScroll) || needsElementTracking(options)) {\n        return scrollInfo((info) => {\n            onScroll(info[options.axis].progress, info);\n        }, options);\n    }\n    else {\n        return observeTimeline(onScroll, getTimeline(options));\n    }\n}\nfunction scrollAnimation(animation, options) {\n    animation.flatten();\n    if (needsElementTracking(options)) {\n        animation.pause();\n        return scrollInfo((info) => {\n            animation.time = animation.duration * info[options.axis].progress;\n        }, options);\n    }\n    else {\n        const timeline = getTimeline(options);\n        if (animation.attachTimeline) {\n            return animation.attachTimeline(timeline, (valueAnimation) => {\n                valueAnimation.pause();\n                return observeTimeline((progress) => {\n                    valueAnimation.time = valueAnimation.duration * progress;\n                }, timeline);\n            });\n        }\n        else {\n            return noop;\n        }\n    }\n}\nfunction scroll(onScroll, { axis = \"y\", ...options } = {}) {\n    const optionsWithDefaults = { axis, ...options };\n    return typeof onScroll === \"function\"\n        ? scrollFunction(onScroll, optionsWithDefaults)\n        : scrollAnimation(onScroll, optionsWithDefaults);\n}\n\nexport { scroll };\n"]},"metadata":{},"sourceType":"module"}