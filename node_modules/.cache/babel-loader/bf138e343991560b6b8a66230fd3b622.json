{"ast":null,"code":"// packages/react/use-previous/src/usePrevious.tsx\nimport * as React from \"react\";\n\nfunction usePrevious(value) {\n  const ref = React.useRef({\n    value,\n    previous: value\n  });\n  return React.useMemo(() => {\n    if (ref.current.value !== value) {\n      ref.current.previous = ref.current.value;\n      ref.current.value = value;\n    }\n\n    return ref.current.previous;\n  }, [value]);\n}\n\nexport { usePrevious };","map":{"version":3,"mappings":";AAAA,YAAYA,KAAZ,MAAuB,OAAvB;;AAEA,SAASC,WAAT,CAAwBC,KAAxB,EAAkC;AAChC,QAAMC,MAAYH,aAAO;AAAEE,SAAF;AAASE,cAAUF;AAAnB,GAAP,CAAlB;AAKA,SAAaF,cAAQ,MAAM;AACzB,QAAIG,IAAIE,OAAJ,CAAYH,KAAZ,KAAsBA,KAA1B,EAAiC;AAC/BC,UAAIE,OAAJ,CAAYD,QAAZ,GAAuBD,IAAIE,OAAJ,CAAYH,KAAnC;AACAC,UAAIE,OAAJ,CAAYH,KAAZ,GAAoBA,KAApB;AACF;;AACA,WAAOC,IAAIE,OAAJ,CAAYD,QAAnB;AACF,GANa,EAMV,CAACF,KAAD,CANU,CAAb;AAOF","names":["React","usePrevious","value","ref","previous","current"],"sources":["/home/bahari/vl-web-fe/node_modules/@radix-ui/react-use-previous/src/usePrevious.tsx"],"sourcesContent":["import * as React from 'react';\n\nfunction usePrevious<T>(value: T) {\n  const ref = React.useRef({ value, previous: value });\n\n  // We compare values before making an update to ensure that\n  // a change has been made. This ensures the previous value is\n  // persisted correctly between renders.\n  return React.useMemo(() => {\n    if (ref.current.value !== value) {\n      ref.current.previous = ref.current.value;\n      ref.current.value = value;\n    }\n    return ref.current.previous;\n  }, [value]);\n}\n\nexport { usePrevious };\n"]},"metadata":{},"sourceType":"module"}