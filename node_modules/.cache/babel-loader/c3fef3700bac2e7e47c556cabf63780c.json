{"ast":null,"code":"import _classCallCheck from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps as _scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n  return window.getComputedStyle(element);\n}\n\nvar HTMLVisualElement = /*#__PURE__*/function (_DOMVisualElement) {\n  _inherits(HTMLVisualElement, _DOMVisualElement);\n\n  var _super = _createSuper(HTMLVisualElement);\n\n  function HTMLVisualElement() {\n    var _this;\n\n    _classCallCheck(this, HTMLVisualElement);\n\n    _this = _super.apply(this, arguments);\n    _this.type = \"html\";\n    _this.renderInstance = renderHTML;\n    return _this;\n  }\n\n  _createClass(HTMLVisualElement, [{\n    key: \"readValueFromInstance\",\n    value: function readValueFromInstance(instance, key) {\n      if (transformProps.has(key)) {\n        var defaultType = getDefaultValueType(key);\n        return defaultType ? defaultType.default || 0 : 0;\n      } else {\n        var computedStyle = getComputedStyle(instance);\n        var value = (isCSSVariableName(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;\n        return typeof value === \"string\" ? value.trim() : value;\n      }\n    }\n  }, {\n    key: \"measureInstanceViewportBox\",\n    value: function measureInstanceViewportBox(instance, _ref) {\n      var transformPagePoint = _ref.transformPagePoint;\n      return measureViewportBox(instance, transformPagePoint);\n    }\n  }, {\n    key: \"build\",\n    value: function build(renderState, latestValues, props) {\n      buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n  }, {\n    key: \"scrapeMotionValuesFromProps\",\n    value: function scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n      return _scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n  }]);\n\n  return HTMLVisualElement;\n}(DOMVisualElement);\n\nexport { HTMLVisualElement, getComputedStyle };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs"],"names":["buildHTMLStyles","isCSSVariableName","transformProps","scrapeMotionValuesFromProps","renderHTML","getDefaultValueType","measureViewportBox","DOMVisualElement","getComputedStyle","element","window","HTMLVisualElement","arguments","type","renderInstance","instance","key","has","defaultType","default","computedStyle","value","getPropertyValue","trim","transformPagePoint","renderState","latestValues","props","transformTemplate","prevProps","visualElement"],"mappings":";;;;AAAA,SAASA,eAAT,QAAgC,0BAAhC;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,2BAA2B,IAA3BA,4BAAT,QAA4C,kCAA5C;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,SAASC,kBAAT,QAAmC,oCAAnC;AACA,SAASC,gBAAT,QAAiC,6BAAjC;;AAEA,SAASC,gBAAT,CAA0BC,OAA1B,EAAmC;AAC/B,SAAOC,MAAM,CAACF,gBAAP,CAAwBC,OAAxB,CAAP;AACH;;IACKE,iB;;;;;AACF,+BAAc;AAAA;;AAAA;;AACV,+BAASC,SAAT;AACA,UAAKC,IAAL,GAAY,MAAZ;AACA,UAAKC,cAAL,GAAsBV,UAAtB;AAHU;AAIb;;;;WACD,+BAAsBW,QAAtB,EAAgCC,GAAhC,EAAqC;AACjC,UAAId,cAAc,CAACe,GAAf,CAAmBD,GAAnB,CAAJ,EAA6B;AACzB,YAAME,WAAW,GAAGb,mBAAmB,CAACW,GAAD,CAAvC;AACA,eAAOE,WAAW,GAAGA,WAAW,CAACC,OAAZ,IAAuB,CAA1B,GAA8B,CAAhD;AACH,OAHD,MAIK;AACD,YAAMC,aAAa,GAAGZ,gBAAgB,CAACO,QAAD,CAAtC;AACA,YAAMM,KAAK,GAAG,CAACpB,iBAAiB,CAACe,GAAD,CAAjB,GACTI,aAAa,CAACE,gBAAd,CAA+BN,GAA/B,CADS,GAETI,aAAa,CAACJ,GAAD,CAFL,KAEe,CAF7B;AAGA,eAAO,OAAOK,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACE,IAAN,EAA5B,GAA2CF,KAAlD;AACH;AACJ;;;WACD,oCAA2BN,QAA3B,QAA6D;AAAA,UAAtBS,kBAAsB,QAAtBA,kBAAsB;AACzD,aAAOlB,kBAAkB,CAACS,QAAD,EAAWS,kBAAX,CAAzB;AACH;;;WACD,eAAMC,WAAN,EAAmBC,YAAnB,EAAiCC,KAAjC,EAAwC;AACpC3B,MAAAA,eAAe,CAACyB,WAAD,EAAcC,YAAd,EAA4BC,KAAK,CAACC,iBAAlC,CAAf;AACH;;;WACD,qCAA4BD,KAA5B,EAAmCE,SAAnC,EAA8CC,aAA9C,EAA6D;AACzD,aAAO3B,4BAA2B,CAACwB,KAAD,EAAQE,SAAR,EAAmBC,aAAnB,CAAlC;AACH;;;;EA3B2BvB,gB;;AA8BhC,SAASI,iBAAT,EAA4BH,gBAA5B","sourcesContent":["import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n"]},"metadata":{},"sourceType":"module"}