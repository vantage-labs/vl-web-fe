{"ast":null,"code":"import { Fragment, isValidElement, cloneElement, createElement, Children } from 'react';\nimport HTML from 'html-parse-stringify';\nimport { isObject, isString, warn, warnOnce } from './utils.js';\nimport { getDefaults } from './defaults.js';\nimport { getI18n } from './i18nInstance.js';\n\nconst hasChildren = (node, checkLength) => {\n  if (!node) return false;\n  const base = node.props?.children ?? node.children;\n  if (checkLength) return base.length > 0;\n  return !!base;\n};\n\nconst getChildren = node => {\n  if (!node) return [];\n  const children = node.props?.children ?? node.children;\n  return node.props?.i18nIsDynamicList ? getAsArray(children) : children;\n};\n\nconst hasValidReactChildren = children => Array.isArray(children) && children.every(isValidElement);\n\nconst getAsArray = data => Array.isArray(data) ? data : [data];\n\nconst mergeProps = (source, target) => {\n  const newTarget = { ...target\n  };\n  newTarget.props = Object.assign(source.props, target.props);\n  return newTarget;\n};\n\nexport const nodesToString = (children, i18nOptions, i18n, i18nKey) => {\n  if (!children) return '';\n  let stringNode = '';\n  const childrenArray = getAsArray(children);\n  const keepArray = i18nOptions?.transSupportBasicHtmlNodes ? i18nOptions.transKeepBasicHtmlNodesFor ?? [] : [];\n  childrenArray.forEach((child, childIndex) => {\n    if (isString(child)) {\n      stringNode += `${child}`;\n      return;\n    }\n\n    if (isValidElement(child)) {\n      const {\n        props,\n        type\n      } = child;\n      const childPropsCount = Object.keys(props).length;\n      const shouldKeepChild = keepArray.indexOf(type) > -1;\n      const childChildren = props.children;\n\n      if (!childChildren && shouldKeepChild && !childPropsCount) {\n        stringNode += `<${type}/>`;\n        return;\n      }\n\n      if (!childChildren && (!shouldKeepChild || childPropsCount) || props.i18nIsDynamicList) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n        return;\n      }\n\n      if (shouldKeepChild && childPropsCount === 1 && isString(childChildren)) {\n        stringNode += `<${type}>${childChildren}</${type}>`;\n        return;\n      }\n\n      const content = nodesToString(childChildren, i18nOptions, i18n, i18nKey);\n      stringNode += `<${childIndex}>${content}</${childIndex}>`;\n      return;\n    }\n\n    if (child === null) {\n      warn(i18n, 'TRANS_NULL_VALUE', `Passed in a null value as child`, {\n        i18nKey\n      });\n      return;\n    }\n\n    if (isObject(child)) {\n      const {\n        format,\n        ...clone\n      } = child;\n      const keys = Object.keys(clone);\n\n      if (keys.length === 1) {\n        const value = format ? `${keys[0]}, ${format}` : keys[0];\n        stringNode += `{{${value}}}`;\n        return;\n      }\n\n      warn(i18n, 'TRANS_INVALID_OBJ', `Invalid child - Object should only have keys {{ value, format }} (format is optional).`, {\n        i18nKey,\n        child\n      });\n      return;\n    }\n\n    warn(i18n, 'TRANS_INVALID_VAR', `Passed in a variable like {number} - pass variables for interpolation as full objects like {{number}}.`, {\n      i18nKey,\n      child\n    });\n  });\n  return stringNode;\n};\n\nconst renderNodes = (children, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) => {\n  if (targetString === '') return [];\n  const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map(keep => `<${keep}`).join('|')).test(targetString);\n  if (!children && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];\n  const data = {};\n\n  const getData = childs => {\n    const childrenArray = getAsArray(childs);\n    childrenArray.forEach(child => {\n      if (isString(child)) return;\n      if (hasChildren(child)) getData(getChildren(child));else if (isObject(child) && !isValidElement(child)) Object.assign(data, child);\n    });\n  };\n\n  getData(children);\n  const ast = HTML.parse(`<0>${targetString}</0>`);\n  const opts = { ...data,\n    ...combinedTOpts\n  };\n\n  const renderInner = (child, node, rootReactNode) => {\n    const childs = getChildren(child);\n    const mappedChildren = mapAST(childs, node.children, rootReactNode);\n    return hasValidReactChildren(childs) && mappedChildren.length === 0 || child.props?.i18nIsDynamicList ? childs : mappedChildren;\n  };\n\n  const pushTranslatedJSX = (child, inner, mem, i, isVoid) => {\n    if (child.dummy) {\n      child.children = inner;\n      mem.push(cloneElement(child, {\n        key: i\n      }, isVoid ? undefined : inner));\n    } else {\n      mem.push(...Children.map([child], c => {\n        const props = { ...c.props\n        };\n        delete props.i18nIsDynamicList;\n        return createElement(c.type, { ...props,\n          key: i,\n          ref: c.ref\n        }, isVoid ? null : inner);\n      }));\n    }\n  };\n\n  const mapAST = (reactNode, astNode, rootReactNode) => {\n    const reactNodes = getAsArray(reactNode);\n    const astNodes = getAsArray(astNode);\n    return astNodes.reduce((mem, node, i) => {\n      const translationContent = node.children?.[0]?.content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n\n      if (node.type === 'tag') {\n        let tmp = reactNodes[parseInt(node.name, 10)];\n        if (rootReactNode.length === 1 && !tmp) tmp = rootReactNode[0][node.name];\n        if (!tmp) tmp = {};\n        const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n          props: node.attrs\n        }, tmp) : tmp;\n        const isElement = isValidElement(child);\n        const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n        const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && isObject(child) && child.dummy && !isElement;\n        const isKnownComponent = isObject(children) && Object.hasOwnProperty.call(children, node.name);\n\n        if (isString(child)) {\n          const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n          mem.push(value);\n        } else if (hasChildren(child) || isValidTranslationWithChildren) {\n          const inner = renderInner(child, node, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (isEmptyTransWithHTML) {\n          const inner = mapAST(reactNodes, node.children, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (isKnownComponent) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }));\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }, inner));\n            }\n          } else if (node.voidElement) {\n            mem.push(`<${node.name} />`);\n          } else {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            mem.push(`<${node.name}>${inner}</${node.name}>`);\n          }\n        } else if (isObject(child) && !isElement) {\n          const content = node.children[0] ? translationContent : null;\n          if (content) mem.push(content);\n        } else {\n          pushTranslatedJSX(child, translationContent, mem, i, node.children.length !== 1 || !translationContent);\n        }\n      } else if (node.type === 'text') {\n        const wrapTextNodes = i18nOptions.transWrapTextNodes;\n        const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n\n        if (wrapTextNodes) {\n          mem.push(createElement(wrapTextNodes, {\n            key: `${node.name}-${i}`\n          }, content));\n        } else {\n          mem.push(content);\n        }\n      }\n\n      return mem;\n    }, []);\n  };\n\n  const result = mapAST([{\n    dummy: true,\n    children: children || []\n  }], ast, getAsArray(children || []));\n  return getChildren(result[0]);\n};\n\nconst fixComponentProps = (component, index, translation) => {\n  const componentKey = component.key || index;\n  const comp = cloneElement(component, {\n    key: componentKey\n  });\n\n  if (!comp.props || !comp.props.children || translation.indexOf(`${index}/>`) < 0 && translation.indexOf(`${index} />`) < 0) {\n    return comp;\n  }\n\n  function Componentized() {\n    return createElement(Fragment, null, comp);\n  }\n\n  return createElement(Componentized);\n};\n\nconst generateArrayComponents = (components, translation) => components.map((c, index) => fixComponentProps(c, index, translation));\n\nconst generateObjectComponents = (components, translation) => {\n  const componentMap = {};\n  Object.keys(components).forEach(c => {\n    Object.assign(componentMap, {\n      [c]: fixComponentProps(components[c], c, translation)\n    });\n  });\n  return componentMap;\n};\n\nconst generateComponents = (components, translation, i18n, i18nKey) => {\n  if (!components) return null;\n\n  if (Array.isArray(components)) {\n    return generateArrayComponents(components, translation);\n  }\n\n  if (isObject(components)) {\n    return generateObjectComponents(components, translation);\n  }\n\n  warnOnce(i18n, 'TRANS_INVALID_COMPONENTS', `<Trans /> \"components\" prop expects an object or array`, {\n    i18nKey\n  });\n  return null;\n};\n\nexport function Trans(_ref) {\n  let {\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions = {},\n    values,\n    defaults,\n    components,\n    ns,\n    i18n: i18nFromProps,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  } = _ref;\n  const i18n = i18nFromProps || getI18n();\n\n  if (!i18n) {\n    warnOnce(i18n, 'NO_I18NEXT_INSTANCE', `Trans: You need to pass in an i18next instance using i18nextReactModule`, {\n      i18nKey\n    });\n    return children;\n  }\n\n  const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n\n  const reactI18nextOptions = { ...getDefaults(),\n    ...i18n.options?.react\n  };\n  let namespaces = ns || t.ns || i18n.options?.defaultNS;\n  namespaces = isString(namespaces) ? [namespaces] : namespaces || ['translation'];\n  const nodeAsString = nodesToString(children, reactI18nextOptions, i18n, i18nKey);\n  const defaultValue = defaults || nodeAsString || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n  const {\n    hashTransKey\n  } = reactI18nextOptions;\n  const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);\n\n  if (i18n.options?.interpolation?.defaultVariables) {\n    values = values && Object.keys(values).length > 0 ? { ...values,\n      ...i18n.options.interpolation.defaultVariables\n    } : { ...i18n.options.interpolation.defaultVariables\n    };\n  }\n\n  const interpolationOverride = values || count !== undefined && !i18n.options?.interpolation?.alwaysFormat || !children ? tOptions.interpolation : {\n    interpolation: { ...tOptions.interpolation,\n      prefix: '#$?',\n      suffix: '?$#'\n    }\n  };\n  const combinedTOpts = { ...tOptions,\n    context: context || tOptions.context,\n    count,\n    ...values,\n    ...interpolationOverride,\n    defaultValue,\n    ns: namespaces\n  };\n  const translation = key ? t(key, combinedTOpts) : defaultValue;\n  const generatedComponents = generateComponents(components, translation, i18n, i18nKey);\n  const content = renderNodes(generatedComponents || children, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n  const useAsParent = parent ?? reactI18nextOptions.defaultTransParent;\n  return useAsParent ? createElement(useAsParent, additionalProps, content) : content;\n}","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/react-i18next/dist/es/TransWithoutContext.js"],"names":["Fragment","isValidElement","cloneElement","createElement","Children","HTML","isObject","isString","warn","warnOnce","getDefaults","getI18n","hasChildren","node","checkLength","base","props","children","length","getChildren","i18nIsDynamicList","getAsArray","hasValidReactChildren","Array","isArray","every","data","mergeProps","source","target","newTarget","Object","assign","nodesToString","i18nOptions","i18n","i18nKey","stringNode","childrenArray","keepArray","transSupportBasicHtmlNodes","transKeepBasicHtmlNodesFor","forEach","child","childIndex","type","childPropsCount","keys","shouldKeepChild","indexOf","childChildren","content","format","clone","value","renderNodes","targetString","combinedTOpts","shouldUnescape","emptyChildrenButNeedsHandling","RegExp","map","keep","join","test","getData","childs","ast","parse","opts","renderInner","rootReactNode","mappedChildren","mapAST","pushTranslatedJSX","inner","mem","i","isVoid","dummy","push","key","undefined","c","ref","reactNode","astNode","reactNodes","astNodes","reduce","translationContent","services","interpolator","interpolate","language","tmp","parseInt","name","attrs","isElement","isValidTranslationWithChildren","voidElement","isEmptyTransWithHTML","isKnownComponent","hasOwnProperty","call","Number","isNaN","parseFloat","wrapTextNodes","transWrapTextNodes","unescape","result","fixComponentProps","component","index","translation","componentKey","comp","Componentized","generateArrayComponents","components","generateObjectComponents","componentMap","generateComponents","Trans","count","parent","context","tOptions","values","defaults","ns","i18nFromProps","t","tFromProps","additionalProps","bind","k","reactI18nextOptions","options","react","namespaces","defaultNS","nodeAsString","defaultValue","transEmptyNodeValue","hashTransKey","interpolation","defaultVariables","interpolationOverride","alwaysFormat","prefix","suffix","generatedComponents","useAsParent","defaultTransParent"],"mappings":"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","sourcesContent":["import { Fragment, isValidElement, cloneElement, createElement, Children } from 'react';\nimport HTML from 'html-parse-stringify';\nimport { isObject, isString, warn, warnOnce } from './utils.js';\nimport { getDefaults } from './defaults.js';\nimport { getI18n } from './i18nInstance.js';\nconst hasChildren = (node, checkLength) => {\n  if (!node) return false;\n  const base = node.props?.children ?? node.children;\n  if (checkLength) return base.length > 0;\n  return !!base;\n};\nconst getChildren = node => {\n  if (!node) return [];\n  const children = node.props?.children ?? node.children;\n  return node.props?.i18nIsDynamicList ? getAsArray(children) : children;\n};\nconst hasValidReactChildren = children => Array.isArray(children) && children.every(isValidElement);\nconst getAsArray = data => Array.isArray(data) ? data : [data];\nconst mergeProps = (source, target) => {\n  const newTarget = {\n    ...target\n  };\n  newTarget.props = Object.assign(source.props, target.props);\n  return newTarget;\n};\nexport const nodesToString = (children, i18nOptions, i18n, i18nKey) => {\n  if (!children) return '';\n  let stringNode = '';\n  const childrenArray = getAsArray(children);\n  const keepArray = i18nOptions?.transSupportBasicHtmlNodes ? i18nOptions.transKeepBasicHtmlNodesFor ?? [] : [];\n  childrenArray.forEach((child, childIndex) => {\n    if (isString(child)) {\n      stringNode += `${child}`;\n      return;\n    }\n    if (isValidElement(child)) {\n      const {\n        props,\n        type\n      } = child;\n      const childPropsCount = Object.keys(props).length;\n      const shouldKeepChild = keepArray.indexOf(type) > -1;\n      const childChildren = props.children;\n      if (!childChildren && shouldKeepChild && !childPropsCount) {\n        stringNode += `<${type}/>`;\n        return;\n      }\n      if (!childChildren && (!shouldKeepChild || childPropsCount) || props.i18nIsDynamicList) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n        return;\n      }\n      if (shouldKeepChild && childPropsCount === 1 && isString(childChildren)) {\n        stringNode += `<${type}>${childChildren}</${type}>`;\n        return;\n      }\n      const content = nodesToString(childChildren, i18nOptions, i18n, i18nKey);\n      stringNode += `<${childIndex}>${content}</${childIndex}>`;\n      return;\n    }\n    if (child === null) {\n      warn(i18n, 'TRANS_NULL_VALUE', `Passed in a null value as child`, {\n        i18nKey\n      });\n      return;\n    }\n    if (isObject(child)) {\n      const {\n        format,\n        ...clone\n      } = child;\n      const keys = Object.keys(clone);\n      if (keys.length === 1) {\n        const value = format ? `${keys[0]}, ${format}` : keys[0];\n        stringNode += `{{${value}}}`;\n        return;\n      }\n      warn(i18n, 'TRANS_INVALID_OBJ', `Invalid child - Object should only have keys {{ value, format }} (format is optional).`, {\n        i18nKey,\n        child\n      });\n      return;\n    }\n    warn(i18n, 'TRANS_INVALID_VAR', `Passed in a variable like {number} - pass variables for interpolation as full objects like {{number}}.`, {\n      i18nKey,\n      child\n    });\n  });\n  return stringNode;\n};\nconst renderNodes = (children, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) => {\n  if (targetString === '') return [];\n  const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map(keep => `<${keep}`).join('|')).test(targetString);\n  if (!children && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];\n  const data = {};\n  const getData = childs => {\n    const childrenArray = getAsArray(childs);\n    childrenArray.forEach(child => {\n      if (isString(child)) return;\n      if (hasChildren(child)) getData(getChildren(child));else if (isObject(child) && !isValidElement(child)) Object.assign(data, child);\n    });\n  };\n  getData(children);\n  const ast = HTML.parse(`<0>${targetString}</0>`);\n  const opts = {\n    ...data,\n    ...combinedTOpts\n  };\n  const renderInner = (child, node, rootReactNode) => {\n    const childs = getChildren(child);\n    const mappedChildren = mapAST(childs, node.children, rootReactNode);\n    return hasValidReactChildren(childs) && mappedChildren.length === 0 || child.props?.i18nIsDynamicList ? childs : mappedChildren;\n  };\n  const pushTranslatedJSX = (child, inner, mem, i, isVoid) => {\n    if (child.dummy) {\n      child.children = inner;\n      mem.push(cloneElement(child, {\n        key: i\n      }, isVoid ? undefined : inner));\n    } else {\n      mem.push(...Children.map([child], c => {\n        const props = {\n          ...c.props\n        };\n        delete props.i18nIsDynamicList;\n        return createElement(c.type, {\n          ...props,\n          key: i,\n          ref: c.ref\n        }, isVoid ? null : inner);\n      }));\n    }\n  };\n  const mapAST = (reactNode, astNode, rootReactNode) => {\n    const reactNodes = getAsArray(reactNode);\n    const astNodes = getAsArray(astNode);\n    return astNodes.reduce((mem, node, i) => {\n      const translationContent = node.children?.[0]?.content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n      if (node.type === 'tag') {\n        let tmp = reactNodes[parseInt(node.name, 10)];\n        if (rootReactNode.length === 1 && !tmp) tmp = rootReactNode[0][node.name];\n        if (!tmp) tmp = {};\n        const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n          props: node.attrs\n        }, tmp) : tmp;\n        const isElement = isValidElement(child);\n        const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n        const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && isObject(child) && child.dummy && !isElement;\n        const isKnownComponent = isObject(children) && Object.hasOwnProperty.call(children, node.name);\n        if (isString(child)) {\n          const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n          mem.push(value);\n        } else if (hasChildren(child) || isValidTranslationWithChildren) {\n          const inner = renderInner(child, node, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (isEmptyTransWithHTML) {\n          const inner = mapAST(reactNodes, node.children, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (isKnownComponent) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }));\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }, inner));\n            }\n          } else if (node.voidElement) {\n            mem.push(`<${node.name} />`);\n          } else {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            mem.push(`<${node.name}>${inner}</${node.name}>`);\n          }\n        } else if (isObject(child) && !isElement) {\n          const content = node.children[0] ? translationContent : null;\n          if (content) mem.push(content);\n        } else {\n          pushTranslatedJSX(child, translationContent, mem, i, node.children.length !== 1 || !translationContent);\n        }\n      } else if (node.type === 'text') {\n        const wrapTextNodes = i18nOptions.transWrapTextNodes;\n        const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n        if (wrapTextNodes) {\n          mem.push(createElement(wrapTextNodes, {\n            key: `${node.name}-${i}`\n          }, content));\n        } else {\n          mem.push(content);\n        }\n      }\n      return mem;\n    }, []);\n  };\n  const result = mapAST([{\n    dummy: true,\n    children: children || []\n  }], ast, getAsArray(children || []));\n  return getChildren(result[0]);\n};\nconst fixComponentProps = (component, index, translation) => {\n  const componentKey = component.key || index;\n  const comp = cloneElement(component, {\n    key: componentKey\n  });\n  if (!comp.props || !comp.props.children || translation.indexOf(`${index}/>`) < 0 && translation.indexOf(`${index} />`) < 0) {\n    return comp;\n  }\n  function Componentized() {\n    return createElement(Fragment, null, comp);\n  }\n  return createElement(Componentized);\n};\nconst generateArrayComponents = (components, translation) => components.map((c, index) => fixComponentProps(c, index, translation));\nconst generateObjectComponents = (components, translation) => {\n  const componentMap = {};\n  Object.keys(components).forEach(c => {\n    Object.assign(componentMap, {\n      [c]: fixComponentProps(components[c], c, translation)\n    });\n  });\n  return componentMap;\n};\nconst generateComponents = (components, translation, i18n, i18nKey) => {\n  if (!components) return null;\n  if (Array.isArray(components)) {\n    return generateArrayComponents(components, translation);\n  }\n  if (isObject(components)) {\n    return generateObjectComponents(components, translation);\n  }\n  warnOnce(i18n, 'TRANS_INVALID_COMPONENTS', `<Trans /> \"components\" prop expects an object or array`, {\n    i18nKey\n  });\n  return null;\n};\nexport function Trans({\n  children,\n  count,\n  parent,\n  i18nKey,\n  context,\n  tOptions = {},\n  values,\n  defaults,\n  components,\n  ns,\n  i18n: i18nFromProps,\n  t: tFromProps,\n  shouldUnescape,\n  ...additionalProps\n}) {\n  const i18n = i18nFromProps || getI18n();\n  if (!i18n) {\n    warnOnce(i18n, 'NO_I18NEXT_INSTANCE', `Trans: You need to pass in an i18next instance using i18nextReactModule`, {\n      i18nKey\n    });\n    return children;\n  }\n  const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n  const reactI18nextOptions = {\n    ...getDefaults(),\n    ...i18n.options?.react\n  };\n  let namespaces = ns || t.ns || i18n.options?.defaultNS;\n  namespaces = isString(namespaces) ? [namespaces] : namespaces || ['translation'];\n  const nodeAsString = nodesToString(children, reactI18nextOptions, i18n, i18nKey);\n  const defaultValue = defaults || nodeAsString || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n  const {\n    hashTransKey\n  } = reactI18nextOptions;\n  const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);\n  if (i18n.options?.interpolation?.defaultVariables) {\n    values = values && Object.keys(values).length > 0 ? {\n      ...values,\n      ...i18n.options.interpolation.defaultVariables\n    } : {\n      ...i18n.options.interpolation.defaultVariables\n    };\n  }\n  const interpolationOverride = values || count !== undefined && !i18n.options?.interpolation?.alwaysFormat || !children ? tOptions.interpolation : {\n    interpolation: {\n      ...tOptions.interpolation,\n      prefix: '#$?',\n      suffix: '?$#'\n    }\n  };\n  const combinedTOpts = {\n    ...tOptions,\n    context: context || tOptions.context,\n    count,\n    ...values,\n    ...interpolationOverride,\n    defaultValue,\n    ns: namespaces\n  };\n  const translation = key ? t(key, combinedTOpts) : defaultValue;\n  const generatedComponents = generateComponents(components, translation, i18n, i18nKey);\n  const content = renderNodes(generatedComponents || children, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n  const useAsParent = parent ?? reactI18nextOptions.defaultTransParent;\n  return useAsParent ? createElement(useAsParent, additionalProps, content) : content;\n}"]},"metadata":{},"sourceType":"module"}