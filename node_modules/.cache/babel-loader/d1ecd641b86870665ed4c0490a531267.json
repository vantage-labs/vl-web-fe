{"ast":null,"code":"import { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport { getI18n, getDefaults, ReportNamespaces, I18nContext } from './context.js';\nimport { warnOnce, loadNamespaces, loadLanguages, hasLoadedNamespace, isString, isObject } from './utils.js';\n\nconst usePrevious = (value, ignore) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = ignore ? ref.current : value;\n  }, [value, ignore]);\n  return ref.current;\n};\n\nconst alwaysNewT = (i18n, language, namespace, keyPrefix) => i18n.getFixedT(language, namespace, keyPrefix);\n\nconst useMemoizedT = (i18n, language, namespace, keyPrefix) => useCallback(alwaysNewT(i18n, language, namespace, keyPrefix), [i18n, language, namespace, keyPrefix]);\n\nexport const useTranslation = function (ns) {\n  let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = useContext(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();\n\n  if (!i18n) {\n    warnOnce(i18n, 'NO_I18NEXT_INSTANCE', 'useTranslation: You will need to pass in an i18next instance by using initReactI18next');\n\n    const notReadyT = (k, optsOrDefaultValue) => {\n      if (isString(optsOrDefaultValue)) return optsOrDefaultValue;\n      if (isObject(optsOrDefaultValue) && isString(optsOrDefaultValue.defaultValue)) return optsOrDefaultValue.defaultValue;\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n\n    const retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n\n  if (i18n.options.react?.wait) warnOnce(i18n, 'DEPRECATED_OPTION', 'useTranslation: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n  const i18nOptions = { ...getDefaults(),\n    ...i18n.options.react,\n    ...props\n  };\n  const {\n    useSuspense,\n    keyPrefix\n  } = i18nOptions;\n  let namespaces = ns || defaultNSFromContext || i18n.options?.defaultNS;\n  namespaces = isString(namespaces) ? [namespaces] : namespaces || ['translation'];\n  i18n.reportNamespaces.addUsedNamespaces?.(namespaces);\n  const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(n => hasLoadedNamespace(n, i18n, i18nOptions));\n  const memoGetT = useMemoizedT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n\n  const getT = () => memoGetT;\n\n  const getNewT = () => alwaysNewT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n\n  const [t, setT] = useState(getT);\n  let joinedNS = namespaces.join();\n  if (props.lng) joinedNS = `${props.lng}${joinedNS}`;\n  const previousJoinedNS = usePrevious(joinedNS);\n  const isMounted = useRef(true);\n  useEffect(() => {\n    const {\n      bindI18n,\n      bindI18nStore\n    } = i18nOptions;\n    isMounted.current = true;\n\n    if (!ready && !useSuspense) {\n      if (props.lng) {\n        loadLanguages(i18n, props.lng, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      } else {\n        loadNamespaces(i18n, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      }\n    }\n\n    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n      setT(getNewT);\n    }\n\n    const boundReset = () => {\n      if (isMounted.current) setT(getNewT);\n    };\n\n    if (bindI18n) i18n?.on(bindI18n, boundReset);\n    if (bindI18nStore) i18n?.store.on(bindI18nStore, boundReset);\n    return () => {\n      isMounted.current = false;\n      if (i18n) bindI18n?.split(' ').forEach(e => i18n.off(e, boundReset));\n      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(e => i18n.store.off(e, boundReset));\n    };\n  }, [i18n, joinedNS]);\n  useEffect(() => {\n    if (isMounted.current && ready) {\n      setT(getT);\n    }\n  }, [i18n, keyPrefix, ready]);\n  const ret = [t, i18n, ready];\n  ret.t = t;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready) return ret;\n  if (!ready && !useSuspense) return ret;\n  throw new Promise(resolve => {\n    if (props.lng) {\n      loadLanguages(i18n, props.lng, namespaces, () => resolve());\n    } else {\n      loadNamespaces(i18n, namespaces, () => resolve());\n    }\n  });\n};","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/react-i18next/dist/es/useTranslation.js"],"names":["useState","useEffect","useContext","useRef","useCallback","getI18n","getDefaults","ReportNamespaces","I18nContext","warnOnce","loadNamespaces","loadLanguages","hasLoadedNamespace","isString","isObject","usePrevious","value","ignore","ref","current","alwaysNewT","i18n","language","namespace","keyPrefix","getFixedT","useMemoizedT","useTranslation","ns","props","i18nFromProps","i18nFromContext","defaultNS","defaultNSFromContext","reportNamespaces","notReadyT","k","optsOrDefaultValue","defaultValue","Array","isArray","length","retNotReady","t","ready","options","react","wait","i18nOptions","useSuspense","namespaces","addUsedNamespaces","isInitialized","initializedStoreOnce","every","n","memoGetT","lng","nsMode","getT","getNewT","setT","joinedNS","join","previousJoinedNS","isMounted","bindI18n","bindI18nStore","boundReset","on","store","split","forEach","e","off","ret","Promise","resolve"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport { getI18n, getDefaults, ReportNamespaces, I18nContext } from './context.js';\nimport { warnOnce, loadNamespaces, loadLanguages, hasLoadedNamespace, isString, isObject } from './utils.js';\nconst usePrevious = (value, ignore) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = ignore ? ref.current : value;\n  }, [value, ignore]);\n  return ref.current;\n};\nconst alwaysNewT = (i18n, language, namespace, keyPrefix) => i18n.getFixedT(language, namespace, keyPrefix);\nconst useMemoizedT = (i18n, language, namespace, keyPrefix) => useCallback(alwaysNewT(i18n, language, namespace, keyPrefix), [i18n, language, namespace, keyPrefix]);\nexport const useTranslation = (ns, props = {}) => {\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = useContext(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();\n  if (!i18n) {\n    warnOnce(i18n, 'NO_I18NEXT_INSTANCE', 'useTranslation: You will need to pass in an i18next instance by using initReactI18next');\n    const notReadyT = (k, optsOrDefaultValue) => {\n      if (isString(optsOrDefaultValue)) return optsOrDefaultValue;\n      if (isObject(optsOrDefaultValue) && isString(optsOrDefaultValue.defaultValue)) return optsOrDefaultValue.defaultValue;\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n    const retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n  if (i18n.options.react?.wait) warnOnce(i18n, 'DEPRECATED_OPTION', 'useTranslation: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n  const i18nOptions = {\n    ...getDefaults(),\n    ...i18n.options.react,\n    ...props\n  };\n  const {\n    useSuspense,\n    keyPrefix\n  } = i18nOptions;\n  let namespaces = ns || defaultNSFromContext || i18n.options?.defaultNS;\n  namespaces = isString(namespaces) ? [namespaces] : namespaces || ['translation'];\n  i18n.reportNamespaces.addUsedNamespaces?.(namespaces);\n  const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(n => hasLoadedNamespace(n, i18n, i18nOptions));\n  const memoGetT = useMemoizedT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  const getT = () => memoGetT;\n  const getNewT = () => alwaysNewT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  const [t, setT] = useState(getT);\n  let joinedNS = namespaces.join();\n  if (props.lng) joinedNS = `${props.lng}${joinedNS}`;\n  const previousJoinedNS = usePrevious(joinedNS);\n  const isMounted = useRef(true);\n  useEffect(() => {\n    const {\n      bindI18n,\n      bindI18nStore\n    } = i18nOptions;\n    isMounted.current = true;\n    if (!ready && !useSuspense) {\n      if (props.lng) {\n        loadLanguages(i18n, props.lng, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      } else {\n        loadNamespaces(i18n, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      }\n    }\n    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n      setT(getNewT);\n    }\n    const boundReset = () => {\n      if (isMounted.current) setT(getNewT);\n    };\n    if (bindI18n) i18n?.on(bindI18n, boundReset);\n    if (bindI18nStore) i18n?.store.on(bindI18nStore, boundReset);\n    return () => {\n      isMounted.current = false;\n      if (i18n) bindI18n?.split(' ').forEach(e => i18n.off(e, boundReset));\n      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(e => i18n.store.off(e, boundReset));\n    };\n  }, [i18n, joinedNS]);\n  useEffect(() => {\n    if (isMounted.current && ready) {\n      setT(getT);\n    }\n  }, [i18n, keyPrefix, ready]);\n  const ret = [t, i18n, ready];\n  ret.t = t;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready) return ret;\n  if (!ready && !useSuspense) return ret;\n  throw new Promise(resolve => {\n    if (props.lng) {\n      loadLanguages(i18n, props.lng, namespaces, () => resolve());\n    } else {\n      loadNamespaces(i18n, namespaces, () => resolve());\n    }\n  });\n};"]},"metadata":{},"sourceType":"module"}