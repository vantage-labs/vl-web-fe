{"ast":null,"code":"// packages/react/id/src/id.tsx\nimport * as React from \"react\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\n\nvar useReactId = React[\"useId\".toString()] || (() => void 0);\n\nvar count = 0;\n\nfunction useId(deterministicId) {\n  const [id, setId] = React.useState(useReactId());\n  useLayoutEffect(() => {\n    if (!deterministicId) setId(reactId => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : \"\");\n}\n\nexport { useId };","map":{"version":3,"mappings":";AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,eAAT,QAAgC,mCAAhC;;AAGA,IAAMC,aAAcF,MAAc,QAAQG,QAAR,EAAd,MAAsC,MAAM,MAA5C,CAApB;;AACA,IAAIC,QAAQ,CAAZ;;AAEA,SAASC,KAAT,CAAeC,eAAf,EAAiD;AAC/C,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAoBR,eAA6BE,YAA7B,CAA1B;AAEAD,kBAAgB,MAAM;AACpB,QAAI,CAACK,eAAL,EAAsBE,MAAOC,OAAD,IAAaA,WAAWC,OAAON,OAAP,CAA9B;AACxB,GAFA,EAEG,CAACE,eAAD,CAFH;AAGA,SAAOA,oBAAoBC,KAAK,SAASA,EAAE,EAAhB,GAAqB,EAAzC,CAAP;AACF","names":["React","useLayoutEffect","useReactId","toString","count","useId","deterministicId","id","setId","reactId","String"],"sources":["/home/bahari/vl-web-fe/node_modules/@radix-ui/react-id/src/id.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n// We `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\nconst useReactId = (React as any)['useId'.toString()] || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\nexport { useId };\n"]},"metadata":{},"sourceType":"module"}