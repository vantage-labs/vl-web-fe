{"ast":null,"code":"import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes) {\n  let {\n    delay = 0,\n    duration = 300,\n    repeat = 0,\n    repeatType = \"loop\",\n    ease = \"easeInOut\",\n    times\n  } = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const keyframeOptions = {\n    [valueName]: keyframes\n  };\n  if (times) keyframeOptions.offset = times;\n  const easing = mapEasingToNativeEasing(ease, duration);\n  /**\n   * If this is an easing array, apply to keyframes, not animation as a whole\n   */\n\n  if (Array.isArray(easing)) keyframeOptions.easing = easing;\n  return element.animate(keyframeOptions, {\n    delay,\n    duration,\n    easing: !Array.isArray(easing) ? easing : \"linear\",\n    fill: \"both\",\n    iterations: repeat + 1,\n    direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\"\n  });\n}\n\nexport { startWaapiAnimation };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs"],"names":["mapEasingToNativeEasing","startWaapiAnimation","element","valueName","keyframes","delay","duration","repeat","repeatType","ease","times","keyframeOptions","offset","easing","Array","isArray","animate","fill","iterations","direction"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,YAAxC;;AAEA,SAASC,mBAAT,CAA6BC,OAA7B,EAAsCC,SAAtC,EAAiDC,SAAjD,EAA6J;AAAA,MAAjG;AAAEC,IAAAA,KAAK,GAAG,CAAV;AAAaC,IAAAA,QAAQ,GAAG,GAAxB;AAA6BC,IAAAA,MAAM,GAAG,CAAtC;AAAyCC,IAAAA,UAAU,GAAG,MAAtD;AAA8DC,IAAAA,IAAI,GAAG,WAArE;AAAkFC,IAAAA;AAAlF,GAAiG,uEAAJ,EAAI;AACzJ,QAAMC,eAAe,GAAG;AAAE,KAACR,SAAD,GAAaC;AAAf,GAAxB;AACA,MAAIM,KAAJ,EACIC,eAAe,CAACC,MAAhB,GAAyBF,KAAzB;AACJ,QAAMG,MAAM,GAAGb,uBAAuB,CAACS,IAAD,EAAOH,QAAP,CAAtC;AACA;AACJ;AACA;;AACI,MAAIQ,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAJ,EACIF,eAAe,CAACE,MAAhB,GAAyBA,MAAzB;AACJ,SAAOX,OAAO,CAACc,OAAR,CAAgBL,eAAhB,EAAiC;AACpCN,IAAAA,KADoC;AAEpCC,IAAAA,QAFoC;AAGpCO,IAAAA,MAAM,EAAE,CAACC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAD,GAAyBA,MAAzB,GAAkC,QAHN;AAIpCI,IAAAA,IAAI,EAAE,MAJ8B;AAKpCC,IAAAA,UAAU,EAAEX,MAAM,GAAG,CALe;AAMpCY,IAAAA,SAAS,EAAEX,UAAU,KAAK,SAAf,GAA2B,WAA3B,GAAyC;AANhB,GAAjC,CAAP;AAQH;;AAED,SAASP,mBAAT","sourcesContent":["import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n"]},"metadata":{},"sourceType":"module"}