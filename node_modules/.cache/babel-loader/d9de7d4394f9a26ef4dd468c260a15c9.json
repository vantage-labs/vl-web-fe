{"ast":null,"code":"import _classCallCheck from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nfunction isObjectKey(key, object) {\n  return key in object;\n}\n\nvar ObjectVisualElement = /*#__PURE__*/function (_VisualElement) {\n  _inherits(ObjectVisualElement, _VisualElement);\n\n  var _super = _createSuper(ObjectVisualElement);\n\n  function ObjectVisualElement() {\n    var _this;\n\n    _classCallCheck(this, ObjectVisualElement);\n\n    _this = _super.apply(this, arguments);\n    _this.type = \"object\";\n    return _this;\n  }\n\n  _createClass(ObjectVisualElement, [{\n    key: \"readValueFromInstance\",\n    value: function readValueFromInstance(instance, key) {\n      if (isObjectKey(key, instance)) {\n        var value = instance[key];\n\n        if (typeof value === \"string\" || typeof value === \"number\") {\n          return value;\n        }\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getBaseTargetFromProps\",\n    value: function getBaseTargetFromProps() {\n      return undefined;\n    }\n  }, {\n    key: \"removeValueFromRenderState\",\n    value: function removeValueFromRenderState(key, renderState) {\n      delete renderState.output[key];\n    }\n  }, {\n    key: \"measureInstanceViewportBox\",\n    value: function measureInstanceViewportBox() {\n      return createBox();\n    }\n  }, {\n    key: \"build\",\n    value: function build(renderState, latestValues) {\n      Object.assign(renderState.output, latestValues);\n    }\n  }, {\n    key: \"renderInstance\",\n    value: function renderInstance(instance, _ref) {\n      var output = _ref.output;\n      Object.assign(instance, output);\n    }\n  }, {\n    key: \"sortInstanceNodePosition\",\n    value: function sortInstanceNodePosition() {\n      return 0;\n    }\n  }]);\n\n  return ObjectVisualElement;\n}(VisualElement);\n\nexport { ObjectVisualElement };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/framer-motion/dist/es/render/object/ObjectVisualElement.mjs"],"names":["createBox","VisualElement","isObjectKey","key","object","ObjectVisualElement","arguments","type","instance","value","undefined","renderState","output","latestValues","Object","assign"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,sCAA1B;AACA,SAASC,aAAT,QAA8B,sBAA9B;;AAEA,SAASC,WAAT,CAAqBC,GAArB,EAA0BC,MAA1B,EAAkC;AAC9B,SAAOD,GAAG,IAAIC,MAAd;AACH;;IACKC,mB;;;;;AACF,iCAAc;AAAA;;AAAA;;AACV,+BAASC,SAAT;AACA,UAAKC,IAAL,GAAY,QAAZ;AAFU;AAGb;;;;WACD,+BAAsBC,QAAtB,EAAgCL,GAAhC,EAAqC;AACjC,UAAID,WAAW,CAACC,GAAD,EAAMK,QAAN,CAAf,EAAgC;AAC5B,YAAMC,KAAK,GAAGD,QAAQ,CAACL,GAAD,CAAtB;;AACA,YAAI,OAAOM,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAAlD,EAA4D;AACxD,iBAAOA,KAAP;AACH;AACJ;;AACD,aAAOC,SAAP;AACH;;;WACD,kCAAyB;AACrB,aAAOA,SAAP;AACH;;;WACD,oCAA2BP,GAA3B,EAAgCQ,WAAhC,EAA6C;AACzC,aAAOA,WAAW,CAACC,MAAZ,CAAmBT,GAAnB,CAAP;AACH;;;WACD,sCAA6B;AACzB,aAAOH,SAAS,EAAhB;AACH;;;WACD,eAAMW,WAAN,EAAmBE,YAAnB,EAAiC;AAC7BC,MAAAA,MAAM,CAACC,MAAP,CAAcJ,WAAW,CAACC,MAA1B,EAAkCC,YAAlC;AACH;;;WACD,wBAAeL,QAAf,QAAqC;AAAA,UAAVI,MAAU,QAAVA,MAAU;AACjCE,MAAAA,MAAM,CAACC,MAAP,CAAcP,QAAd,EAAwBI,MAAxB;AACH;;;WACD,oCAA2B;AACvB,aAAO,CAAP;AACH;;;;EA/B6BX,a;;AAkClC,SAASI,mBAAT","sourcesContent":["import { createBox } from '../../projection/geometry/models.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nfunction isObjectKey(key, object) {\n    return key in object;\n}\nclass ObjectVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"object\";\n    }\n    readValueFromInstance(instance, key) {\n        if (isObjectKey(key, instance)) {\n            const value = instance[key];\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    getBaseTargetFromProps() {\n        return undefined;\n    }\n    removeValueFromRenderState(key, renderState) {\n        delete renderState.output[key];\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    build(renderState, latestValues) {\n        Object.assign(renderState.output, latestValues);\n    }\n    renderInstance(instance, { output }) {\n        Object.assign(instance, output);\n    }\n    sortInstanceNodePosition() {\n        return 0;\n    }\n}\n\nexport { ObjectVisualElement };\n"]},"metadata":{},"sourceType":"module"}