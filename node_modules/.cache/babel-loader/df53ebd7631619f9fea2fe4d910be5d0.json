{"ast":null,"code":"import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n  const {\n    props\n  } = node;\n\n  if (node.animationState && props.whileHover) {\n    node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n  }\n\n  const eventName = \"onHover\" + lifecycle;\n  const callback = props[eventName];\n\n  if (callback) {\n    frame.postRender(() => callback(event, extractEventInfo(event)));\n  }\n}\n\nclass HoverGesture extends Feature {\n  mount() {\n    const {\n      current\n    } = this.node;\n    if (!current) return;\n    this.unmount = hover(current, startEvent => {\n      handleHoverEvent(this.node, startEvent, \"Start\");\n      return endEvent => handleHoverEvent(this.node, endEvent, \"End\");\n    });\n  }\n\n  unmount() {}\n\n}\n\nexport { HoverGesture };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/framer-motion/dist/es/gestures/hover.mjs"],"names":["Feature","hover","extractEventInfo","frame","handleHoverEvent","node","event","lifecycle","props","animationState","whileHover","setActive","eventName","callback","postRender","HoverGesture","mount","current","unmount","startEvent","endEvent"],"mappings":"AAAA,SAASA,OAAT,QAAwB,gCAAxB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,KAAT,QAAsB,wBAAtB;;AAEA,SAASC,gBAAT,CAA0BC,IAA1B,EAAgCC,KAAhC,EAAuCC,SAAvC,EAAkD;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAYH,IAAlB;;AACA,MAAIA,IAAI,CAACI,cAAL,IAAuBD,KAAK,CAACE,UAAjC,EAA6C;AACzCL,IAAAA,IAAI,CAACI,cAAL,CAAoBE,SAApB,CAA8B,YAA9B,EAA4CJ,SAAS,KAAK,OAA1D;AACH;;AACD,QAAMK,SAAS,GAAI,YAAYL,SAA/B;AACA,QAAMM,QAAQ,GAAGL,KAAK,CAACI,SAAD,CAAtB;;AACA,MAAIC,QAAJ,EAAc;AACVV,IAAAA,KAAK,CAACW,UAAN,CAAiB,MAAMD,QAAQ,CAACP,KAAD,EAAQJ,gBAAgB,CAACI,KAAD,CAAxB,CAA/B;AACH;AACJ;;AACD,MAAMS,YAAN,SAA2Bf,OAA3B,CAAmC;AAC/BgB,EAAAA,KAAK,GAAG;AACJ,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKZ,IAAzB;AACA,QAAI,CAACY,OAAL,EACI;AACJ,SAAKC,OAAL,GAAejB,KAAK,CAACgB,OAAD,EAAWE,UAAD,IAAgB;AAC1Cf,MAAAA,gBAAgB,CAAC,KAAKC,IAAN,EAAYc,UAAZ,EAAwB,OAAxB,CAAhB;AACA,aAAQC,QAAD,IAAchB,gBAAgB,CAAC,KAAKC,IAAN,EAAYe,QAAZ,EAAsB,KAAtB,CAArC;AACH,KAHmB,CAApB;AAIH;;AACDF,EAAAA,OAAO,GAAG,CAAG;;AAVkB;;AAanC,SAASH,YAAT","sourcesContent":["import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n"]},"metadata":{},"sourceType":"module"}