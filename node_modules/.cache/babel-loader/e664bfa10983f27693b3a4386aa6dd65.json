{"ast":null,"code":"var _jsxFileName = \"/home/bahari/vl-web-fe/src/components/ContactFrom/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = props => {\n  _s();\n\n  const [forms, setForms] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    phone: '',\n    company: '',\n    message: ''\n  });\n  const [validator] = useState(new SimpleReactValidator({\n    className: 'errorMessage'\n  }));\n\n  const changeHandler = e => {\n    setForms({ ...forms,\n      [e.target.name]: e.target.value\n    });\n\n    if (validator.allValid()) {\n      validator.hideMessages();\n    } else {\n      validator.showMessages();\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (validator.allValid()) {\n      validator.hideMessages();\n      setForms({\n        name: '',\n        email: '',\n        subject: '',\n        phone: '',\n        company: '',\n        message: ''\n      });\n    } else {\n      validator.showMessages();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => submitHandler(e),\n    className: \"contact-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text1\",\n            children: \"Name*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: forms.name,\n              type: \"text\",\n              name: \"name\",\n              className: \"form-control\",\n              onBlur: e => changeHandler(e),\n              onChange: e => changeHandler(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), validator.message('name', forms.name, 'required|alpha_space')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text2\",\n            children: \"Email*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: forms.email,\n              type: \"email\",\n              name: \"email\",\n              className: \"form-control\",\n              onBlur: e => changeHandler(e),\n              onChange: e => changeHandler(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), validator.message('email', forms.email, 'required|email')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text3\",\n            children: \"Phone*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: forms.phone,\n              type: \"phone\",\n              name: \"phone\",\n              className: \"form-control\",\n              onBlur: e => changeHandler(e),\n              onChange: e => changeHandler(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), validator.message('phone', forms.phone, 'required|phone')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field text-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text5\",\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              onBlur: e => changeHandler(e),\n              onChange: e => changeHandler(e),\n              value: forms.message,\n              type: \"text\",\n              name: \"message\",\n              className: \"form-control\",\n              placeholder: \"How can we help you?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), validator.message('message', forms.message, 'required')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cp-det-btn mt-20 d-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cp-btn\",\n        type: \"submit\",\n        children: [\"Send us a message \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fal fa-arrow-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 76\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactForm, \"RrU3d2MADJ/RKTkZqWd2OZ5Xu4E=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/home/bahari/vl-web-fe/src/components/ContactFrom/ContactForm.js"],"names":["React","useState","SimpleReactValidator","ContactForm","props","forms","setForms","name","email","subject","phone","company","message","validator","className","changeHandler","e","target","value","allValid","hideMessages","showMessages","submitHandler","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AAC/BM,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,OAAO,EAAE,EAHsB;AAI/BC,IAAAA,KAAK,EAAE,EAJwB;AAK/BC,IAAAA,OAAO,EAAE,EALsB;AAM/BC,IAAAA,OAAO,EAAE;AANsB,GAAD,CAAlC;AAQA,QAAM,CAACC,SAAD,IAAcZ,QAAQ,CAAC,IAAIC,oBAAJ,CAAyB;AAClDY,IAAAA,SAAS,EAAE;AADuC,GAAzB,CAAD,CAA5B;;AAGA,QAAMC,aAAa,GAAGC,CAAC,IAAI;AACvBV,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACW,CAAC,CAACC,MAAF,CAASV,IAAV,GAAiBS,CAAC,CAACC,MAAF,CAASC;AAAtC,KAAD,CAAR;;AACA,QAAIL,SAAS,CAACM,QAAV,EAAJ,EAA0B;AACtBN,MAAAA,SAAS,CAACO,YAAV;AACH,KAFD,MAEO;AACHP,MAAAA,SAAS,CAACQ,YAAV;AACH;AACJ,GAPD;;AASA,QAAMC,aAAa,GAAGN,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACO,cAAF;;AACA,QAAIV,SAAS,CAACM,QAAV,EAAJ,EAA0B;AACtBN,MAAAA,SAAS,CAACO,YAAV;AACAd,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,EADD;AAELC,QAAAA,KAAK,EAAE,EAFF;AAGLC,QAAAA,OAAO,EAAE,EAHJ;AAILC,QAAAA,KAAK,EAAE,EAJF;AAKLC,QAAAA,OAAO,EAAE,EALJ;AAMLC,QAAAA,OAAO,EAAE;AANJ,OAAD,CAAR;AAQH,KAVD,MAUO;AACHC,MAAAA,SAAS,CAACQ,YAAV;AACH;AACJ,GAfD;;AAiBA,sBACI;AAAM,IAAA,QAAQ,EAAGL,CAAD,IAAOM,aAAa,CAACN,CAAD,CAApC;AAAyC,IAAA,SAAS,EAAC,cAAnD;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA,sBAAuB;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AACI,cAAA,KAAK,EAAEX,KAAK,CAACE,IADjB;AAEI,cAAA,IAAI,EAAC,MAFT;AAGI,cAAA,IAAI,EAAC,MAHT;AAII,cAAA,SAAS,EAAC,cAJd;AAKI,cAAA,MAAM,EAAGS,CAAD,IAAOD,aAAa,CAACC,CAAD,CALhC;AAMI,cAAA,QAAQ,EAAGA,CAAD,IAAOD,aAAa,CAACC,CAAD;AANlC;AAAA;AAAA;AAAA;AAAA,oBADJ,EAQKH,SAAS,CAACD,OAAV,CAAkB,MAAlB,EAA0BP,KAAK,CAACE,IAAhC,EAAsC,sBAAtC,CARL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAgBI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA,sBAAuB;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AACI,cAAA,KAAK,EAAEF,KAAK,CAACG,KADjB;AAEI,cAAA,IAAI,EAAC,OAFT;AAGI,cAAA,IAAI,EAAC,OAHT;AAII,cAAA,SAAS,EAAC,cAJd;AAKI,cAAA,MAAM,EAAGQ,CAAD,IAAOD,aAAa,CAACC,CAAD,CALhC;AAMI,cAAA,QAAQ,EAAGA,CAAD,IAAOD,aAAa,CAACC,CAAD;AANlC;AAAA;AAAA;AAAA;AAAA,oBADJ,EAQKH,SAAS,CAACD,OAAV,CAAkB,OAAlB,EAA2BP,KAAK,CAACG,KAAjC,EAAwC,gBAAxC,CARL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAhBJ,eA+BI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA,sBAAuB;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AACI,cAAA,KAAK,EAAEH,KAAK,CAACK,KADjB;AAEI,cAAA,IAAI,EAAC,OAFT;AAGI,cAAA,IAAI,EAAC,OAHT;AAII,cAAA,SAAS,EAAC,cAJd;AAKI,cAAA,MAAM,EAAGM,CAAD,IAAOD,aAAa,CAACC,CAAD,CALhC;AAMI,cAAA,QAAQ,EAAGA,CAAD,IAAOD,aAAa,CAACC,CAAD;AANlC;AAAA;AAAA;AAAA;AAAA,oBADJ,EAQKH,SAAS,CAACD,OAAV,CAAkB,OAAlB,EAA2BP,KAAK,CAACK,KAAjC,EAAwC,gBAAxC,CARL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA/BJ,eA8CI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA,sBAAuB;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AACI,cAAA,MAAM,EAAGM,CAAD,IAAOD,aAAa,CAACC,CAAD,CADhC;AAEI,cAAA,QAAQ,EAAGA,CAAD,IAAOD,aAAa,CAACC,CAAD,CAFlC;AAGI,cAAA,KAAK,EAAEX,KAAK,CAACO,OAHjB;AAII,cAAA,IAAI,EAAC,MAJT;AAKI,cAAA,IAAI,EAAC,SALT;AAMI,cAAA,SAAS,EAAC,cANd;AAOI,cAAA,WAAW,EAAC;AAPhB;AAAA;AAAA;AAAA;AAAA,oBADJ,EAUKC,SAAS,CAACD,OAAV,CAAkB,SAAlB,EAA6BP,KAAK,CAACO,OAAnC,EAA4C,UAA5C,CAVL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA9CJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAiEI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,IAAI,EAAC,QAAhC;AAAA,mBAAyC,oBAAzC,eAA2D;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAjEJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuEH,CA9GD;;GAAMT,W;;KAAAA,W;AAgHN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react'\nimport SimpleReactValidator from 'simple-react-validator';\n\n\nconst ContactForm = (props) => {\n\n    const [forms, setForms] = useState({\n        name: '',\n        email: '',\n        subject: '',\n        phone: '',\n        company: '',\n        message: ''\n    });\n    const [validator] = useState(new SimpleReactValidator({\n        className: 'errorMessage'\n    }));\n    const changeHandler = e => {\n        setForms({ ...forms, [e.target.name]: e.target.value })\n        if (validator.allValid()) {\n            validator.hideMessages();\n        } else {\n            validator.showMessages();\n        }\n    };\n\n    const submitHandler = e => {\n        e.preventDefault();\n        if (validator.allValid()) {\n            validator.hideMessages();\n            setForms({\n                name: '',\n                email: '',\n                subject: '',\n                phone: '',\n                company: '',\n                message: ''\n            })\n        } else {\n            validator.showMessages();\n        }\n    };\n\n    return (\n        <form onSubmit={(e) => submitHandler(e)} className=\"contact-form\">\n            <div className=\"row\">\n                <div className=\"col-lg-6\">\n                    <div className=\"input-field\">\n                        <label htmlFor=\"text1\">Name*</label>\n                        <div className=\"input-box\">\n                            <input\n                                value={forms.name}\n                                type=\"text\"\n                                name=\"name\"\n                                className=\"form-control\"\n                                onBlur={(e) => changeHandler(e)}\n                                onChange={(e) => changeHandler(e)} />\n                            {validator.message('name', forms.name, 'required|alpha_space')}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-lg-6\">\n                    <div className=\"input-field\">\n                        <label htmlFor=\"text2\">Email*</label>\n                        <div className=\"input-box\">\n                            <input\n                                value={forms.email}\n                                type=\"email\"\n                                name=\"email\"\n                                className=\"form-control\"\n                                onBlur={(e) => changeHandler(e)}\n                                onChange={(e) => changeHandler(e)} />\n                            {validator.message('email', forms.email, 'required|email')}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-lg-12\">\n                    <div className=\"input-field\">\n                        <label htmlFor=\"text3\">Phone*</label>\n                        <div className=\"input-box\">\n                            <input\n                                value={forms.phone}\n                                type=\"phone\"\n                                name=\"phone\"\n                                className=\"form-control\"\n                                onBlur={(e) => changeHandler(e)}\n                                onChange={(e) => changeHandler(e)} />\n                            {validator.message('phone', forms.phone, 'required|phone')}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-lg-12\">\n                    <div className=\"input-field text-field\">\n                        <label htmlFor=\"text5\">Message</label>\n                        <div className=\"input-box\">\n                            <textarea\n                                onBlur={(e) => changeHandler(e)}\n                                onChange={(e) => changeHandler(e)}\n                                value={forms.message}\n                                type=\"text\"\n                                name=\"message\"\n                                className=\"form-control\"\n                                placeholder=\"How can we help you?\">\n                            </textarea>\n                            {validator.message('message', forms.message, 'required')}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"cp-det-btn mt-20 d-grid\">\n                <button className=\"cp-btn\" type='submit'>Send us a message <i className=\"fal fa-arrow-right\"></i></button>\n            </div>\n        </form>\n    )\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}