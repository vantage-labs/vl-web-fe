{"ast":null,"code":"import _defineProperty from\"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import SimpleReactValidator from'simple-react-validator';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ContactForm=function ContactForm(props){var _useState=useState({name:'',email:'',subject:'',phone:'',company:'',message:''}),_useState2=_slicedToArray(_useState,2),forms=_useState2[0],setForms=_useState2[1];var _useState3=useState(new SimpleReactValidator({className:'errorMessage'})),_useState4=_slicedToArray(_useState3,1),validator=_useState4[0];var changeHandler=function changeHandler(e){setForms(_objectSpread(_objectSpread({},forms),{},_defineProperty({},e.target.name,e.target.value)));if(validator.allValid()){validator.hideMessages();}else{validator.showMessages();}};var submitHandler=function submitHandler(e){e.preventDefault();if(validator.allValid()){validator.hideMessages();setForms({name:'',email:'',subject:'',phone:'',company:'',message:''});}else{validator.showMessages();}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){return submitHandler(e);},className:\"contact-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"input-field\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"text1\",children:\"Name*\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-box\",children:[/*#__PURE__*/_jsx(\"input\",{value:forms.name,type:\"text\",name:\"name\",className:\"form-control\",onBlur:function onBlur(e){return changeHandler(e);},onChange:function onChange(e){return changeHandler(e);}}),validator.message('name',forms.name,'required|alpha_space')]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"input-field\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"text2\",children:\"Email*\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-box\",children:[/*#__PURE__*/_jsx(\"input\",{value:forms.email,type:\"email\",name:\"email\",className:\"form-control\",onBlur:function onBlur(e){return changeHandler(e);},onChange:function onChange(e){return changeHandler(e);}}),validator.message('email',forms.email,'required|email')]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"input-field\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"text3\",children:\"Phone*\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-box\",children:[/*#__PURE__*/_jsx(\"input\",{value:forms.phone,type:\"phone\",name:\"phone\",className:\"form-control\",onBlur:function onBlur(e){return changeHandler(e);},onChange:function onChange(e){return changeHandler(e);}}),validator.message('phone',forms.phone,'required|phone')]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"input-field text-field\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"text5\",children:\"Message\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-box\",children:[/*#__PURE__*/_jsx(\"textarea\",{onBlur:function onBlur(e){return changeHandler(e);},onChange:function onChange(e){return changeHandler(e);},value:forms.message,type:\"text\",name:\"message\",className:\"form-control\",placeholder:\"How can we help you?\"}),validator.message('message',forms.message,'required')]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"cp-det-btn mt-20 d-grid\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"cp-btn\",type:\"submit\",children:[\"Send us a message \",/*#__PURE__*/_jsx(\"i\",{className:\"fal fa-arrow-right\"})]})})]});};export default ContactForm;","map":{"version":3,"sources":["/home/bahari/vl-web-fe/src/components/ContactFrom/ContactForm.js"],"names":["React","useState","SimpleReactValidator","ContactForm","props","name","email","subject","phone","company","message","forms","setForms","className","validator","changeHandler","e","target","value","allValid","hideMessages","showMessages","submitHandler","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport SimpleReactValidator from 'simple-react-validator';\n\n\nconst ContactForm = (props) => {\n\n    const [forms, setForms] = useState({\n        name: '',\n        email: '',\n        subject: '',\n        phone: '',\n        company: '',\n        message: ''\n    });\n    const [validator] = useState(new SimpleReactValidator({\n        className: 'errorMessage'\n    }));\n    const changeHandler = e => {\n        setForms({ ...forms, [e.target.name]: e.target.value })\n        if (validator.allValid()) {\n            validator.hideMessages();\n        } else {\n            validator.showMessages();\n        }\n    };\n\n    const submitHandler = e => {\n        e.preventDefault();\n        if (validator.allValid()) {\n            validator.hideMessages();\n            setForms({\n                name: '',\n                email: '',\n                subject: '',\n                phone: '',\n                company: '',\n                message: ''\n            })\n        } else {\n            validator.showMessages();\n        }\n    };\n\n    return (\n        <form onSubmit={(e) => submitHandler(e)} className=\"contact-form\">\n            <div className=\"row\">\n                <div className=\"col-lg-6\">\n                    <div className=\"input-field\">\n                        <label htmlFor=\"text1\">Name*</label>\n                        <div className=\"input-box\">\n                            <input\n                                value={forms.name}\n                                type=\"text\"\n                                name=\"name\"\n                                className=\"form-control\"\n                                onBlur={(e) => changeHandler(e)}\n                                onChange={(e) => changeHandler(e)} />\n                            {validator.message('name', forms.name, 'required|alpha_space')}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-lg-6\">\n                    <div className=\"input-field\">\n                        <label htmlFor=\"text2\">Email*</label>\n                        <div className=\"input-box\">\n                            <input\n                                value={forms.email}\n                                type=\"email\"\n                                name=\"email\"\n                                className=\"form-control\"\n                                onBlur={(e) => changeHandler(e)}\n                                onChange={(e) => changeHandler(e)} />\n                            {validator.message('email', forms.email, 'required|email')}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-lg-12\">\n                    <div className=\"input-field\">\n                        <label htmlFor=\"text3\">Phone*</label>\n                        <div className=\"input-box\">\n                            <input\n                                value={forms.phone}\n                                type=\"phone\"\n                                name=\"phone\"\n                                className=\"form-control\"\n                                onBlur={(e) => changeHandler(e)}\n                                onChange={(e) => changeHandler(e)} />\n                            {validator.message('phone', forms.phone, 'required|phone')}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-lg-12\">\n                    <div className=\"input-field text-field\">\n                        <label htmlFor=\"text5\">Message</label>\n                        <div className=\"input-box\">\n                            <textarea\n                                onBlur={(e) => changeHandler(e)}\n                                onChange={(e) => changeHandler(e)}\n                                value={forms.message}\n                                type=\"text\"\n                                name=\"message\"\n                                className=\"form-control\"\n                                placeholder=\"How can we help you?\">\n                            </textarea>\n                            {validator.message('message', forms.message, 'required')}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"cp-det-btn mt-20 d-grid\">\n                <button className=\"cp-btn\" type='submit'>Send us a message <i className=\"fal fa-arrow-right\"></i></button>\n            </div>\n        </form>\n    )\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}