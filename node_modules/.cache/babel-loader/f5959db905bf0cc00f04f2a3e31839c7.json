{"ast":null,"code":"import _classCallCheck from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/bahari/vl-web-fe/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Feature } from '../Feature.mjs';\nvar id = 0;\n\nvar ExitAnimationFeature = /*#__PURE__*/function (_Feature) {\n  _inherits(ExitAnimationFeature, _Feature);\n\n  var _super = _createSuper(ExitAnimationFeature);\n\n  function ExitAnimationFeature() {\n    var _this;\n\n    _classCallCheck(this, ExitAnimationFeature);\n\n    _this = _super.apply(this, arguments);\n    _this.id = id++;\n    return _this;\n  }\n\n  _createClass(ExitAnimationFeature, [{\n    key: \"update\",\n    value: function update() {\n      var _this2 = this;\n\n      if (!this.node.presenceContext) return;\n      var _this$node$presenceCo = this.node.presenceContext,\n          isPresent = _this$node$presenceCo.isPresent,\n          onExitComplete = _this$node$presenceCo.onExitComplete;\n\n      var _ref = this.node.prevPresenceContext || {},\n          prevIsPresent = _ref.isPresent;\n\n      if (!this.node.animationState || isPresent === prevIsPresent) {\n        return;\n      }\n\n      var exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n\n      if (onExitComplete && !isPresent) {\n        exitAnimation.then(function () {\n          return onExitComplete(_this2.id);\n        });\n      }\n    }\n  }, {\n    key: \"mount\",\n    value: function mount() {\n      var _ref2 = this.node.presenceContext || {},\n          register = _ref2.register;\n\n      if (register) {\n        this.unmount = register(this.id);\n      }\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {}\n  }]);\n\n  return ExitAnimationFeature;\n}(Feature);\n\nexport { ExitAnimationFeature };","map":{"version":3,"sources":["/home/bahari/vl-web-fe/node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs"],"names":["Feature","id","ExitAnimationFeature","arguments","node","presenceContext","isPresent","onExitComplete","prevPresenceContext","prevIsPresent","animationState","exitAnimation","setActive","then","register","unmount"],"mappings":";;;;AAAA,SAASA,OAAT,QAAwB,gBAAxB;AAEA,IAAIC,EAAE,GAAG,CAAT;;IACMC,oB;;;;;AACF,kCAAc;AAAA;;AAAA;;AACV,+BAASC,SAAT;AACA,UAAKF,EAAL,GAAUA,EAAE,EAAZ;AAFU;AAGb;;;;WACD,kBAAS;AAAA;;AACL,UAAI,CAAC,KAAKG,IAAL,CAAUC,eAAf,EACI;AACJ,kCAAsC,KAAKD,IAAL,CAAUC,eAAhD;AAAA,UAAQC,SAAR,yBAAQA,SAAR;AAAA,UAAmBC,cAAnB,yBAAmBA,cAAnB;;AACA,iBAAqC,KAAKH,IAAL,CAAUI,mBAAV,IAAiC,EAAtE;AAAA,UAAmBC,aAAnB,QAAQH,SAAR;;AACA,UAAI,CAAC,KAAKF,IAAL,CAAUM,cAAX,IAA6BJ,SAAS,KAAKG,aAA/C,EAA8D;AAC1D;AACH;;AACD,UAAME,aAAa,GAAG,KAAKP,IAAL,CAAUM,cAAV,CAAyBE,SAAzB,CAAmC,MAAnC,EAA2C,CAACN,SAA5C,CAAtB;;AACA,UAAIC,cAAc,IAAI,CAACD,SAAvB,EAAkC;AAC9BK,QAAAA,aAAa,CAACE,IAAd,CAAmB;AAAA,iBAAMN,cAAc,CAAC,MAAI,CAACN,EAAN,CAApB;AAAA,SAAnB;AACH;AACJ;;;WACD,iBAAQ;AACJ,kBAAqB,KAAKG,IAAL,CAAUC,eAAV,IAA6B,EAAlD;AAAA,UAAQS,QAAR,SAAQA,QAAR;;AACA,UAAIA,QAAJ,EAAc;AACV,aAAKC,OAAL,GAAeD,QAAQ,CAAC,KAAKb,EAAN,CAAvB;AACH;AACJ;;;WACD,mBAAU,CAAG;;;;EAxBkBD,O;;AA2BnC,SAASE,oBAAT","sourcesContent":["import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n"]},"metadata":{},"sourceType":"module"}