{"version":3,"file":"hamo.mjs","sources":["../src/hooks/use-click-outside-event.js","../src/hooks/use-is-client.js","../src/hooks/use-debug.js","../src/hooks/use-document-ready-state.js","../src/hooks/use-frame.js","../src/hooks/use-intersection-observer.js","../src/hooks/use-interval.js","../src/hooks/use-is-touch-device.js","../src/hooks/use-media-query.js","../src/hooks/use-resize-observer.js","../src/hooks/use-rect.js","../src/hooks/use-slots.js","../src/hooks/use-window-size.js"],"sourcesContent":["/**\r\n * useOutsideClickEvent - custom hook that listens for clicks outside of a component\r\n * @param {Object} ref - React ref for the element to listen for clicks outside of\r\n * @param {Function} callback - callback function to call when a click outside of the element is detected\r\n */\r\n\r\nimport { useCallback, useEffect } from 'react'\r\n\r\nexport function useOutsideClickEvent(ref, callback) {\r\n  const handleClickOutside = useCallback(\r\n    (event) => {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        callback()\r\n      }\r\n    },\r\n    [ref, callback]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      document.addEventListener('mousedown', handleClickOutside)\r\n      return () => {\r\n        document.removeEventListener('mousedown', handleClickOutside)\r\n      }\r\n    }\r\n  }, [handleClickOutside, ref])\r\n}\r\n","// This component is used to check if the window object is present.\r\nimport { useEffect, useState } from 'react'\r\n\r\nexport function useIsClient() {\r\n  const [isClient, setClient] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setClient(true)\r\n  }, [])\r\n\r\n  return isClient\r\n}\r\n","import { useMemo } from 'react'\r\nimport { useIsClient } from './use-is-client'\r\n\r\nexport function useDebug() {\r\n  const isClient = useIsClient()\r\n\r\n  const debug = useMemo(() => {\r\n    if (!isClient) return undefined\r\n\r\n    const location = window.location\r\n    const search = location.search\r\n    const href = location.href\r\n    const searchParams = new URLSearchParams(search)\r\n\r\n    const isDebug =\r\n      href.includes('#debug') || // localhost:3000/#debug\r\n      href.includes('/_debug') || // localhost:3000/_debug\r\n      searchParams.has('debug') || // localhost:3000/?debug\r\n      process.env.NODE_ENV === 'development' // localhost:3000\r\n\r\n    const isProduction =\r\n      href.includes('#production') || // localhost:3000/#production\r\n      searchParams.has('production') // localhost:3000/?production\r\n\r\n    return isDebug && !isProduction\r\n  }, [isClient])\r\n\r\n  return debug\r\n}\r\n","// useDocumentReadyState.js\r\n// This code is a custom hook that returns the current document.readyState\r\n// The useLayoutEffect hook is used to set the state of the document\r\n// The useEffect hook is used to set the state of the document to 'complete' when the document is ready\r\n\r\nimport { useEffect, useState } from 'react'\r\n\r\n/**\r\n * @name useDocumentReadyState\r\n * @description A React hook that listen to document.readyState.\r\n * @returns {string} document.readyState\r\n */\r\n\r\nexport function useDocumentReadyState() {\r\n  const [readyState, setReadyState] = useState()\r\n\r\n  useEffect(() => {\r\n    function onStateChange() {\r\n      setReadyState(document.readyState)\r\n    }\r\n\r\n    document.addEventListener('readystatechange', onStateChange, false)\r\n    onStateChange()\r\n\r\n    return () => document.removeEventListener('readystatechange', onStateChange, false)\r\n  }, [])\r\n\r\n  return readyState\r\n}\r\n","/**\r\n * Creates a requestAnimationFrame loop and manages the lifecycle of the callback.\r\n * @param {Function} callback - A function that is called every frame.\r\n * @param {Number} priority - A number that determines the order in which the callback is called.\r\n */\r\n\r\nimport Tempus from '@studio-freight/tempus'\r\nimport { useEffect } from 'react'\r\n\r\nexport function useFrame(callback, priority = 0) {\r\n  useEffect(() => {\r\n    if (callback) {\r\n      Tempus.add(callback, priority)\r\n\r\n      return () => Tempus.remove(callback)\r\n    }\r\n  }, [callback, priority])\r\n}\r\n","import { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\n/**\r\n * @name useIntersectionObserver\r\n * @description A React hook that oberves element visibility using IntersectionObserver.\r\n * @param {HTMLElement} root\r\n * @param {string} rootMargin\r\n * @param {number} threshold\r\n * @param {boolean} once\r\n * @param {boolean} lazy\r\n * @param {function} callback\r\n * @param {array} deps\r\n * @returns {array} [setElement, entry]\r\n */\r\n\r\nexport function useIntersectionObserver(\r\n  { root = null, rootMargin = '0px', threshold = 0, once = false, lazy = false, callback = () => {} } = {},\r\n  deps = []\r\n) {\r\n  const entryRef = useRef({})\r\n  const [entry, setEntry] = useState({})\r\n  const [element, setElement] = useState()\r\n\r\n  useEffect(() => {\r\n    if (!element) return\r\n\r\n    const intersection = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (lazy) {\r\n          entryRef.current = entry\r\n        } else {\r\n          setEntry(entry)\r\n        }\r\n\r\n        callback(entry)\r\n\r\n        if (once && entry.isIntersecting) intersection.disconnect()\r\n      },\r\n      {\r\n        root,\r\n        rootMargin,\r\n        threshold,\r\n      }\r\n    )\r\n    intersection.observe(element)\r\n\r\n    return () => {\r\n      intersection.disconnect()\r\n    }\r\n  }, [element, root, rootMargin, threshold, lazy, once, ...deps])\r\n\r\n  const get = useCallback(() => entryRef.current, [])\r\n\r\n  return [setElement, lazy ? get : entry]\r\n}\r\n","/**\r\n * This function allows you to set an interval in a functional component\r\n * @param {function} callback - The callback function\r\n * @param {number} delay - The delay between each interval\r\n */\r\n\r\nimport { useEffect } from 'react'\r\n\r\nexport function useInterval(callback, delay = 1000, deps = []) {\r\n  useEffect(() => {\r\n    const interval = setInterval(callback, delay)\r\n    return () => clearInterval(interval)\r\n  }, [delay, ...deps])\r\n}\r\n","/*\r\n  This hook checks if the device has a touch screen. It checks for the touchstart event,\r\n  as well as the maxTouchPoints property on the navigator object. It also checks the\r\n  msMaxTouchPoints property, which is specific to Microsoft browsers.\r\n*/\r\n\r\nimport { useEffect, useState } from 'react'\r\n\r\n/**\r\n * @name useIsTouchDevice\r\n * @description A React hook that detects if the device supports touch.\r\n * @returns {boolean} Whether the device supports touch or not.\r\n */\r\n\r\nexport function useIsTouchDevice() {\r\n  const [isTouchDevice, setIsTouchDevice] = useState()\r\n\r\n  useEffect(() => {\r\n    function onResize() {\r\n      setIsTouchDevice('ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0)\r\n    }\r\n\r\n    window.addEventListener('resize', onResize, false)\r\n    onResize()\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', onResize, false)\r\n    }\r\n  }, [])\r\n\r\n  return isTouchDevice\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\n/**\r\n * @name useMediaQuery\r\n * @description A React hook that detects whether a media query is true or false.\r\n * @param {string} queryString The media query to test against.\r\n * @returns {boolean} Whether the media query is true or false.\r\n */\r\n\r\nexport function useMediaQuery(queryString) {\r\n  const [isMatch, setIsMatch] = useState()\r\n\r\n  useEffect(() => {\r\n    const mediaQuery = window.matchMedia(queryString)\r\n\r\n    function onChange() {\r\n      setIsMatch(mediaQuery.matches)\r\n    }\r\n\r\n    mediaQuery.addEventListener('change', onChange, false)\r\n    onChange()\r\n\r\n    return () => mediaQuery.removeEventListener('change', onChange, false)\r\n  }, [queryString])\r\n\r\n  return isMatch\r\n}\r\n","import { useCallback, useEffect, useRef, useState } from 'react'\r\nimport debounce from 'just-debounce-it'\r\n\r\n/**\r\n * useResizeObserver - observe elements dimensions using ResizeObserver\r\n * @param {Boolean} lazy - should return a state or not\r\n * @param {Number} debounce - minimum delay between two ResizeObserver computations\r\n * @param {String} box - ResizeObserver parameter\r\n * @param {Function} callback - called on value change\r\n * @param {Array} deps - props that should trigger a new computation\r\n */\r\n\r\nexport function useResizeObserver(\r\n  { lazy = false, debounce: debounceDelay = 500, box = 'border-box', callback = () => {} } = {},\r\n  deps = [],\r\n) {\r\n  const entryRef = useRef({})\r\n  const [entry, setEntry] = useState({})\r\n  const [element, setElement] = useState()\r\n\r\n  useEffect(() => {\r\n    if (!element) return\r\n\r\n    const onResize = debounce(\r\n      ([entry]) => {\r\n        entryRef.current = entry\r\n\r\n        callback(entry)\r\n\r\n        if (!lazy) {\r\n          setEntry(entry)\r\n        }\r\n      },\r\n      debounceDelay,\r\n      true,\r\n    )\r\n\r\n    const resizeObserver = new ResizeObserver(onResize)\r\n    resizeObserver.observe(element, { box })\r\n\r\n    return () => {\r\n      resizeObserver.disconnect()\r\n      onResize.cancel()\r\n    }\r\n  }, [element, lazy, debounceDelay, box, ...deps])\r\n\r\n  const get = useCallback(() => entryRef.current, [])\r\n\r\n  return [setElement, lazy ? get : entry]\r\n}\r\n","import { useResizeObserver } from './use-resize-observer'\r\nimport debounce from 'just-debounce-it'\r\nimport { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\n// offsetTop function returns the offsetTop value of a DOM element.\r\n// The offsetTop value is the distance between the top of the element\r\n// and the top of the viewport.\r\n\r\nfunction removeParentSticky(element) {\r\n  const position = getComputedStyle(element).position\r\n\r\n  const isSticky = position === 'sticky'\r\n\r\n  if (isSticky) {\r\n    element.style.setProperty('position', 'static')\r\n    element.dataset.sticky = 'true'\r\n  }\r\n\r\n  if (element.offsetParent) {\r\n    removeParentSticky(element.offsetParent)\r\n  }\r\n}\r\n\r\nfunction addParentSticky(element) {\r\n  if (element?.dataset?.sticky === 'true') {\r\n    element.style.removeProperty('position')\r\n    element.dataset.sticky = 'true'\r\n    delete element.dataset.sticky\r\n  }\r\n\r\n  if (element.parentNode) {\r\n    addParentSticky(element.parentNode)\r\n  }\r\n}\r\n\r\nexport function offsetTop(element, accumulator = 0) {\r\n  const top = accumulator + element.offsetTop\r\n\r\n  if (element.offsetParent) {\r\n    return offsetTop(element.offsetParent, top)\r\n  }\r\n  return top\r\n}\r\n\r\n// offsetLeft function returns the offsetLeft value of a DOM element.\r\n// The offsetLeft value is the distance between the left of the element\r\n// and the left of the viewport.\r\nexport function offsetLeft(element, accumulator = 0) {\r\n  const left = accumulator + element.offsetLeft\r\n  if (element.offsetParent) {\r\n    return offsetLeft(element.offsetParent, left)\r\n  }\r\n  return left\r\n}\r\n\r\n/**\r\n * useRect - observe elements BoundingRect\r\n * @param {boolean} ignoreTransform - should include transform in the returned rect or not\r\n * @param {boolean} ignoreSticky - should ingnore parent sticky elements or not\r\n * @param {boolean} lazy - should return a state or a getter\r\n * @param {number} debounce - minimum delay between two rect computations\r\n * @param {number} resizeDebounce - minimum delay between two ResizeObserver computations\r\n * @param {Function} callback - called on value change\r\n * @param {Array} deps - props that should trigger a new rect computation\r\n */\r\n\r\nexport function useRect(\r\n  {\r\n    ignoreTransform = false,\r\n    ignoreSticky = true,\r\n    lazy = false,\r\n    debounce: debounceDelay = 500,\r\n    resizeDebounce = debounceDelay,\r\n    callback = () => {},\r\n  } = {},\r\n  deps = [],\r\n) {\r\n  const [element, setElement] = useState()\r\n  const [rect, setRect] = useState({})\r\n  const rectRef = useRef({})\r\n  const [setResizeObserverElement] = useResizeObserver(\r\n    {\r\n      lazy: true,\r\n      debounce: resizeDebounce,\r\n      callback: (entry) => {\r\n        // includes padding and border\r\n        const width = entry.borderBoxSize[0].inlineSize\r\n        const height = entry.borderBoxSize[0].blockSize\r\n\r\n        rectRef.current.width = width\r\n        rectRef.current.height = height\r\n\r\n        callback(rectRef.current)\r\n\r\n        if (!lazy) {\r\n          setRect((rect) => ({\r\n            ...rect,\r\n            width,\r\n            height,\r\n          }))\r\n        }\r\n      },\r\n    },\r\n    [lazy, resizeDebounce, ...deps],\r\n  )\r\n\r\n  // resize if body height changes\r\n  useEffect(() => {\r\n    if (!element) return\r\n\r\n    const onBodyResize = debounce(\r\n      () => {\r\n        let top, left\r\n\r\n        if (ignoreSticky) removeParentSticky(element)\r\n        if (ignoreTransform) {\r\n          top = offsetTop(element)\r\n          left = offsetLeft(element)\r\n        } else {\r\n          const rect = element.getBoundingClientRect()\r\n          top = rect.top + window.scrollY\r\n          left = rect.left + window.scrollX\r\n        }\r\n        if (ignoreSticky) addParentSticky(element)\r\n\r\n        rectRef.current.top = top\r\n        rectRef.current.left = left\r\n\r\n        callback(rectRef.current)\r\n\r\n        if (!lazy) {\r\n          setRect((rect) => ({\r\n            ...rect,\r\n            top,\r\n            left,\r\n          }))\r\n        }\r\n      },\r\n      debounceDelay,\r\n      true,\r\n    )\r\n    const resizeObserver = new ResizeObserver(onBodyResize)\r\n    resizeObserver.observe(document.body)\r\n\r\n    return () => {\r\n      resizeObserver.disconnect()\r\n      onBodyResize.cancel()\r\n    }\r\n  }, [element, lazy, debounceDelay, ignoreTransform, ignoreSticky, ...deps])\r\n\r\n  const getRect = useCallback(() => rectRef.current, [])\r\n\r\n  return [\r\n    (node) => {\r\n      setElement(node)\r\n      setResizeObserverElement(node)\r\n    },\r\n    lazy ? getRect : rect,\r\n  ]\r\n}\r\n","// This code is used to extract the contents of a component's children and return them as an array.\r\n// The code accepts two arguments, the names of the components that it should extract, and the children to extract from.\r\n// The code returns an array of the children of the components passed in the types argument.\r\n// based on:\r\n// https://medium.com/swlh/bring-vue-named-slots-to-react-87684188f18e\r\n\r\nimport { useMemo } from 'react'\r\n\r\nexport function useSlots(types = [], children = []) {\r\n  const _children = useMemo(() => children && [children].flat(), [children])\r\n  const _types = useMemo(() => types && [types].flat(), [types])\r\n  const slots = useMemo(() => {\r\n    if (!_children || !_types) {\r\n      return\r\n    }\r\n\r\n    const slots = _types.map((type) => _children.find((el) => el.type === type)?.props.children)\r\n\r\n    return types[0] ? slots : slots[0]\r\n  }, [_children, _types])\r\n\r\n  return slots\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport debounce from 'just-debounce-it'\r\n\r\n/**\r\n * @name useWindowSize\r\n * @description A React hook that listens to window size.\r\n * @returns {object} { width, height }\r\n */\r\n\r\nexport function useWindowSize(debounceDelay = 500) {\r\n  const [width, setWidth] = useState()\r\n  const [height, setHeight] = useState()\r\n\r\n  useEffect(() => {\r\n    const onWindowRezise = debounce(\r\n      () => {\r\n        setWidth(Math.min(window.innerWidth, document.documentElement.clientWidth))\r\n        setHeight(Math.min(window.innerHeight, document.documentElement.clientHeight))\r\n      },\r\n      debounceDelay,\r\n      true,\r\n    )\r\n\r\n    window.addEventListener('resize', onWindowRezise, false)\r\n\r\n    onWindowRezise()\r\n\r\n    return () => window.removeEventListener('resize', onWindowRezise, false)\r\n  }, [debounceDelay])\r\n\r\n  return { width, height }\r\n}\r\n"],"names":["useOutsideClickEvent","ref","callback","useCallback","event","current","contains","target","useEffect","document","addEventListener","handleClickOutside","removeEventListener","useIsClient","_useState","useState","isClient","setClient","useDebug","useMemo","location","window","href","searchParams","URLSearchParams","search","isDebug","includes","has","process","env","NODE_ENV","isProduction","useDocumentReadyState","readyState","setReadyState","onStateChange","useFrame","priority","Tempus","add","remove","useIntersectionObserver","_temp","deps","_ref","root","_ref$root","rootMargin","_ref$rootMargin","threshold","_ref$threshold","_ref$once","once","lazy","_ref$lazy","_ref$callback","useRef","entry","setEntry","element","setElement","intersection","IntersectionObserver","entryRef","isIntersecting","disconnect","observe","get","useInterval","delay","interval","setInterval","clearInterval","useIsTouchDevice","isTouchDevice","setIsTouchDevice","onResize","navigator","maxTouchPoints","msMaxTouchPoints","useMediaQuery","queryString","isMatch","setIsMatch","matchMedia","onChange","mediaQuery","matches","useResizeObserver","debounce","debounceDelay","_ref$debounce","box","_ref$box","_useState2","_ref2","resizeObserver","ResizeObserver","cancel","removeParentSticky","getComputedStyle","position","style","setProperty","dataset","sticky","offsetParent","addParentSticky","_element$dataset","removeProperty","parentNode","offsetTop","accumulator","top","offsetLeft","left","useRect","_ref$ignoreTransform","ignoreTransform","ignoreSticky","_ref$ignoreSticky","_ref$resizeDebounce","resizeDebounce","rect","setRect","width","borderBoxSize","inlineSize","blockSize","rectRef","height","_extends","concat","setResizeObserverElement","_useResizeObserver","getBoundingClientRect","scrollY","scrollX","onBodyResize","body","getRect","node","useSlots","types","children","_children","flat","_types","slots","map","type","_children$find","find","el","props","useWindowSize","setWidth","setHeight","onWindowRezise","Math","min","innerWidth","documentElement","clientWidth","innerHeight","clientHeight"],"mappings":"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"}