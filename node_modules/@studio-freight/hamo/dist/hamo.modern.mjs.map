{"version":3,"file":"hamo.modern.mjs","sources":["../src/hooks/use-click-outside-event.js","../src/hooks/use-is-client.js","../src/hooks/use-debug.js","../src/hooks/use-document-ready-state.js","../src/hooks/use-frame.js","../src/hooks/use-intersection-observer.js","../src/hooks/use-interval.js","../src/hooks/use-is-touch-device.js","../src/hooks/use-media-query.js","../src/hooks/use-resize-observer.js","../src/hooks/use-rect.js","../src/hooks/use-slots.js","../src/hooks/use-window-size.js"],"sourcesContent":["/**\r\n * useOutsideClickEvent - custom hook that listens for clicks outside of a component\r\n * @param {Object} ref - React ref for the element to listen for clicks outside of\r\n * @param {Function} callback - callback function to call when a click outside of the element is detected\r\n */\r\n\r\nimport { useCallback, useEffect } from 'react'\r\n\r\nexport function useOutsideClickEvent(ref, callback) {\r\n  const handleClickOutside = useCallback(\r\n    (event) => {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        callback()\r\n      }\r\n    },\r\n    [ref, callback]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      document.addEventListener('mousedown', handleClickOutside)\r\n      return () => {\r\n        document.removeEventListener('mousedown', handleClickOutside)\r\n      }\r\n    }\r\n  }, [handleClickOutside, ref])\r\n}\r\n","// This component is used to check if the window object is present.\r\nimport { useEffect, useState } from 'react'\r\n\r\nexport function useIsClient() {\r\n  const [isClient, setClient] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setClient(true)\r\n  }, [])\r\n\r\n  return isClient\r\n}\r\n","import { useMemo } from 'react'\r\nimport { useIsClient } from './use-is-client'\r\n\r\nexport function useDebug() {\r\n  const isClient = useIsClient()\r\n\r\n  const debug = useMemo(() => {\r\n    if (!isClient) return undefined\r\n\r\n    const location = window.location\r\n    const search = location.search\r\n    const href = location.href\r\n    const searchParams = new URLSearchParams(search)\r\n\r\n    const isDebug =\r\n      href.includes('#debug') || // localhost:3000/#debug\r\n      href.includes('/_debug') || // localhost:3000/_debug\r\n      searchParams.has('debug') || // localhost:3000/?debug\r\n      process.env.NODE_ENV === 'development' // localhost:3000\r\n\r\n    const isProduction =\r\n      href.includes('#production') || // localhost:3000/#production\r\n      searchParams.has('production') // localhost:3000/?production\r\n\r\n    return isDebug && !isProduction\r\n  }, [isClient])\r\n\r\n  return debug\r\n}\r\n","// useDocumentReadyState.js\r\n// This code is a custom hook that returns the current document.readyState\r\n// The useLayoutEffect hook is used to set the state of the document\r\n// The useEffect hook is used to set the state of the document to 'complete' when the document is ready\r\n\r\nimport { useEffect, useState } from 'react'\r\n\r\n/**\r\n * @name useDocumentReadyState\r\n * @description A React hook that listen to document.readyState.\r\n * @returns {string} document.readyState\r\n */\r\n\r\nexport function useDocumentReadyState() {\r\n  const [readyState, setReadyState] = useState()\r\n\r\n  useEffect(() => {\r\n    function onStateChange() {\r\n      setReadyState(document.readyState)\r\n    }\r\n\r\n    document.addEventListener('readystatechange', onStateChange, false)\r\n    onStateChange()\r\n\r\n    return () => document.removeEventListener('readystatechange', onStateChange, false)\r\n  }, [])\r\n\r\n  return readyState\r\n}\r\n","/**\r\n * Creates a requestAnimationFrame loop and manages the lifecycle of the callback.\r\n * @param {Function} callback - A function that is called every frame.\r\n * @param {Number} priority - A number that determines the order in which the callback is called.\r\n */\r\n\r\nimport Tempus from '@studio-freight/tempus'\r\nimport { useEffect } from 'react'\r\n\r\nexport function useFrame(callback, priority = 0) {\r\n  useEffect(() => {\r\n    if (callback) {\r\n      Tempus.add(callback, priority)\r\n\r\n      return () => Tempus.remove(callback)\r\n    }\r\n  }, [callback, priority])\r\n}\r\n","import { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\n/**\r\n * @name useIntersectionObserver\r\n * @description A React hook that oberves element visibility using IntersectionObserver.\r\n * @param {HTMLElement} root\r\n * @param {string} rootMargin\r\n * @param {number} threshold\r\n * @param {boolean} once\r\n * @param {boolean} lazy\r\n * @param {function} callback\r\n * @param {array} deps\r\n * @returns {array} [setElement, entry]\r\n */\r\n\r\nexport function useIntersectionObserver(\r\n  { root = null, rootMargin = '0px', threshold = 0, once = false, lazy = false, callback = () => {} } = {},\r\n  deps = []\r\n) {\r\n  const entryRef = useRef({})\r\n  const [entry, setEntry] = useState({})\r\n  const [element, setElement] = useState()\r\n\r\n  useEffect(() => {\r\n    if (!element) return\r\n\r\n    const intersection = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (lazy) {\r\n          entryRef.current = entry\r\n        } else {\r\n          setEntry(entry)\r\n        }\r\n\r\n        callback(entry)\r\n\r\n        if (once && entry.isIntersecting) intersection.disconnect()\r\n      },\r\n      {\r\n        root,\r\n        rootMargin,\r\n        threshold,\r\n      }\r\n    )\r\n    intersection.observe(element)\r\n\r\n    return () => {\r\n      intersection.disconnect()\r\n    }\r\n  }, [element, root, rootMargin, threshold, lazy, once, ...deps])\r\n\r\n  const get = useCallback(() => entryRef.current, [])\r\n\r\n  return [setElement, lazy ? get : entry]\r\n}\r\n","/**\r\n * This function allows you to set an interval in a functional component\r\n * @param {function} callback - The callback function\r\n * @param {number} delay - The delay between each interval\r\n */\r\n\r\nimport { useEffect } from 'react'\r\n\r\nexport function useInterval(callback, delay = 1000, deps = []) {\r\n  useEffect(() => {\r\n    const interval = setInterval(callback, delay)\r\n    return () => clearInterval(interval)\r\n  }, [delay, ...deps])\r\n}\r\n","/*\r\n  This hook checks if the device has a touch screen. It checks for the touchstart event,\r\n  as well as the maxTouchPoints property on the navigator object. It also checks the\r\n  msMaxTouchPoints property, which is specific to Microsoft browsers.\r\n*/\r\n\r\nimport { useEffect, useState } from 'react'\r\n\r\n/**\r\n * @name useIsTouchDevice\r\n * @description A React hook that detects if the device supports touch.\r\n * @returns {boolean} Whether the device supports touch or not.\r\n */\r\n\r\nexport function useIsTouchDevice() {\r\n  const [isTouchDevice, setIsTouchDevice] = useState()\r\n\r\n  useEffect(() => {\r\n    function onResize() {\r\n      setIsTouchDevice('ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0)\r\n    }\r\n\r\n    window.addEventListener('resize', onResize, false)\r\n    onResize()\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', onResize, false)\r\n    }\r\n  }, [])\r\n\r\n  return isTouchDevice\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\n/**\r\n * @name useMediaQuery\r\n * @description A React hook that detects whether a media query is true or false.\r\n * @param {string} queryString The media query to test against.\r\n * @returns {boolean} Whether the media query is true or false.\r\n */\r\n\r\nexport function useMediaQuery(queryString) {\r\n  const [isMatch, setIsMatch] = useState()\r\n\r\n  useEffect(() => {\r\n    const mediaQuery = window.matchMedia(queryString)\r\n\r\n    function onChange() {\r\n      setIsMatch(mediaQuery.matches)\r\n    }\r\n\r\n    mediaQuery.addEventListener('change', onChange, false)\r\n    onChange()\r\n\r\n    return () => mediaQuery.removeEventListener('change', onChange, false)\r\n  }, [queryString])\r\n\r\n  return isMatch\r\n}\r\n","import { useCallback, useEffect, useRef, useState } from 'react'\r\nimport debounce from 'just-debounce-it'\r\n\r\n/**\r\n * useResizeObserver - observe elements dimensions using ResizeObserver\r\n * @param {Boolean} lazy - should return a state or not\r\n * @param {Number} debounce - minimum delay between two ResizeObserver computations\r\n * @param {String} box - ResizeObserver parameter\r\n * @param {Function} callback - called on value change\r\n * @param {Array} deps - props that should trigger a new computation\r\n */\r\n\r\nexport function useResizeObserver(\r\n  { lazy = false, debounce: debounceDelay = 500, box = 'border-box', callback = () => {} } = {},\r\n  deps = [],\r\n) {\r\n  const entryRef = useRef({})\r\n  const [entry, setEntry] = useState({})\r\n  const [element, setElement] = useState()\r\n\r\n  useEffect(() => {\r\n    if (!element) return\r\n\r\n    const onResize = debounce(\r\n      ([entry]) => {\r\n        entryRef.current = entry\r\n\r\n        callback(entry)\r\n\r\n        if (!lazy) {\r\n          setEntry(entry)\r\n        }\r\n      },\r\n      debounceDelay,\r\n      true,\r\n    )\r\n\r\n    const resizeObserver = new ResizeObserver(onResize)\r\n    resizeObserver.observe(element, { box })\r\n\r\n    return () => {\r\n      resizeObserver.disconnect()\r\n      onResize.cancel()\r\n    }\r\n  }, [element, lazy, debounceDelay, box, ...deps])\r\n\r\n  const get = useCallback(() => entryRef.current, [])\r\n\r\n  return [setElement, lazy ? get : entry]\r\n}\r\n","import { useResizeObserver } from './use-resize-observer'\r\nimport debounce from 'just-debounce-it'\r\nimport { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\n// offsetTop function returns the offsetTop value of a DOM element.\r\n// The offsetTop value is the distance between the top of the element\r\n// and the top of the viewport.\r\n\r\nfunction removeParentSticky(element) {\r\n  const position = getComputedStyle(element).position\r\n\r\n  const isSticky = position === 'sticky'\r\n\r\n  if (isSticky) {\r\n    element.style.setProperty('position', 'static')\r\n    element.dataset.sticky = 'true'\r\n  }\r\n\r\n  if (element.offsetParent) {\r\n    removeParentSticky(element.offsetParent)\r\n  }\r\n}\r\n\r\nfunction addParentSticky(element) {\r\n  if (element?.dataset?.sticky === 'true') {\r\n    element.style.removeProperty('position')\r\n    element.dataset.sticky = 'true'\r\n    delete element.dataset.sticky\r\n  }\r\n\r\n  if (element.parentNode) {\r\n    addParentSticky(element.parentNode)\r\n  }\r\n}\r\n\r\nexport function offsetTop(element, accumulator = 0) {\r\n  const top = accumulator + element.offsetTop\r\n\r\n  if (element.offsetParent) {\r\n    return offsetTop(element.offsetParent, top)\r\n  }\r\n  return top\r\n}\r\n\r\n// offsetLeft function returns the offsetLeft value of a DOM element.\r\n// The offsetLeft value is the distance between the left of the element\r\n// and the left of the viewport.\r\nexport function offsetLeft(element, accumulator = 0) {\r\n  const left = accumulator + element.offsetLeft\r\n  if (element.offsetParent) {\r\n    return offsetLeft(element.offsetParent, left)\r\n  }\r\n  return left\r\n}\r\n\r\n/**\r\n * useRect - observe elements BoundingRect\r\n * @param {boolean} ignoreTransform - should include transform in the returned rect or not\r\n * @param {boolean} ignoreSticky - should ingnore parent sticky elements or not\r\n * @param {boolean} lazy - should return a state or a getter\r\n * @param {number} debounce - minimum delay between two rect computations\r\n * @param {number} resizeDebounce - minimum delay between two ResizeObserver computations\r\n * @param {Function} callback - called on value change\r\n * @param {Array} deps - props that should trigger a new rect computation\r\n */\r\n\r\nexport function useRect(\r\n  {\r\n    ignoreTransform = false,\r\n    ignoreSticky = true,\r\n    lazy = false,\r\n    debounce: debounceDelay = 500,\r\n    resizeDebounce = debounceDelay,\r\n    callback = () => {},\r\n  } = {},\r\n  deps = [],\r\n) {\r\n  const [element, setElement] = useState()\r\n  const [rect, setRect] = useState({})\r\n  const rectRef = useRef({})\r\n  const [setResizeObserverElement] = useResizeObserver(\r\n    {\r\n      lazy: true,\r\n      debounce: resizeDebounce,\r\n      callback: (entry) => {\r\n        // includes padding and border\r\n        const width = entry.borderBoxSize[0].inlineSize\r\n        const height = entry.borderBoxSize[0].blockSize\r\n\r\n        rectRef.current.width = width\r\n        rectRef.current.height = height\r\n\r\n        callback(rectRef.current)\r\n\r\n        if (!lazy) {\r\n          setRect((rect) => ({\r\n            ...rect,\r\n            width,\r\n            height,\r\n          }))\r\n        }\r\n      },\r\n    },\r\n    [lazy, resizeDebounce, ...deps],\r\n  )\r\n\r\n  // resize if body height changes\r\n  useEffect(() => {\r\n    if (!element) return\r\n\r\n    const onBodyResize = debounce(\r\n      () => {\r\n        let top, left\r\n\r\n        if (ignoreSticky) removeParentSticky(element)\r\n        if (ignoreTransform) {\r\n          top = offsetTop(element)\r\n          left = offsetLeft(element)\r\n        } else {\r\n          const rect = element.getBoundingClientRect()\r\n          top = rect.top + window.scrollY\r\n          left = rect.left + window.scrollX\r\n        }\r\n        if (ignoreSticky) addParentSticky(element)\r\n\r\n        rectRef.current.top = top\r\n        rectRef.current.left = left\r\n\r\n        callback(rectRef.current)\r\n\r\n        if (!lazy) {\r\n          setRect((rect) => ({\r\n            ...rect,\r\n            top,\r\n            left,\r\n          }))\r\n        }\r\n      },\r\n      debounceDelay,\r\n      true,\r\n    )\r\n    const resizeObserver = new ResizeObserver(onBodyResize)\r\n    resizeObserver.observe(document.body)\r\n\r\n    return () => {\r\n      resizeObserver.disconnect()\r\n      onBodyResize.cancel()\r\n    }\r\n  }, [element, lazy, debounceDelay, ignoreTransform, ignoreSticky, ...deps])\r\n\r\n  const getRect = useCallback(() => rectRef.current, [])\r\n\r\n  return [\r\n    (node) => {\r\n      setElement(node)\r\n      setResizeObserverElement(node)\r\n    },\r\n    lazy ? getRect : rect,\r\n  ]\r\n}\r\n","// This code is used to extract the contents of a component's children and return them as an array.\r\n// The code accepts two arguments, the names of the components that it should extract, and the children to extract from.\r\n// The code returns an array of the children of the components passed in the types argument.\r\n// based on:\r\n// https://medium.com/swlh/bring-vue-named-slots-to-react-87684188f18e\r\n\r\nimport { useMemo } from 'react'\r\n\r\nexport function useSlots(types = [], children = []) {\r\n  const _children = useMemo(() => children && [children].flat(), [children])\r\n  const _types = useMemo(() => types && [types].flat(), [types])\r\n  const slots = useMemo(() => {\r\n    if (!_children || !_types) {\r\n      return\r\n    }\r\n\r\n    const slots = _types.map((type) => _children.find((el) => el.type === type)?.props.children)\r\n\r\n    return types[0] ? slots : slots[0]\r\n  }, [_children, _types])\r\n\r\n  return slots\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport debounce from 'just-debounce-it'\r\n\r\n/**\r\n * @name useWindowSize\r\n * @description A React hook that listens to window size.\r\n * @returns {object} { width, height }\r\n */\r\n\r\nexport function useWindowSize(debounceDelay = 500) {\r\n  const [width, setWidth] = useState()\r\n  const [height, setHeight] = useState()\r\n\r\n  useEffect(() => {\r\n    const onWindowRezise = debounce(\r\n      () => {\r\n        setWidth(Math.min(window.innerWidth, document.documentElement.clientWidth))\r\n        setHeight(Math.min(window.innerHeight, document.documentElement.clientHeight))\r\n      },\r\n      debounceDelay,\r\n      true,\r\n    )\r\n\r\n    window.addEventListener('resize', onWindowRezise, false)\r\n\r\n    onWindowRezise()\r\n\r\n    return () => window.removeEventListener('resize', onWindowRezise, false)\r\n  }, [debounceDelay])\r\n\r\n  return { width, height }\r\n}\r\n"],"names":["useOutsideClickEvent","ref","callback","useCallback","event","current","contains","target","useEffect","document","addEventListener","handleClickOutside","removeEventListener","useIsClient","isClient","setClient","useState","useDebug","useMemo","location","window","href","searchParams","URLSearchParams","search","isDebug","includes","has","process","env","NODE_ENV","isProduction","useDocumentReadyState","readyState","setReadyState","onStateChange","useFrame","priority","Tempus","add","remove","useIntersectionObserver","root","rootMargin","threshold","once","lazy","deps","entryRef","useRef","entry","setEntry","element","setElement","isIntersecting","intersection","disconnect","observe","get","useInterval","delay","interval","setInterval","clearInterval","useIsTouchDevice","isTouchDevice","setIsTouchDevice","onResize","navigator","maxTouchPoints","msMaxTouchPoints","useMediaQuery","queryString","isMatch","setIsMatch","mediaQuery","matchMedia","matches","onChange","useResizeObserver","debounce","debounceDelay","box","resizeObserver","ResizeObserver","cancel","removeParentSticky","getComputedStyle","position","style","setProperty","dataset","sticky","offsetParent","addParentSticky","_element$dataset","removeProperty","parentNode","offsetTop","accumulator","top","left","offsetLeft","useRect","ignoreTransform","ignoreSticky","resizeDebounce","rect","setRect","rectRef","setResizeObserverElement","borderBoxSize","inlineSize","height","blockSize","width","_extends","onBodyResize","getBoundingClientRect","scrollY","scrollX","body","getRect","node","useSlots","types","children","_children","flat","_types","slots","map","type","find","el","_children$find","props","useWindowSize","setWidth","setHeight","Math","min","innerWidth","documentElement","clientWidth","innerHeight","clientHeight","onWindowRezise"],"mappings":"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"}