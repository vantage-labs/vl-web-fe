{"version":3,"file":"hamo.umd.js","sources":["../src/hooks/use-is-client.js","../src/hooks/use-resize-observer.js","../src/hooks/use-rect.js","../src/hooks/use-debug.js","../src/hooks/use-document-ready-state.js","../src/hooks/use-frame.js","../src/hooks/use-intersection-observer.js","../src/hooks/use-interval.js","../src/hooks/use-is-touch-device.js","../src/hooks/use-media-query.js","../src/hooks/use-click-outside-event.js","../src/hooks/use-slots.js","../src/hooks/use-window-size.js"],"sourcesContent":["// This component is used to check if the window object is present.\r\nimport { useEffect, useState } from 'react'\r\n\r\nexport function useIsClient() {\r\n  const [isClient, setClient] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setClient(true)\r\n  }, [])\r\n\r\n  return isClient\r\n}\r\n","import { useCallback, useEffect, useRef, useState } from 'react'\r\nimport debounce from 'just-debounce-it'\r\n\r\n/**\r\n * useResizeObserver - observe elements dimensions using ResizeObserver\r\n * @param {Boolean} lazy - should return a state or not\r\n * @param {Number} debounce - minimum delay between two ResizeObserver computations\r\n * @param {String} box - ResizeObserver parameter\r\n * @param {Function} callback - called on value change\r\n * @param {Array} deps - props that should trigger a new computation\r\n */\r\n\r\nexport function useResizeObserver(\r\n  { lazy = false, debounce: debounceDelay = 500, box = 'border-box', callback = () => {} } = {},\r\n  deps = [],\r\n) {\r\n  const entryRef = useRef({})\r\n  const [entry, setEntry] = useState({})\r\n  const [element, setElement] = useState()\r\n\r\n  useEffect(() => {\r\n    if (!element) return\r\n\r\n    const onResize = debounce(\r\n      ([entry]) => {\r\n        entryRef.current = entry\r\n\r\n        callback(entry)\r\n\r\n        if (!lazy) {\r\n          setEntry(entry)\r\n        }\r\n      },\r\n      debounceDelay,\r\n      true,\r\n    )\r\n\r\n    const resizeObserver = new ResizeObserver(onResize)\r\n    resizeObserver.observe(element, { box })\r\n\r\n    return () => {\r\n      resizeObserver.disconnect()\r\n      onResize.cancel()\r\n    }\r\n  }, [element, lazy, debounceDelay, box, ...deps])\r\n\r\n  const get = useCallback(() => entryRef.current, [])\r\n\r\n  return [setElement, lazy ? get : entry]\r\n}\r\n","import { useResizeObserver } from './use-resize-observer'\r\nimport debounce from 'just-debounce-it'\r\nimport { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\n// offsetTop function returns the offsetTop value of a DOM element.\r\n// The offsetTop value is the distance between the top of the element\r\n// and the top of the viewport.\r\n\r\nfunction removeParentSticky(element) {\r\n  const position = getComputedStyle(element).position\r\n\r\n  const isSticky = position === 'sticky'\r\n\r\n  if (isSticky) {\r\n    element.style.setProperty('position', 'static')\r\n    element.dataset.sticky = 'true'\r\n  }\r\n\r\n  if (element.offsetParent) {\r\n    removeParentSticky(element.offsetParent)\r\n  }\r\n}\r\n\r\nfunction addParentSticky(element) {\r\n  if (element?.dataset?.sticky === 'true') {\r\n    element.style.removeProperty('position')\r\n    element.dataset.sticky = 'true'\r\n    delete element.dataset.sticky\r\n  }\r\n\r\n  if (element.parentNode) {\r\n    addParentSticky(element.parentNode)\r\n  }\r\n}\r\n\r\nexport function offsetTop(element, accumulator = 0) {\r\n  const top = accumulator + element.offsetTop\r\n\r\n  if (element.offsetParent) {\r\n    return offsetTop(element.offsetParent, top)\r\n  }\r\n  return top\r\n}\r\n\r\n// offsetLeft function returns the offsetLeft value of a DOM element.\r\n// The offsetLeft value is the distance between the left of the element\r\n// and the left of the viewport.\r\nexport function offsetLeft(element, accumulator = 0) {\r\n  const left = accumulator + element.offsetLeft\r\n  if (element.offsetParent) {\r\n    return offsetLeft(element.offsetParent, left)\r\n  }\r\n  return left\r\n}\r\n\r\n/**\r\n * useRect - observe elements BoundingRect\r\n * @param {boolean} ignoreTransform - should include transform in the returned rect or not\r\n * @param {boolean} ignoreSticky - should ingnore parent sticky elements or not\r\n * @param {boolean} lazy - should return a state or a getter\r\n * @param {number} debounce - minimum delay between two rect computations\r\n * @param {number} resizeDebounce - minimum delay between two ResizeObserver computations\r\n * @param {Function} callback - called on value change\r\n * @param {Array} deps - props that should trigger a new rect computation\r\n */\r\n\r\nexport function useRect(\r\n  {\r\n    ignoreTransform = false,\r\n    ignoreSticky = true,\r\n    lazy = false,\r\n    debounce: debounceDelay = 500,\r\n    resizeDebounce = debounceDelay,\r\n    callback = () => {},\r\n  } = {},\r\n  deps = [],\r\n) {\r\n  const [element, setElement] = useState()\r\n  const [rect, setRect] = useState({})\r\n  const rectRef = useRef({})\r\n  const [setResizeObserverElement] = useResizeObserver(\r\n    {\r\n      lazy: true,\r\n      debounce: resizeDebounce,\r\n      callback: (entry) => {\r\n        // includes padding and border\r\n        const width = entry.borderBoxSize[0].inlineSize\r\n        const height = entry.borderBoxSize[0].blockSize\r\n\r\n        rectRef.current.width = width\r\n        rectRef.current.height = height\r\n\r\n        callback(rectRef.current)\r\n\r\n        if (!lazy) {\r\n          setRect((rect) => ({\r\n            ...rect,\r\n            width,\r\n            height,\r\n          }))\r\n        }\r\n      },\r\n    },\r\n    [lazy, resizeDebounce, ...deps],\r\n  )\r\n\r\n  // resize if body height changes\r\n  useEffect(() => {\r\n    if (!element) return\r\n\r\n    const onBodyResize = debounce(\r\n      () => {\r\n        let top, left\r\n\r\n        if (ignoreSticky) removeParentSticky(element)\r\n        if (ignoreTransform) {\r\n          top = offsetTop(element)\r\n          left = offsetLeft(element)\r\n        } else {\r\n          const rect = element.getBoundingClientRect()\r\n          top = rect.top + window.scrollY\r\n          left = rect.left + window.scrollX\r\n        }\r\n        if (ignoreSticky) addParentSticky(element)\r\n\r\n        rectRef.current.top = top\r\n        rectRef.current.left = left\r\n\r\n        callback(rectRef.current)\r\n\r\n        if (!lazy) {\r\n          setRect((rect) => ({\r\n            ...rect,\r\n            top,\r\n            left,\r\n          }))\r\n        }\r\n      },\r\n      debounceDelay,\r\n      true,\r\n    )\r\n    const resizeObserver = new ResizeObserver(onBodyResize)\r\n    resizeObserver.observe(document.body)\r\n\r\n    return () => {\r\n      resizeObserver.disconnect()\r\n      onBodyResize.cancel()\r\n    }\r\n  }, [element, lazy, debounceDelay, ignoreTransform, ignoreSticky, ...deps])\r\n\r\n  const getRect = useCallback(() => rectRef.current, [])\r\n\r\n  return [\r\n    (node) => {\r\n      setElement(node)\r\n      setResizeObserverElement(node)\r\n    },\r\n    lazy ? getRect : rect,\r\n  ]\r\n}\r\n","import { useMemo } from 'react'\r\nimport { useIsClient } from './use-is-client'\r\n\r\nexport function useDebug() {\r\n  const isClient = useIsClient()\r\n\r\n  const debug = useMemo(() => {\r\n    if (!isClient) return undefined\r\n\r\n    const location = window.location\r\n    const search = location.search\r\n    const href = location.href\r\n    const searchParams = new URLSearchParams(search)\r\n\r\n    const isDebug =\r\n      href.includes('#debug') || // localhost:3000/#debug\r\n      href.includes('/_debug') || // localhost:3000/_debug\r\n      searchParams.has('debug') || // localhost:3000/?debug\r\n      process.env.NODE_ENV === 'development' // localhost:3000\r\n\r\n    const isProduction =\r\n      href.includes('#production') || // localhost:3000/#production\r\n      searchParams.has('production') // localhost:3000/?production\r\n\r\n    return isDebug && !isProduction\r\n  }, [isClient])\r\n\r\n  return debug\r\n}\r\n","// useDocumentReadyState.js\r\n// This code is a custom hook that returns the current document.readyState\r\n// The useLayoutEffect hook is used to set the state of the document\r\n// The useEffect hook is used to set the state of the document to 'complete' when the document is ready\r\n\r\nimport { useEffect, useState } from 'react'\r\n\r\n/**\r\n * @name useDocumentReadyState\r\n * @description A React hook that listen to document.readyState.\r\n * @returns {string} document.readyState\r\n */\r\n\r\nexport function useDocumentReadyState() {\r\n  const [readyState, setReadyState] = useState()\r\n\r\n  useEffect(() => {\r\n    function onStateChange() {\r\n      setReadyState(document.readyState)\r\n    }\r\n\r\n    document.addEventListener('readystatechange', onStateChange, false)\r\n    onStateChange()\r\n\r\n    return () => document.removeEventListener('readystatechange', onStateChange, false)\r\n  }, [])\r\n\r\n  return readyState\r\n}\r\n","/**\r\n * Creates a requestAnimationFrame loop and manages the lifecycle of the callback.\r\n * @param {Function} callback - A function that is called every frame.\r\n * @param {Number} priority - A number that determines the order in which the callback is called.\r\n */\r\n\r\nimport Tempus from '@studio-freight/tempus'\r\nimport { useEffect } from 'react'\r\n\r\nexport function useFrame(callback, priority = 0) {\r\n  useEffect(() => {\r\n    if (callback) {\r\n      Tempus.add(callback, priority)\r\n\r\n      return () => Tempus.remove(callback)\r\n    }\r\n  }, [callback, priority])\r\n}\r\n","import { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\n/**\r\n * @name useIntersectionObserver\r\n * @description A React hook that oberves element visibility using IntersectionObserver.\r\n * @param {HTMLElement} root\r\n * @param {string} rootMargin\r\n * @param {number} threshold\r\n * @param {boolean} once\r\n * @param {boolean} lazy\r\n * @param {function} callback\r\n * @param {array} deps\r\n * @returns {array} [setElement, entry]\r\n */\r\n\r\nexport function useIntersectionObserver(\r\n  { root = null, rootMargin = '0px', threshold = 0, once = false, lazy = false, callback = () => {} } = {},\r\n  deps = []\r\n) {\r\n  const entryRef = useRef({})\r\n  const [entry, setEntry] = useState({})\r\n  const [element, setElement] = useState()\r\n\r\n  useEffect(() => {\r\n    if (!element) return\r\n\r\n    const intersection = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (lazy) {\r\n          entryRef.current = entry\r\n        } else {\r\n          setEntry(entry)\r\n        }\r\n\r\n        callback(entry)\r\n\r\n        if (once && entry.isIntersecting) intersection.disconnect()\r\n      },\r\n      {\r\n        root,\r\n        rootMargin,\r\n        threshold,\r\n      }\r\n    )\r\n    intersection.observe(element)\r\n\r\n    return () => {\r\n      intersection.disconnect()\r\n    }\r\n  }, [element, root, rootMargin, threshold, lazy, once, ...deps])\r\n\r\n  const get = useCallback(() => entryRef.current, [])\r\n\r\n  return [setElement, lazy ? get : entry]\r\n}\r\n","/**\r\n * This function allows you to set an interval in a functional component\r\n * @param {function} callback - The callback function\r\n * @param {number} delay - The delay between each interval\r\n */\r\n\r\nimport { useEffect } from 'react'\r\n\r\nexport function useInterval(callback, delay = 1000, deps = []) {\r\n  useEffect(() => {\r\n    const interval = setInterval(callback, delay)\r\n    return () => clearInterval(interval)\r\n  }, [delay, ...deps])\r\n}\r\n","/*\r\n  This hook checks if the device has a touch screen. It checks for the touchstart event,\r\n  as well as the maxTouchPoints property on the navigator object. It also checks the\r\n  msMaxTouchPoints property, which is specific to Microsoft browsers.\r\n*/\r\n\r\nimport { useEffect, useState } from 'react'\r\n\r\n/**\r\n * @name useIsTouchDevice\r\n * @description A React hook that detects if the device supports touch.\r\n * @returns {boolean} Whether the device supports touch or not.\r\n */\r\n\r\nexport function useIsTouchDevice() {\r\n  const [isTouchDevice, setIsTouchDevice] = useState()\r\n\r\n  useEffect(() => {\r\n    function onResize() {\r\n      setIsTouchDevice('ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0)\r\n    }\r\n\r\n    window.addEventListener('resize', onResize, false)\r\n    onResize()\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', onResize, false)\r\n    }\r\n  }, [])\r\n\r\n  return isTouchDevice\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\n/**\r\n * @name useMediaQuery\r\n * @description A React hook that detects whether a media query is true or false.\r\n * @param {string} queryString The media query to test against.\r\n * @returns {boolean} Whether the media query is true or false.\r\n */\r\n\r\nexport function useMediaQuery(queryString) {\r\n  const [isMatch, setIsMatch] = useState()\r\n\r\n  useEffect(() => {\r\n    const mediaQuery = window.matchMedia(queryString)\r\n\r\n    function onChange() {\r\n      setIsMatch(mediaQuery.matches)\r\n    }\r\n\r\n    mediaQuery.addEventListener('change', onChange, false)\r\n    onChange()\r\n\r\n    return () => mediaQuery.removeEventListener('change', onChange, false)\r\n  }, [queryString])\r\n\r\n  return isMatch\r\n}\r\n","/**\r\n * useOutsideClickEvent - custom hook that listens for clicks outside of a component\r\n * @param {Object} ref - React ref for the element to listen for clicks outside of\r\n * @param {Function} callback - callback function to call when a click outside of the element is detected\r\n */\r\n\r\nimport { useCallback, useEffect } from 'react'\r\n\r\nexport function useOutsideClickEvent(ref, callback) {\r\n  const handleClickOutside = useCallback(\r\n    (event) => {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        callback()\r\n      }\r\n    },\r\n    [ref, callback]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      document.addEventListener('mousedown', handleClickOutside)\r\n      return () => {\r\n        document.removeEventListener('mousedown', handleClickOutside)\r\n      }\r\n    }\r\n  }, [handleClickOutside, ref])\r\n}\r\n","// This code is used to extract the contents of a component's children and return them as an array.\r\n// The code accepts two arguments, the names of the components that it should extract, and the children to extract from.\r\n// The code returns an array of the children of the components passed in the types argument.\r\n// based on:\r\n// https://medium.com/swlh/bring-vue-named-slots-to-react-87684188f18e\r\n\r\nimport { useMemo } from 'react'\r\n\r\nexport function useSlots(types = [], children = []) {\r\n  const _children = useMemo(() => children && [children].flat(), [children])\r\n  const _types = useMemo(() => types && [types].flat(), [types])\r\n  const slots = useMemo(() => {\r\n    if (!_children || !_types) {\r\n      return\r\n    }\r\n\r\n    const slots = _types.map((type) => _children.find((el) => el.type === type)?.props.children)\r\n\r\n    return types[0] ? slots : slots[0]\r\n  }, [_children, _types])\r\n\r\n  return slots\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport debounce from 'just-debounce-it'\r\n\r\n/**\r\n * @name useWindowSize\r\n * @description A React hook that listens to window size.\r\n * @returns {object} { width, height }\r\n */\r\n\r\nexport function useWindowSize(debounceDelay = 500) {\r\n  const [width, setWidth] = useState()\r\n  const [height, setHeight] = useState()\r\n\r\n  useEffect(() => {\r\n    const onWindowRezise = debounce(\r\n      () => {\r\n        setWidth(Math.min(window.innerWidth, document.documentElement.clientWidth))\r\n        setHeight(Math.min(window.innerHeight, document.documentElement.clientHeight))\r\n      },\r\n      debounceDelay,\r\n      true,\r\n    )\r\n\r\n    window.addEventListener('resize', onWindowRezise, false)\r\n\r\n    onWindowRezise()\r\n\r\n    return () => window.removeEventListener('resize', onWindowRezise, false)\r\n  }, [debounceDelay])\r\n\r\n  return { width, height }\r\n}\r\n"],"names":["useIsClient","_useState","useState","isClient","setClient","useEffect","useResizeObserver","_temp","deps","_ref","lazy","_ref$lazy","debounce","debounceDelay","_ref$debounce","box","_ref$box","callback","_ref$callback","useRef","entry","setEntry","element","_useState2","setElement","onResize","_ref2","entryRef","current","resizeObserver","ResizeObserver","observe","disconnect","cancel","useCallback","get","removeParentSticky","getComputedStyle","position","style","setProperty","dataset","sticky","offsetParent","addParentSticky","_element$dataset","removeProperty","parentNode","offsetTop","accumulator","top","offsetLeft","left","useDebug","useMemo","location","window","href","searchParams","URLSearchParams","search","isDebug","includes","has","process","env","NODE_ENV","isProduction","readyState","setReadyState","onStateChange","document","addEventListener","removeEventListener","priority","Tempus","add","remove","root","_ref$root","rootMargin","_ref$rootMargin","threshold","_ref$threshold","_ref$once","once","intersection","IntersectionObserver","isIntersecting","delay","interval","setInterval","clearInterval","isTouchDevice","setIsTouchDevice","navigator","maxTouchPoints","msMaxTouchPoints","queryString","isMatch","setIsMatch","matchMedia","onChange","mediaQuery","matches","ref","event","contains","target","handleClickOutside","useRect","_ref$ignoreTransform","ignoreTransform","ignoreSticky","_ref$ignoreSticky","_ref$resizeDebounce","resizeDebounce","rect","setRect","setResizeObserverElement","width","borderBoxSize","inlineSize","blockSize","rectRef","height","_extends","concat","getBoundingClientRect","scrollY","scrollX","onBodyResize","body","getRect","node","types","children","_children","flat","_types","slots","map","type","_children$find","find","el","props","setWidth","setHeight","onWindowRezise","Math","min","innerWidth","documentElement","clientWidth","innerHeight","clientHeight"],"mappings":"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"}