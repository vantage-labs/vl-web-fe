{"version":3,"file":"react-lenis.js","sources":["../src/index.jsx"],"sourcesContent":["'use client'\r\n\r\nimport { useFrame } from '@studio-freight/hamo'\r\nimport Lenis from '@studio-freight/lenis'\r\nimport PropTypes from 'prop-types' // ES6\r\nimport React, {\r\n  createContext,\r\n  forwardRef,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n} from 'react'\r\nimport { create } from 'zustand'\r\nimport cn from 'clsx'\r\n\r\nexport const LenisContext = createContext()\r\n\r\nconst useRoot = create(() => ({}))\r\n\r\nfunction useCurrentLenis() {\r\n  const local = useContext(LenisContext)\r\n  const root = useRoot()\r\n\r\n  return local ?? root\r\n}\r\n\r\n/**\r\n * @param {CallbackFunction} [callback] Callback to be called on scroll\r\n * @param {Array=} [deps=[]] Dependencies for callback\r\n * @param {number=} [priority=0] Priority of callback (lower priority callbacks are called first)\r\n *\r\n * @returns {LenisInstance} Lenis instance\r\n */\r\nexport function useLenis(callback, deps = [], priority = 0) {\r\n  const { lenis, addCallback, removeCallback } = useCurrentLenis()\r\n\r\n  useEffect(() => {\r\n    if (!callback || !addCallback || !removeCallback || !lenis) return\r\n\r\n    addCallback(callback, priority)\r\n    callback(lenis)\r\n\r\n    return () => {\r\n      removeCallback(callback)\r\n    }\r\n  }, [lenis, addCallback, removeCallback, priority, ...deps])\r\n\r\n  return lenis\r\n}\r\n\r\n/**\r\n * @param {boolean=} [root] Whether Lenis will be initialized on document.documentElement\r\n * @param {ReactLenisOptions} [options={}] Lenis options {@link ReactLenisOptions}\r\n * @param {boolean=} [autoRaf=true] Whether to call Lenis.raf automatically on every frame\r\n * @param {number=} [rafPriority=0] Priority of Lenis.raf call (lower priority callbacks are called first)\r\n * @param {string=} [className] Class name to be applied to the wrapper\r\n */\r\nconst ReactLenis = forwardRef(\r\n  ({ children, root = false, options = {}, autoRaf = true, rafPriority = 0, className, ...props }, ref) => {\r\n    const wrapperRef = useRef()\r\n    const contentRef = useRef()\r\n\r\n    const [lenis, setLenis] = useState()\r\n\r\n    const callbacks = useRef([])\r\n\r\n    const addCallback = useCallback((callback, priority) => {\r\n      callbacks.current.push({ callback, priority })\r\n      callbacks.current.sort((a, b) => a.priority - b.priority)\r\n    }, [])\r\n\r\n    const removeCallback = useCallback((callback) => {\r\n      callbacks.current = callbacks.current.filter((cb) => cb.callback !== callback)\r\n    }, [])\r\n\r\n    useImperativeHandle(ref, () => lenis, [lenis])\r\n\r\n    useEffect(() => {\r\n      const lenis = new Lenis({\r\n        ...options,\r\n        ...(!root && {\r\n          wrapper: wrapperRef.current,\r\n          content: contentRef.current,\r\n        }),\r\n      })\r\n\r\n      setLenis(lenis)\r\n\r\n      return () => {\r\n        lenis.destroy()\r\n        setLenis(undefined)\r\n      }\r\n    }, [root, JSON.stringify(options)])\r\n\r\n    useFrame((time) => {\r\n      if (autoRaf) {\r\n        lenis?.raf(time)\r\n      }\r\n    }, rafPriority)\r\n\r\n    useEffect(() => {\r\n      if (root && lenis) {\r\n        useRoot.setState({ lenis, addCallback, removeCallback })\r\n      }\r\n    }, [root, lenis, addCallback, removeCallback])\r\n\r\n    const onScroll = useCallback((e) => {\r\n      for (let i = 0; i < callbacks.current.length; i++) {\r\n        callbacks.current[i].callback(e)\r\n      }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      lenis?.on('scroll', onScroll)\r\n\r\n      return () => {\r\n        lenis?.off('scroll', onScroll)\r\n      }\r\n    }, [lenis, onScroll])\r\n\r\n    const onClassNameChange = useCallback(() => {\r\n      if (wrapperRef.current) wrapperRef.current.className = cn(lenis?.className, className)\r\n    }, [lenis, className])\r\n\r\n    useEffect(() => {\r\n      onClassNameChange()\r\n\r\n      lenis?.on('className change', onClassNameChange)\r\n\r\n      return () => {\r\n        lenis?.off('className change', onClassNameChange)\r\n      }\r\n    }, [lenis, onClassNameChange])\r\n\r\n    return (\r\n      <LenisContext.Provider value={{ lenis, addCallback, removeCallback }}>\r\n        {root ? (\r\n          children\r\n        ) : (\r\n          <div ref={wrapperRef} className={cn(lenis?.className, className)} {...props}>\r\n            <div ref={contentRef}>{children}</div>\r\n          </div>\r\n        )}\r\n      </LenisContext.Provider>\r\n    )\r\n  },\r\n)\r\nReactLenis.displayName = 'ReactLenis'\r\n\r\nReactLenis.propTypes = {\r\n  children: PropTypes.node,\r\n  root: PropTypes.bool,\r\n  options: PropTypes.object,\r\n  autoRaf: PropTypes.bool,\r\n  rafPriority: PropTypes.number,\r\n  className: PropTypes.string,\r\n}\r\n\r\nexport { ReactLenis, ReactLenis as Lenis }\r\n\r\n/**\r\n * @callback EasingFunction\r\n * @param {number} rawValue\r\n * @returns {number} eased output value\r\n */\r\n\r\n/**\r\n * @callback CallbackFunction\r\n * @param {LenisInstance} instance\r\n */\r\n\r\n/**\r\n * @typedef {Object} CallbackEvents\r\n * @property {CallbackFunction[]} scroll scroll events\r\n */\r\n\r\n/**\r\n * @callback RAF\r\n * @param {number} time\r\n */\r\n\r\n/**\r\n * @typedef {Object} ScrollToParams\r\n * @property {number} [offset] equivalent to scroll-padding-top\r\n * @property {number} [lerp] animation interpolation rate\r\n * @property {number} [duration] animation duration (in seconds)\r\n * @property {EasingFunction} [easing] animation easing\r\n * @property {boolean} [immediate] ignore duration, easing and lerp\r\n * @property {boolean} [lock] whether or not to prevent the user from scrolling until the target is reached\r\n * @property {boolean} [force] reach target even if instance is stopped\r\n * @property {CallbackFunction} [onComplete] called when the target is reached\r\n */\r\n\r\n/**\r\n * @callback ScrollTo\r\n * @param {number|string|HTMLElement} target\r\n * @param {ScrollToParams} [options]\r\n */\r\n\r\n/**\r\n * @typedef {Object} ReactLenisOptions\r\n * @property {(HTMLElement|Window)} [wrapper=window] interpolation rate\r\n * @property {HTMLElement=} [content=document.documentElement]\r\n * @property {(HTMLElement|Window)} [wheelEventsTarget=wrapper]\r\n * @property {number=} [lerp=0.1] interpolation rate\r\n * @property {number=} [duration=1.2] scroll duration\r\n * @property {EasingFunction=} [easing=(t) => Math.min(1, 1.001 - Math.pow(2, -10 * t))] // easing function to apply to scroll values\r\n * @property {string=} [orientation='vertical'] scroll orientation\r\n * @property {string=} [gestureOrientation='vertical']\r\n * @property {boolean=} [smoothWheel=true]\r\n * @property {boolean=} [smoothTouch=false]\r\n * @property {boolean=} [syncTouch=false]\r\n * @property {number=} [syncTouchLerp=0.1]\r\n * @property {number=} [touchInertiaMultiplier=1]\r\n * @property {boolean=} [normalizeWheel=false]\r\n * @property {boolean=} [infinite=false] enable infinite scroll\r\n * @property {boolean=} [autoResize=true]\r\n */\r\n\r\n/**\r\n * @typedef {Object} Dimensions\r\n * @property {(HTMLElement|Window)} wrapper Wrapper lenis is applied to\r\n * @property {HTMLElement} content\r\n * @property {ResizeObserver} contentResizeObserver\r\n * @property {function():void} resize\r\n * @property {function():void} onContentResize\r\n * @property {function():void} onWrapperResize\r\n * @property {number} width viewport width\r\n * @property {number} height viewport height\r\n * @property {number} scrollWidth\r\n * @property {number} scrollHeight\r\n */\r\n\r\n/**\r\n * @typedef {Object} Emitter\r\n * @property {CallbackEvents} events\r\n */\r\n\r\n/**\r\n * @callback EventHandler\r\n * @param {string} id lenis instance event\r\n * @param {CallbackFunction} fn callback\r\n */\r\n\r\n/**\r\n * @typedef {Object} LenisInstance\r\n * @property {number} animatedScroll Current scroll value\r\n * @property {Dimensions} dimensions Dimensions instance\r\n * @property {number} direction scroll direction; 0: stopped, 1: scrolling up, -1: scrolling down\r\n * @property {Emitter} emitter Emitter instance\r\n * @property {ReactLenisOptions} options Instance options {@link ReactLenisOptions}\r\n * @property {number} targetScroll Target scroll value\r\n * @property {number} time Time elapsed since instance creation\r\n * @property {number} actualScroll Current scroll value registered by the browser\r\n * @property {number} velocity Current scroll velocity\r\n * @property {boolean} isHorizontal Whether or not the instance is horizontal\r\n * @property {boolean} isScrolling Whether or not the instance is being animated\r\n * @property {boolean} isSmooth Whether or not the instance is animated\r\n * @property {boolean} isStopped Whether or not the user should be able to scroll\r\n * @property {number} limit Maximum scroll value\r\n * @property {number} progress Scroll progress from 0 to 1\r\n * @property {HTMLElement} rootElement Element on which Lenis is instanced\r\n * @property {number} scroll Current scroll value (handles infinite scroll if activated)\r\n * @property {function():void} stop Pauses the scroll\r\n * @property {function():void} start Resumes the scroll\r\n * @property {function():void} resize Compute internal sizes, has to be used if autoResize option is false\r\n * @property {function():void} destroy Destroys the instance and removes all events\r\n * @property {EventHandler} on Lenis event listener\r\n * @property {ScrollTo} scrollTo Scroll to target\r\n * @property {RAF} raf Must be called every frame for internal usage\r\n */\r\n"],"names":["_excluded","LenisContext","createContext","useRoot","create","ReactLenis","forwardRef","_ref","ref","children","_ref$root","root","_ref$options","options","_ref$autoRaf","autoRaf","_ref$rafPriority","rafPriority","className","props","_objectWithoutPropertiesLoose","wrapperRef","useRef","contentRef","_useState","useState","lenis","setLenis","callbacks","addCallback","useCallback","callback","priority","current","push","sort","a","b","removeCallback","filter","cb","useImperativeHandle","useEffect","Lenis","_extends","wrapper","content","destroy","undefined","JSON","stringify","useFrame","time","raf","setState","onScroll","e","i","length","on","off","onClassNameChange","cn","React","createElement","Provider","value","displayName","propTypes","PropTypes","node","bool","object","number","string","deps","local","_useCurrentLenis","useContext","concat"],"mappings":"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"}